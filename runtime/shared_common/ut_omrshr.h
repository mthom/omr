/*
 *  Do not edit this file 
 *  Generated by TraceGen
 */
#ifndef UTE_OMRSHR_MODULE_HEADER
#define UTE_OMRSHR_MODULE_HEADER
#include "ute_module.h"
#if !defined(UT_DIRECT_TRACE_REGISTRATION)
#include "jni.h"
#endif /* !defined(UT_DIRECT_TRACE_REGISTRATION) */
#ifndef UT_TRACE_OVERHEAD
#define UT_TRACE_OVERHEAD 1
#endif
#ifndef UT_THREAD
#define UT_THREAD(thr) (void *)thr
#endif /* UT_THREAD */
#ifndef UT_STR
#define UT_STR(arg) #arg
#endif
#ifdef __cplusplus
extern "C" {
#endif

#if (defined (__clang__) && !defined(_MSC_VER))
#include <unistd.h>
#define Trace_Unreachable() _exit(-1)
#else
#define Trace_Unreachable()
#endif

#if defined(UT_DIRECT_TRACE_REGISTRATION)
int32_t registeromrshrWithTrace(UtInterface * utIntf, UtModuleInfo* containerName);
int32_t deregisteromrshrWithTrace(UtInterface * utIntf);
#define UT_MODULE_LOADED(utIntf) registeromrshrWithTrace((utIntf), NULL);
#define UT_MODULE_UNLOADED(utIntf) deregisteromrshrWithTrace((utIntf));
#define UT_OMRSHR_MODULE_LOADED(utIntf) registeromrshrWithTrace((utIntf), NULL);
#define UT_OMRSHR_MODULE_UNLOADED(utIntf) deregisteromrshrWithTrace((utIntf));
#else /* defined(UT_DIRECT_TRACE_REGISTRATION) */
int32_t registeromrshrWithTrace(JavaVM * vm, UtModuleInfo* containerName);
int32_t deregisteromrshrWithTrace(JavaVM * vm);
#define UT_MODULE_LOADED(vm) registeromrshrWithTrace((JavaVM *)(vm), NULL);
#define UT_MODULE_UNLOADED(vm) deregisteromrshrWithTrace((JavaVM *)(vm));
#define UT_OMRSHR_MODULE_LOADED(vm) registeromrshrWithTrace((JavaVM *)(vm), NULL);
#define UT_OMRSHR_MODULE_UNLOADED(vm) deregisteromrshrWithTrace((JavaVM *)(vm));
#endif /* defined(UT_DIRECT_TRACE_REGISTRATION) */

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_SHR_VMInitStages_Event1  (omrshr_UtActive[0] != 0)
#define Trc_SHR_VMInitStages_Event1(thr) do { /* tracepoint name: omrshr.0 */ \
	if ((unsigned char) omrshr_UtActive[0] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((0u << 8) | omrshr_UtActive[0]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_SHR_VMInitStages_Event1  (0)
#define Trc_SHR_VMInitStages_Event1(thr)   /* tracepoint name: omrshr.0 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_newInstance_Entry(P1) do { /* tracepoint name: omrshr.4 */ \
	if ((unsigned char) omrshr_UtActive[4] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((4u << 8) | omrshr_UtActive[4]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_newInstance_Entry(P1)   /* tracepoint name: omrshr.4 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_newInstance_Exit() do { /* tracepoint name: omrshr.5 */ \
	if ((unsigned char) omrshr_UtActive[5] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((5u << 8) | omrshr_UtActive[5]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_newInstance_Exit()   /* tracepoint name: omrshr.5 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_initialize_Exit() do { /* tracepoint name: omrshr.7 */ \
	if ((unsigned char) omrshr_UtActive[7] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((7u << 8) | omrshr_UtActive[7]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_initialize_Exit()   /* tracepoint name: omrshr.7 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_cleanup_Entry(thr) do { /* tracepoint name: omrshr.8 */ \
	if ((unsigned char) omrshr_UtActive[8] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((8u << 8) | omrshr_UtActive[8]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_cleanup_Entry(thr)   /* tracepoint name: omrshr.8 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_cleanup_Exit(thr) do { /* tracepoint name: omrshr.9 */ \
	if ((unsigned char) omrshr_UtActive[9] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((9u << 8) | omrshr_UtActive[9]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_cleanup_Exit(thr)   /* tracepoint name: omrshr.9 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.10 */ \
	if ((unsigned char) omrshr_UtActive[10] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((10u << 8) | omrshr_UtActive[10]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Entry(thr, P1, P2)   /* tracepoint name: omrshr.10 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_ExitOK(thr) do { /* tracepoint name: omrshr.11 */ \
	if ((unsigned char) omrshr_UtActive[11] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((11u << 8) | omrshr_UtActive[11]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_ExitOK(thr)   /* tracepoint name: omrshr.11 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Exit1(thr) do { /* tracepoint name: omrshr.12 */ \
	if ((unsigned char) omrshr_UtActive[12] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((12u << 8) | omrshr_UtActive[12]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Exit1(thr)   /* tracepoint name: omrshr.12 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Exit4(thr) do { /* tracepoint name: omrshr.15 */ \
	if ((unsigned char) omrshr_UtActive[15] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((15u << 8) | omrshr_UtActive[15]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Exit4(thr)   /* tracepoint name: omrshr.15 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Exit5(thr) do { /* tracepoint name: omrshr.16 */ \
	if ((unsigned char) omrshr_UtActive[16] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((16u << 8) | omrshr_UtActive[16]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Exit5(thr)   /* tracepoint name: omrshr.16 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Exit6(thr) do { /* tracepoint name: omrshr.17 */ \
	if ((unsigned char) omrshr_UtActive[17] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((17u << 8) | omrshr_UtActive[17]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Exit6(thr)   /* tracepoint name: omrshr.17 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startup_Exit7(thr) do { /* tracepoint name: omrshr.18 */ \
	if ((unsigned char) omrshr_UtActive[18] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((18u << 8) | omrshr_UtActive[18]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startup_Exit7(thr)   /* tracepoint name: omrshr.18 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createAsROMImageSegment_Entry() do { /* tracepoint name: omrshr.19 */ \
	if ((unsigned char) omrshr_UtActive[19] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((19u << 8) | omrshr_UtActive[19]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_createAsROMImageSegment_Entry()   /* tracepoint name: omrshr.19 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createAsROMImageSegment_Exit() do { /* tracepoint name: omrshr.20 */ \
	if ((unsigned char) omrshr_UtActive[20] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((20u << 8) | omrshr_UtActive[20]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_createAsROMImageSegment_Exit()   /* tracepoint name: omrshr.20 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.24 */ \
	if ((unsigned char) omrshr_UtActive[24] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((24u << 8) | omrshr_UtActive[24]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.24 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_ActuallyAdding(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.25 */ \
	if ((unsigned char) omrshr_UtActive[25] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((25u << 8) | omrshr_UtActive[25]), "\12\377\12\377\4\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_ActuallyAdding(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.25 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_SettingTimestamp(thr, P1, P2, P3) do { /* tracepoint name: omrshr.26 */ \
	if ((unsigned char) omrshr_UtActive[26] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((26u << 8) | omrshr_UtActive[26]), "\12\377\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_SettingTimestamp(thr, P1, P2, P3)   /* tracepoint name: omrshr.26 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_CopyingIntoCache(thr, P1) do { /* tracepoint name: omrshr.27 */ \
	if ((unsigned char) omrshr_UtActive[27] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((27u << 8) | omrshr_UtActive[27]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_CopyingIntoCache(thr, P1)   /* tracepoint name: omrshr.27 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_UpdatingSegment(thr, P1) do { /* tracepoint name: omrshr.28 */ \
	if ((unsigned char) omrshr_UtActive[28] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((28u << 8) | omrshr_UtActive[28]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_UpdatingSegment(thr, P1)   /* tracepoint name: omrshr.28 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_ExitNull(thr) do { /* tracepoint name: omrshr.29 */ \
	if ((unsigned char) omrshr_UtActive[29] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((29u << 8) | omrshr_UtActive[29]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_ExitNull(thr)   /* tracepoint name: omrshr.29 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_Exit(thr, P1, P2, P3) do { /* tracepoint name: omrshr.30 */ \
	if ((unsigned char) omrshr_UtActive[30] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((30u << 8) | omrshr_UtActive[30]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_Exit(thr, P1, P2, P3)   /* tracepoint name: omrshr.30 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.31 */ \
	if ((unsigned char) omrshr_UtActive[31] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((31u << 8) | omrshr_UtActive[31]), "\12\377\12\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.31 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitSuccess(thr, P1, P2, P3) do { /* tracepoint name: omrshr.32 */ \
	if ((unsigned char) omrshr_UtActive[32] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((32u << 8) | omrshr_UtActive[32]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitSuccess(thr, P1, P2, P3)   /* tracepoint name: omrshr.32 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNoClasspath(thr, P1) do { /* tracepoint name: omrshr.33 */ \
	if ((unsigned char) omrshr_UtActive[33] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((33u << 8) | omrshr_UtActive[33]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNoClasspath(thr, P1)   /* tracepoint name: omrshr.33 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_FoundDuplicate(thr, P1, P2) do { /* tracepoint name: omrshr.34 */ \
	if ((unsigned char) omrshr_UtActive[34] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((34u << 8) | omrshr_UtActive[34]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_FoundDuplicate(thr, P1, P2)   /* tracepoint name: omrshr.34 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_FoundOrphanROMClass(thr, P1, P2, P3) do { /* tracepoint name: omrshr.35 */ \
	if ((unsigned char) omrshr_UtActive[35] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((35u << 8) | omrshr_UtActive[35]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_FoundOrphanROMClass(thr, P1, P2, P3)   /* tracepoint name: omrshr.35 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_IsROMClassInCache(thr, P1) do { /* tracepoint name: omrshr.36 */ \
	if ((unsigned char) omrshr_UtActive[36] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((36u << 8) | omrshr_UtActive[36]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_IsROMClassInCache(thr, P1)   /* tracepoint name: omrshr.36 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNull1(thr) do { /* tracepoint name: omrshr.37 */ \
	if ((unsigned char) omrshr_UtActive[37] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((37u << 8) | omrshr_UtActive[37]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNull1(thr)   /* tracepoint name: omrshr.37 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_Exception1(thr) do { /* tracepoint name: omrshr.38 */ \
	if ((unsigned char) omrshr_UtActive[38] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((38u << 8) | omrshr_UtActive[38]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_Exception1(thr)   /* tracepoint name: omrshr.38 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNull2(thr, P1) do { /* tracepoint name: omrshr.39 */ \
	if ((unsigned char) omrshr_UtActive[39] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((39u << 8) | omrshr_UtActive[39]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNull2(thr, P1)   /* tracepoint name: omrshr.39 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.40 */ \
	if ((unsigned char) omrshr_UtActive[40] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((40u << 8) | omrshr_UtActive[40]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_Entry(thr, P1, P2)   /* tracepoint name: omrshr.40 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_Exit(thr, P1) do { /* tracepoint name: omrshr.41 */ \
	if ((unsigned char) omrshr_UtActive[41] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((41u << 8) | omrshr_UtActive[41]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_Exit(thr, P1)   /* tracepoint name: omrshr.41 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_ExitNull1(thr) do { /* tracepoint name: omrshr.42 */ \
	if ((unsigned char) omrshr_UtActive[42] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((42u << 8) | omrshr_UtActive[42]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_ExitNull1(thr)   /* tracepoint name: omrshr.42 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_ExitNull2(thr) do { /* tracepoint name: omrshr.43 */ \
	if ((unsigned char) omrshr_UtActive[43] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((43u << 8) | omrshr_UtActive[43]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_ExitNull2(thr)   /* tracepoint name: omrshr.43 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addClasspathToCache_Entry(thr, P1) do { /* tracepoint name: omrshr.44 */ \
	if ((unsigned char) omrshr_UtActive[44] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((44u << 8) | omrshr_UtActive[44]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addClasspathToCache_Entry(thr, P1)   /* tracepoint name: omrshr.44 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addClasspathToCache_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.45 */ \
	if ((unsigned char) omrshr_UtActive[45] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((45u << 8) | omrshr_UtActive[45]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_addClasspathToCache_Exit(thr, P1, P2)   /* tracepoint name: omrshr.45 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addClasspathToCache_Exit_Null(thr) do { /* tracepoint name: omrshr.46 */ \
	if ((unsigned char) omrshr_UtActive[46] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((46u << 8) | omrshr_UtActive[46]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addClasspathToCache_Exit_Null(thr)   /* tracepoint name: omrshr.46 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.60 */ \
	if ((unsigned char) omrshr_UtActive[60] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((60u << 8) | omrshr_UtActive[60]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.60 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Exit(thr, P1, P2, P3) do { /* tracepoint name: omrshr.61 */ \
	if ((unsigned char) omrshr_UtActive[61] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((61u << 8) | omrshr_UtActive[61]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Exit(thr, P1, P2, P3)   /* tracepoint name: omrshr.61 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Event_AlreadyMarked(thr, P1, P2) do { /* tracepoint name: omrshr.62 */ \
	if ((unsigned char) omrshr_UtActive[62] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((62u << 8) | omrshr_UtActive[62]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Event_AlreadyMarked(thr, P1, P2)   /* tracepoint name: omrshr.62 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Event_DoingMark(thr, P1, P2, P3) do { /* tracepoint name: omrshr.63 */ \
	if ((unsigned char) omrshr_UtActive[63] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((63u << 8) | omrshr_UtActive[63]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Event_DoingMark(thr, P1, P2, P3)   /* tracepoint name: omrshr.63 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Exception1(thr) do { /* tracepoint name: omrshr.64 */ \
	if ((unsigned char) omrshr_UtActive[64] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((64u << 8) | omrshr_UtActive[64]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Exception1(thr)   /* tracepoint name: omrshr.64 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markStale_Exception2(thr, P1, P2) do { /* tracepoint name: omrshr.65 */ \
	if ((unsigned char) omrshr_UtActive[65] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((65u << 8) | omrshr_UtActive[65]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_markStale_Exception2(thr, P1, P2)   /* tracepoint name: omrshr.65 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createPathString_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.66 */ \
	if ((unsigned char) omrshr_UtActive[66] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((66u << 8) | omrshr_UtActive[66]), "\12\377\12\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_createPathString_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.66 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createPathString_Exit(thr, P1) do { /* tracepoint name: omrshr.67 */ \
	if ((unsigned char) omrshr_UtActive[67] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((67u << 8) | omrshr_UtActive[67]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_createPathString_Exit(thr, P1)   /* tracepoint name: omrshr.67 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createPathString_Exception1(thr) do { /* tracepoint name: omrshr.68 */ \
	if ((unsigned char) omrshr_UtActive[68] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((68u << 8) | omrshr_UtActive[68]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_createPathString_Exception1(thr)   /* tracepoint name: omrshr.68 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markItemStale_Entry(thr, P1) do { /* tracepoint name: omrshr.69 */ \
	if ((unsigned char) omrshr_UtActive[69] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((69u << 8) | omrshr_UtActive[69]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_markItemStale_Entry(thr, P1)   /* tracepoint name: omrshr.69 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markItemStale_Exit(thr, P1) do { /* tracepoint name: omrshr.70 */ \
	if ((unsigned char) omrshr_UtActive[70] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((70u << 8) | omrshr_UtActive[70]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_markItemStale_Exit(thr, P1)   /* tracepoint name: omrshr.70 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_destroy_Entry(thr) do { /* tracepoint name: omrshr.71 */ \
	if ((unsigned char) omrshr_UtActive[71] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((71u << 8) | omrshr_UtActive[71]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_destroy_Entry(thr)   /* tracepoint name: omrshr.71 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_destroy_Exit(thr) do { /* tracepoint name: omrshr.72 */ \
	if ((unsigned char) omrshr_UtActive[72] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((72u << 8) | omrshr_UtActive[72]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_destroy_Exit(thr)   /* tracepoint name: omrshr.72 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_reportCorruptCache_Entry(thr) do { /* tracepoint name: omrshr.75 */ \
	if ((unsigned char) omrshr_UtActive[75] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((75u << 8) | omrshr_UtActive[75]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_reportCorruptCache_Entry(thr)   /* tracepoint name: omrshr.75 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_reportCorruptCache_Exit(thr) do { /* tracepoint name: omrshr.76 */ \
	if ((unsigned char) omrshr_UtActive[76] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((76u << 8) | omrshr_UtActive[76]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_reportCorruptCache_Exit(thr)   /* tracepoint name: omrshr.76 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_Entry(thr, P1) do { /* tracepoint name: omrshr.77 */ \
	if ((unsigned char) omrshr_UtActive[77] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((77u << 8) | omrshr_UtActive[77]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_Entry(thr, P1)   /* tracepoint name: omrshr.77 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.78 */ \
	if ((unsigned char) omrshr_UtActive[78] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((78u << 8) | omrshr_UtActive[78]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_Exit(thr, P1, P2)   /* tracepoint name: omrshr.78 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_Event_NotMatched(thr, P1, P2) do { /* tracepoint name: omrshr.79 */ \
	if ((unsigned char) omrshr_UtActive[79] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((79u << 8) | omrshr_UtActive[79]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_Event_NotMatched(thr, P1, P2)   /* tracepoint name: omrshr.79 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_Exit1(thr, P1) do { /* tracepoint name: omrshr.80 */ \
	if ((unsigned char) omrshr_UtActive[80] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((80u << 8) | omrshr_UtActive[80]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_Exit1(thr, P1)   /* tracepoint name: omrshr.80 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_Exit2(thr) do { /* tracepoint name: omrshr.81 */ \
	if ((unsigned char) omrshr_UtActive[81] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((81u << 8) | omrshr_UtActive[81]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_Exit2(thr)   /* tracepoint name: omrshr.81 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_refreshHashtables_Entry(thr) do { /* tracepoint name: omrshr.82 */ \
	if ((unsigned char) omrshr_UtActive[82] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((82u << 8) | omrshr_UtActive[82]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_refreshHashtables_Entry(thr)   /* tracepoint name: omrshr.82 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_refreshHashtables_Exit(thr, P1) do { /* tracepoint name: omrshr.83 */ \
	if ((unsigned char) omrshr_UtActive[83] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((83u << 8) | omrshr_UtActive[83]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_refreshHashtables_Exit(thr, P1)   /* tracepoint name: omrshr.83 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_isStale_Entry(P1) do { /* tracepoint name: omrshr.84 */ \
	if ((unsigned char) omrshr_UtActive[84] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((84u << 8) | omrshr_UtActive[84]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_isStale_Entry(P1)   /* tracepoint name: omrshr.84 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_isStale_ExitStale(P1) do { /* tracepoint name: omrshr.85 */ \
	if ((unsigned char) omrshr_UtActive[85] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((85u << 8) | omrshr_UtActive[85]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_isStale_ExitStale(P1)   /* tracepoint name: omrshr.85 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_isStale_ExitNotStale(P1) do { /* tracepoint name: omrshr.86 */ \
	if ((unsigned char) omrshr_UtActive[86] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((86u << 8) | omrshr_UtActive[86]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_isStale_ExitNotStale(P1)   /* tracepoint name: omrshr.86 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_isStale_ExitNoItem() do { /* tracepoint name: omrshr.87 */ \
	if ((unsigned char) omrshr_UtActive[87] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((87u << 8) | omrshr_UtActive[87]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_isStale_ExitNoItem()   /* tracepoint name: omrshr.87 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_checkForCrash_Exception(thr) do { /* tracepoint name: omrshr.88 */ \
	if ((unsigned char) omrshr_UtActive[88] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((88u << 8) | omrshr_UtActive[88]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_checkForCrash_Exception(thr)   /* tracepoint name: omrshr.88 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_newInstance_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.89 */ \
	if ((unsigned char) omrshr_UtActive[89] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((89u << 8) | omrshr_UtActive[89]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_newInstance_Entry(P1, P2, P3)   /* tracepoint name: omrshr.89 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_newInstance_Exit(P1) do { /* tracepoint name: omrshr.90 */ \
	if ((unsigned char) omrshr_UtActive[90] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((90u << 8) | omrshr_UtActive[90]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_newInstance_Exit(P1)   /* tracepoint name: omrshr.90 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_initialize_Entry() do { /* tracepoint name: omrshr.91 */ \
	if ((unsigned char) omrshr_UtActive[91] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((91u << 8) | omrshr_UtActive[91]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_initialize_Entry()   /* tracepoint name: omrshr.91 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_initialize_Exit() do { /* tracepoint name: omrshr.92 */ \
	if ((unsigned char) omrshr_UtActive[92] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((92u << 8) | omrshr_UtActive[92]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_initialize_Exit()   /* tracepoint name: omrshr.92 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.93 */ \
	if ((unsigned char) omrshr_UtActive[93] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((93u << 8) | omrshr_UtActive[93]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Entry(P1, P2, P3)   /* tracepoint name: omrshr.93 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Exit1() do { /* tracepoint name: omrshr.94 */ \
	if ((unsigned char) omrshr_UtActive[94] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((94u << 8) | omrshr_UtActive[94]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Exit1()   /* tracepoint name: omrshr.94 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Exit2(P1) do { /* tracepoint name: omrshr.95 */ \
	if ((unsigned char) omrshr_UtActive[95] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((95u << 8) | omrshr_UtActive[95]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_Exit2(P1)   /* tracepoint name: omrshr.95 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localHashTableCreate_Entry(thr, P1) do { /* tracepoint name: omrshr.96 */ \
	if ((unsigned char) omrshr_UtActive[96] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((96u << 8) | omrshr_UtActive[96]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_localHashTableCreate_Entry(thr, P1)   /* tracepoint name: omrshr.96 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localHashTableCreate_Exit(thr, P1) do { /* tracepoint name: omrshr.97 */ \
	if ((unsigned char) omrshr_UtActive[97] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((97u << 8) | omrshr_UtActive[97]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_localHashTableCreate_Exit(thr, P1)   /* tracepoint name: omrshr.97 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashFn_Entry(P1) do { /* tracepoint name: omrshr.98 */ \
	if ((unsigned char) omrshr_UtActive[98] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((98u << 8) | omrshr_UtActive[98]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashFn_Entry(P1)   /* tracepoint name: omrshr.98 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashFn_Exit(P1) do { /* tracepoint name: omrshr.99 */ \
	if ((unsigned char) omrshr_UtActive[99] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((99u << 8) | omrshr_UtActive[99]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashFn_Exit(P1)   /* tracepoint name: omrshr.99 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.100 */ \
	if ((unsigned char) omrshr_UtActive[100] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((100u << 8) | omrshr_UtActive[100]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.100 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashEqualFn_Exit1() do { /* tracepoint name: omrshr.101 */ \
	if ((unsigned char) omrshr_UtActive[101] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((101u << 8) | omrshr_UtActive[101]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashEqualFn_Exit1()   /* tracepoint name: omrshr.101 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashEqualFn_Exit2() do { /* tracepoint name: omrshr.102 */ \
	if ((unsigned char) omrshr_UtActive[102] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((102u << 8) | omrshr_UtActive[102]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashEqualFn_Exit2()   /* tracepoint name: omrshr.102 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcHashEqualFn_Exit3(P1) do { /* tracepoint name: omrshr.103 */ \
	if ((unsigned char) omrshr_UtActive[103] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((103u << 8) | omrshr_UtActive[103]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcHashEqualFn_Exit3(P1)   /* tracepoint name: omrshr.103 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.104 */ \
	if ((unsigned char) omrshr_UtActive[104] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((104u << 8) | omrshr_UtActive[104]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.104 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_Exception1(thr) do { /* tracepoint name: omrshr.105 */ \
	if ((unsigned char) omrshr_UtActive[105] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((105u << 8) | omrshr_UtActive[105]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_Exception1(thr)   /* tracepoint name: omrshr.105 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_Exit1(thr) do { /* tracepoint name: omrshr.106 */ \
	if ((unsigned char) omrshr_UtActive[106] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((106u << 8) | omrshr_UtActive[106]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_Exit1(thr)   /* tracepoint name: omrshr.106 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_Exit3(thr, P1) do { /* tracepoint name: omrshr.107 */ \
	if ((unsigned char) omrshr_UtActive[107] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((107u << 8) | omrshr_UtActive[107]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_Exit3(thr, P1)   /* tracepoint name: omrshr.107 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_Exit4(thr, P1) do { /* tracepoint name: omrshr.108 */ \
	if ((unsigned char) omrshr_UtActive[108] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((108u << 8) | omrshr_UtActive[108]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_Exit4(thr, P1)   /* tracepoint name: omrshr.108 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableLookup_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.109 */ \
	if ((unsigned char) omrshr_UtActive[109] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((109u << 8) | omrshr_UtActive[109]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableLookup_Entry(thr, P1, P2)   /* tracepoint name: omrshr.109 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.110 */ \
	if ((unsigned char) omrshr_UtActive[110] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((110u << 8) | omrshr_UtActive[110]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.110 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.111 */ \
	if ((unsigned char) omrshr_UtActive[111] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((111u << 8) | omrshr_UtActive[111]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.111 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.112 */ \
	if ((unsigned char) omrshr_UtActive[112] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((112u << 8) | omrshr_UtActive[112]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.112 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableUpdate_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.113 */ \
	if ((unsigned char) omrshr_UtActive[113] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((113u << 8) | omrshr_UtActive[113]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableUpdate_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.113 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableUpdate_Exit1(thr) do { /* tracepoint name: omrshr.114 */ \
	if ((unsigned char) omrshr_UtActive[114] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((114u << 8) | omrshr_UtActive[114]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableUpdate_Exit1(thr)   /* tracepoint name: omrshr.114 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableUpdate_Exit2(thr, P1) do { /* tracepoint name: omrshr.115 */ \
	if ((unsigned char) omrshr_UtActive[115] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((115u << 8) | omrshr_UtActive[115]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableUpdate_Exit2(thr, P1)   /* tracepoint name: omrshr.115 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.117 */ \
	if ((unsigned char) omrshr_UtActive[117] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((117u << 8) | omrshr_UtActive[117]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.117 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_initialize_Entry() do { /* tracepoint name: omrshr.118 */ \
	if ((unsigned char) omrshr_UtActive[118] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((118u << 8) | omrshr_UtActive[118]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_initialize_Entry()   /* tracepoint name: omrshr.118 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_initialize_Exit() do { /* tracepoint name: omrshr.119 */ \
	if ((unsigned char) omrshr_UtActive[119] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((119u << 8) | omrshr_UtActive[119]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_initialize_Exit()   /* tracepoint name: omrshr.119 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_startup_Entry(thr) do { /* tracepoint name: omrshr.120 */ \
	if ((unsigned char) omrshr_UtActive[120] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((120u << 8) | omrshr_UtActive[120]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_startup_Entry(thr)   /* tracepoint name: omrshr.120 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_startup_Exit1(thr) do { /* tracepoint name: omrshr.121 */ \
	if ((unsigned char) omrshr_UtActive[121] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((121u << 8) | omrshr_UtActive[121]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_startup_Exit1(thr)   /* tracepoint name: omrshr.121 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_startup_Exit2(thr) do { /* tracepoint name: omrshr.122 */ \
	if ((unsigned char) omrshr_UtActive[122] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((122u << 8) | omrshr_UtActive[122]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_startup_Exit2(thr)   /* tracepoint name: omrshr.122 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_startup_Exit3(thr) do { /* tracepoint name: omrshr.123 */ \
	if ((unsigned char) omrshr_UtActive[123] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((123u << 8) | omrshr_UtActive[123]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_startup_Exit3(thr)   /* tracepoint name: omrshr.123 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_startup_Exit4(thr) do { /* tracepoint name: omrshr.124 */ \
	if ((unsigned char) omrshr_UtActive[124] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((124u << 8) | omrshr_UtActive[124]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_startup_Exit4(thr)   /* tracepoint name: omrshr.124 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_cleanup_Entry(thr) do { /* tracepoint name: omrshr.125 */ \
	if ((unsigned char) omrshr_UtActive[125] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((125u << 8) | omrshr_UtActive[125]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_cleanup_Entry(thr)   /* tracepoint name: omrshr.125 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_cleanup_Exit(thr) do { /* tracepoint name: omrshr.126 */ \
	if ((unsigned char) omrshr_UtActive[126] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((126u << 8) | omrshr_UtActive[126]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_cleanup_Exit(thr)   /* tracepoint name: omrshr.126 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.127 */ \
	if ((unsigned char) omrshr_UtActive[127] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((127u << 8) | omrshr_UtActive[127]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.127 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitNotFound1(thr) do { /* tracepoint name: omrshr.128 */ \
	if ((unsigned char) omrshr_UtActive[128] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((128u << 8) | omrshr_UtActive[128]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitNotFound1(thr)   /* tracepoint name: omrshr.128 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_TestItem(thr, P1) do { /* tracepoint name: omrshr.129 */ \
	if ((unsigned char) omrshr_UtActive[129] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((129u << 8) | omrshr_UtActive[129]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_TestItem(thr, P1)   /* tracepoint name: omrshr.129 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitTimestampMismatch(thr, P1, P2) do { /* tracepoint name: omrshr.132 */ \
	if ((unsigned char) omrshr_UtActive[132] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((132u << 8) | omrshr_UtActive[132]), "\10\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitTimestampMismatch(thr, P1, P2)   /* tracepoint name: omrshr.132 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ElimatedWalkNext(thr) do { /* tracepoint name: omrshr.133 */ \
	if ((unsigned char) omrshr_UtActive[133] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((133u << 8) | omrshr_UtActive[133]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ElimatedWalkNext(thr)   /* tracepoint name: omrshr.133 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_FoundCacheClasspath(thr, P1, P2, P3) do { /* tracepoint name: omrshr.134 */ \
	if ((unsigned char) omrshr_UtActive[134] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((134u << 8) | omrshr_UtActive[134]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_FoundCacheClasspath(thr, P1, P2, P3)   /* tracepoint name: omrshr.134 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ValidateClasspath(thr) do { /* tracepoint name: omrshr.135 */ \
	if ((unsigned char) omrshr_UtActive[135] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((135u << 8) | omrshr_UtActive[135]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ValidateClasspath(thr)   /* tracepoint name: omrshr.135 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ValidateSucceeded(thr, P1, P2, P3) do { /* tracepoint name: omrshr.136 */ \
	if ((unsigned char) omrshr_UtActive[136] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((136u << 8) | omrshr_UtActive[136]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ValidateSucceeded(thr, P1, P2, P3)   /* tracepoint name: omrshr.136 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitRcTimestampChanged(thr) do { /* tracepoint name: omrshr.137 */ \
	if ((unsigned char) omrshr_UtActive[137] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((137u << 8) | omrshr_UtActive[137]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitRcTimestampChanged(thr)   /* tracepoint name: omrshr.137 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitFoundShadowClass(thr) do { /* tracepoint name: omrshr.138 */ \
	if ((unsigned char) omrshr_UtActive[138] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((138u << 8) | omrshr_UtActive[138]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitFoundShadowClass(thr)   /* tracepoint name: omrshr.138 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitNotFound2(thr, P1, P2) do { /* tracepoint name: omrshr.141 */ \
	if ((unsigned char) omrshr_UtActive[141] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((141u << 8) | omrshr_UtActive[141]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitNotFound2(thr, P1, P2)   /* tracepoint name: omrshr.141 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitTValidateFoundStale(thr) do { /* tracepoint name: omrshr.142 */ \
	if ((unsigned char) omrshr_UtActive[142] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((142u << 8) | omrshr_UtActive[142]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitTValidateFoundStale(thr)   /* tracepoint name: omrshr.142 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_checkTimestamp_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.143 */ \
	if ((unsigned char) omrshr_UtActive[143] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((143u << 8) | omrshr_UtActive[143]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_checkTimestamp_Entry(thr, P1, P2)   /* tracepoint name: omrshr.143 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_checkTimestamp_ExitTrue(thr) do { /* tracepoint name: omrshr.144 */ \
	if ((unsigned char) omrshr_UtActive[144] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((144u << 8) | omrshr_UtActive[144]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_checkTimestamp_ExitTrue(thr)   /* tracepoint name: omrshr.144 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_checkTimestamp_ExitFalse(thr) do { /* tracepoint name: omrshr.145 */ \
	if ((unsigned char) omrshr_UtActive[145] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((145u << 8) | omrshr_UtActive[145]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_checkTimestamp_ExitFalse(thr)   /* tracepoint name: omrshr.145 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reset_Entry(thr) do { /* tracepoint name: omrshr.146 */ \
	if ((unsigned char) omrshr_UtActive[146] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((146u << 8) | omrshr_UtActive[146]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_reset_Entry(thr)   /* tracepoint name: omrshr.146 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reset_Exit(thr) do { /* tracepoint name: omrshr.147 */ \
	if ((unsigned char) omrshr_UtActive[147] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((147u << 8) | omrshr_UtActive[147]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_reset_Exit(thr)   /* tracepoint name: omrshr.147 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.148 */ \
	if ((unsigned char) omrshr_UtActive[148] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((148u << 8) | omrshr_UtActive[148]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.148 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_Event1(thr, P1, P2, P3) do { /* tracepoint name: omrshr.149 */ \
	if ((unsigned char) omrshr_UtActive[149] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((149u << 8) | omrshr_UtActive[149]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_Event1(thr, P1, P2, P3)   /* tracepoint name: omrshr.149 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_Event2(thr, P1, P2, P3) do { /* tracepoint name: omrshr.150 */ \
	if ((unsigned char) omrshr_UtActive[150] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((150u << 8) | omrshr_UtActive[150]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_Event2(thr, P1, P2, P3)   /* tracepoint name: omrshr.150 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.151 */ \
	if ((unsigned char) omrshr_UtActive[151] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((151u << 8) | omrshr_UtActive[151]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.151 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.152 */ \
	if ((unsigned char) omrshr_UtActive[152] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((152u << 8) | omrshr_UtActive[152]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.152 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_storeNew_Exception1(thr) do { /* tracepoint name: omrshr.153 */ \
	if ((unsigned char) omrshr_UtActive[153] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((153u << 8) | omrshr_UtActive[153]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_storeNew_Exception1(thr)   /* tracepoint name: omrshr.153 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.154 */ \
	if ((unsigned char) omrshr_UtActive[154] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((154u << 8) | omrshr_UtActive[154]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_Entry(thr, P1, P2)   /* tracepoint name: omrshr.154 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame1(thr) do { /* tracepoint name: omrshr.155 */ \
	if ((unsigned char) omrshr_UtActive[155] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((155u << 8) | omrshr_UtActive[155]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame1(thr)   /* tracepoint name: omrshr.155 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame2(thr) do { /* tracepoint name: omrshr.156 */ \
	if ((unsigned char) omrshr_UtActive[156] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((156u << 8) | omrshr_UtActive[156]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame2(thr)   /* tracepoint name: omrshr.156 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_ExitSame(thr) do { /* tracepoint name: omrshr.157 */ \
	if ((unsigned char) omrshr_UtActive[157] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((157u << 8) | omrshr_UtActive[157]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_ExitSame(thr)   /* tracepoint name: omrshr.157 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_prepareForCompare_Entry(thr, P1) do { /* tracepoint name: omrshr.158 */ \
	if ((unsigned char) omrshr_UtActive[158] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((158u << 8) | omrshr_UtActive[158]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_prepareForCompare_Entry(thr, P1)   /* tracepoint name: omrshr.158 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_prepareForCompare_ExitNull(thr) do { /* tracepoint name: omrshr.159 */ \
	if ((unsigned char) omrshr_UtActive[159] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((159u << 8) | omrshr_UtActive[159]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_prepareForCompare_ExitNull(thr)   /* tracepoint name: omrshr.159 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_prepareForCompare_Exit(thr, P1) do { /* tracepoint name: omrshr.160 */ \
	if ((unsigned char) omrshr_UtActive[160] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((160u << 8) | omrshr_UtActive[160]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_prepareForCompare_Exit(thr, P1)   /* tracepoint name: omrshr.160 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareForSafeMode_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.161 */ \
	if ((unsigned char) omrshr_UtActive[161] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((161u << 8) | omrshr_UtActive[161]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareForSafeMode_Entry(thr, P1, P2)   /* tracepoint name: omrshr.161 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareForSafeMode_ExitAlloc(thr) do { /* tracepoint name: omrshr.162 */ \
	if ((unsigned char) omrshr_UtActive[162] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((162u << 8) | omrshr_UtActive[162]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareForSafeMode_ExitAlloc(thr)   /* tracepoint name: omrshr.162 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareForSafeMode_Exit(thr, P1) do { /* tracepoint name: omrshr.163 */ \
	if ((unsigned char) omrshr_UtActive[163] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((163u << 8) | omrshr_UtActive[163]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareForSafeMode_Exit(thr, P1)   /* tracepoint name: omrshr.163 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_ExitNotFound(thr, P1, P2) do { /* tracepoint name: omrshr.165 */ \
	if ((unsigned char) omrshr_UtActive[165] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((165u << 8) | omrshr_UtActive[165]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_ExitNotFound(thr, P1, P2)   /* tracepoint name: omrshr.165 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_FoundOrphan(thr, P1) do { /* tracepoint name: omrshr.166 */ \
	if ((unsigned char) omrshr_UtActive[166] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((166u << 8) | omrshr_UtActive[166]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_FoundOrphan(thr, P1)   /* tracepoint name: omrshr.166 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_FoundROMClass(thr, P1) do { /* tracepoint name: omrshr.167 */ \
	if ((unsigned char) omrshr_UtActive[167] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((167u << 8) | omrshr_UtActive[167]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_FoundROMClass(thr, P1)   /* tracepoint name: omrshr.167 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_ExitOK(thr, P1) do { /* tracepoint name: omrshr.168 */ \
	if ((unsigned char) omrshr_UtActive[168] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((168u << 8) | omrshr_UtActive[168]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_ExitOK(thr, P1)   /* tracepoint name: omrshr.168 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reuniteOrphan_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.169 */ \
	if ((unsigned char) omrshr_UtActive[169] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((169u << 8) | omrshr_UtActive[169]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_reuniteOrphan_Entry(thr, P1, P2)   /* tracepoint name: omrshr.169 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reuniteOrphan_Event1(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.170 */ \
	if ((unsigned char) omrshr_UtActive[170] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((170u << 8) | omrshr_UtActive[170]), "\12\377\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_reuniteOrphan_Event1(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.170 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reuniteOrphan_ExitTrue(thr) do { /* tracepoint name: omrshr.171 */ \
	if ((unsigned char) omrshr_UtActive[171] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((171u << 8) | omrshr_UtActive[171]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_reuniteOrphan_ExitTrue(thr)   /* tracepoint name: omrshr.171 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_reuniteOrphan_ExitFalse(thr) do { /* tracepoint name: omrshr.172 */ \
	if ((unsigned char) omrshr_UtActive[172] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((172u << 8) | omrshr_UtActive[172]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_reuniteOrphan_ExitFalse(thr)   /* tracepoint name: omrshr.172 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_redeemStale_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.173 */ \
	if ((unsigned char) omrshr_UtActive[173] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((173u << 8) | omrshr_UtActive[173]), "\12\377\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_redeemStale_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.173 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_redeemStale_ExitFound(thr, P1) do { /* tracepoint name: omrshr.174 */ \
	if ((unsigned char) omrshr_UtActive[174] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((174u << 8) | omrshr_UtActive[174]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_redeemStale_ExitFound(thr, P1)   /* tracepoint name: omrshr.174 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_redeemStale_ExitNull(thr) do { /* tracepoint name: omrshr.175 */ \
	if ((unsigned char) omrshr_UtActive[175] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((175u << 8) | omrshr_UtActive[175]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_redeemStale_ExitNull(thr)   /* tracepoint name: omrshr.175 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_newInstance_Entry(P1, P2) do { /* tracepoint name: omrshr.176 */ \
	if ((unsigned char) omrshr_UtActive[176] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((176u << 8) | omrshr_UtActive[176]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_newInstance_Entry(P1, P2)   /* tracepoint name: omrshr.176 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_newInstance_Exit(P1) do { /* tracepoint name: omrshr.177 */ \
	if ((unsigned char) omrshr_UtActive[177] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((177u << 8) | omrshr_UtActive[177]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_newInstance_Exit(P1)   /* tracepoint name: omrshr.177 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_initialize_Entry() do { /* tracepoint name: omrshr.178 */ \
	if ((unsigned char) omrshr_UtActive[178] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((178u << 8) | omrshr_UtActive[178]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_initialize_Entry()   /* tracepoint name: omrshr.178 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_initialize_Exit() do { /* tracepoint name: omrshr.179 */ \
	if ((unsigned char) omrshr_UtActive[179] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((179u << 8) | omrshr_UtActive[179]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_initialize_Exit()   /* tracepoint name: omrshr.179 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_link_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.180 */ \
	if ((unsigned char) omrshr_UtActive[180] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((180u << 8) | omrshr_UtActive[180]), "\6\4\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_link_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.180 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_link_Exit1() do { /* tracepoint name: omrshr.181 */ \
	if ((unsigned char) omrshr_UtActive[181] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((181u << 8) | omrshr_UtActive[181]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_link_Exit1()   /* tracepoint name: omrshr.181 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_link_Exit2(P1) do { /* tracepoint name: omrshr.182 */ \
	if ((unsigned char) omrshr_UtActive[182] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((182u << 8) | omrshr_UtActive[182]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_link_Exit2(P1)   /* tracepoint name: omrshr.182 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.183 */ \
	if ((unsigned char) omrshr_UtActive[183] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((183u << 8) | omrshr_UtActive[183]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Entry(thr, P1, P2)   /* tracepoint name: omrshr.183 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_DoTest(thr, P1, P2, P3) do { /* tracepoint name: omrshr.184 */ \
	if ((unsigned char) omrshr_UtActive[184] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((184u << 8) | omrshr_UtActive[184]), "\6\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_DoTest(thr, P1, P2, P3)   /* tracepoint name: omrshr.184 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Exit1(thr, P1) do { /* tracepoint name: omrshr.185 */ \
	if ((unsigned char) omrshr_UtActive[185] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((185u << 8) | omrshr_UtActive[185]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Exit1(thr, P1)   /* tracepoint name: omrshr.185 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Exit2(thr) do { /* tracepoint name: omrshr.186 */ \
	if ((unsigned char) omrshr_UtActive[186] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((186u << 8) | omrshr_UtActive[186]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_forCacheItem_Exit2(thr)   /* tracepoint name: omrshr.186 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_tag(P1) do { /* tracepoint name: omrshr.187 */ \
	if ((unsigned char) omrshr_UtActive[187] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((187u << 8) | omrshr_UtActive[187]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_tag(P1)   /* tracepoint name: omrshr.187 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_getCPEIndex(P1, P2) do { /* tracepoint name: omrshr.188 */ \
	if ((unsigned char) omrshr_UtActive[188] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((188u << 8) | omrshr_UtActive[188]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_getCPEIndex(P1, P2)   /* tracepoint name: omrshr.188 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListHdr_newInstance_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.189 */ \
	if ((unsigned char) omrshr_UtActive[189] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((189u << 8) | omrshr_UtActive[189]), "\12\377\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListHdr_newInstance_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.189 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListHdr_newInstance_Exit(P1) do { /* tracepoint name: omrshr.190 */ \
	if ((unsigned char) omrshr_UtActive[190] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((190u << 8) | omrshr_UtActive[190]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListHdr_newInstance_Exit(P1)   /* tracepoint name: omrshr.190 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListHdr_initialize_Entry() do { /* tracepoint name: omrshr.191 */ \
	if ((unsigned char) omrshr_UtActive[191] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((191u << 8) | omrshr_UtActive[191]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListHdr_initialize_Entry()   /* tracepoint name: omrshr.191 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListHdr_initialize_Exit() do { /* tracepoint name: omrshr.192 */ \
	if ((unsigned char) omrshr_UtActive[192] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((192u << 8) | omrshr_UtActive[192]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListHdr_initialize_Exit()   /* tracepoint name: omrshr.192 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_newInstance_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.193 */ \
	if ((unsigned char) omrshr_UtActive[193] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((193u << 8) | omrshr_UtActive[193]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_newInstance_Entry(P1, P2, P3)   /* tracepoint name: omrshr.193 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.194 */ \
	if ((unsigned char) omrshr_UtActive[194] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((194u << 8) | omrshr_UtActive[194]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.194 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_initialize_Entry() do { /* tracepoint name: omrshr.195 */ \
	if ((unsigned char) omrshr_UtActive[195] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((195u << 8) | omrshr_UtActive[195]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_initialize_Entry()   /* tracepoint name: omrshr.195 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_initialize_Exit() do { /* tracepoint name: omrshr.196 */ \
	if ((unsigned char) omrshr_UtActive[196] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((196u << 8) | omrshr_UtActive[196]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_initialize_Exit()   /* tracepoint name: omrshr.196 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Entry(thr) do { /* tracepoint name: omrshr.197 */ \
	if ((unsigned char) omrshr_UtActive[197] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((197u << 8) | omrshr_UtActive[197]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Entry(thr)   /* tracepoint name: omrshr.197 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit1(thr) do { /* tracepoint name: omrshr.198 */ \
	if ((unsigned char) omrshr_UtActive[198] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((198u << 8) | omrshr_UtActive[198]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit1(thr)   /* tracepoint name: omrshr.198 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit2(thr) do { /* tracepoint name: omrshr.199 */ \
	if ((unsigned char) omrshr_UtActive[199] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((199u << 8) | omrshr_UtActive[199]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit2(thr)   /* tracepoint name: omrshr.199 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit3(thr) do { /* tracepoint name: omrshr.200 */ \
	if ((unsigned char) omrshr_UtActive[200] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((200u << 8) | omrshr_UtActive[200]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit3(thr)   /* tracepoint name: omrshr.200 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit4(thr) do { /* tracepoint name: omrshr.201 */ \
	if ((unsigned char) omrshr_UtActive[201] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((201u << 8) | omrshr_UtActive[201]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit4(thr)   /* tracepoint name: omrshr.201 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit5(thr) do { /* tracepoint name: omrshr.202 */ \
	if ((unsigned char) omrshr_UtActive[202] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((202u << 8) | omrshr_UtActive[202]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit5(thr)   /* tracepoint name: omrshr.202 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit6(thr) do { /* tracepoint name: omrshr.203 */ \
	if ((unsigned char) omrshr_UtActive[203] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((203u << 8) | omrshr_UtActive[203]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit6(thr)   /* tracepoint name: omrshr.203 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_startup_Exit7(thr) do { /* tracepoint name: omrshr.204 */ \
	if ((unsigned char) omrshr_UtActive[204] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((204u << 8) | omrshr_UtActive[204]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_startup_Exit7(thr)   /* tracepoint name: omrshr.204 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cleanup_Entry(thr) do { /* tracepoint name: omrshr.205 */ \
	if ((unsigned char) omrshr_UtActive[205] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((205u << 8) | omrshr_UtActive[205]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cleanup_Entry(thr)   /* tracepoint name: omrshr.205 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cleanup_Exit(thr) do { /* tracepoint name: omrshr.206 */ \
	if ((unsigned char) omrshr_UtActive[206] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((206u << 8) | omrshr_UtActive[206]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cleanup_Exit(thr)   /* tracepoint name: omrshr.206 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.207 */ \
	if ((unsigned char) omrshr_UtActive[207] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((207u << 8) | omrshr_UtActive[207]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_Entry(thr, P1, P2)   /* tracepoint name: omrshr.207 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_ExitLocked(thr, P1) do { /* tracepoint name: omrshr.208 */ \
	if ((unsigned char) omrshr_UtActive[208] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((208u << 8) | omrshr_UtActive[208]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_ExitLocked(thr, P1)   /* tracepoint name: omrshr.208 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_LockJar(thr, P1) do { /* tracepoint name: omrshr.209 */ \
	if ((unsigned char) omrshr_UtActive[209] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((209u << 8) | omrshr_UtActive[209]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_LockJar(thr, P1)   /* tracepoint name: omrshr.209 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.210 */ \
	if ((unsigned char) omrshr_UtActive[210] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((210u << 8) | omrshr_UtActive[210]), "\10\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_Exit(thr, P1, P2)   /* tracepoint name: omrshr.210 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_ExitDoesNotExist(thr, P1) do { /* tracepoint name: omrshr.211 */ \
	if ((unsigned char) omrshr_UtActive[211] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((211u << 8) | omrshr_UtActive[211]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_ExitDoesNotExist(thr, P1)   /* tracepoint name: omrshr.211 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_ExitFalse(thr) do { /* tracepoint name: omrshr.212 */ \
	if ((unsigned char) omrshr_UtActive[212] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((212u << 8) | omrshr_UtActive[212]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_ExitFalse(thr)   /* tracepoint name: omrshr.212 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_NotJar(thr) do { /* tracepoint name: omrshr.213 */ \
	if ((unsigned char) omrshr_UtActive[213] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((213u << 8) | omrshr_UtActive[213]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_NotJar(thr)   /* tracepoint name: omrshr.213 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashFn_Entry(P1) do { /* tracepoint name: omrshr.216 */ \
	if ((unsigned char) omrshr_UtActive[216] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((216u << 8) | omrshr_UtActive[216]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashFn_Entry(P1)   /* tracepoint name: omrshr.216 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashFn_Exit(P1) do { /* tracepoint name: omrshr.217 */ \
	if ((unsigned char) omrshr_UtActive[217] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((217u << 8) | omrshr_UtActive[217]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashFn_Exit(P1)   /* tracepoint name: omrshr.217 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.218 */ \
	if ((unsigned char) omrshr_UtActive[218] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((218u << 8) | omrshr_UtActive[218]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.218 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashEqualFn_Exit1() do { /* tracepoint name: omrshr.219 */ \
	if ((unsigned char) omrshr_UtActive[219] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((219u << 8) | omrshr_UtActive[219]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashEqualFn_Exit1()   /* tracepoint name: omrshr.219 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashEqualFn_Exit2() do { /* tracepoint name: omrshr.220 */ \
	if ((unsigned char) omrshr_UtActive[220] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((220u << 8) | omrshr_UtActive[220]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashEqualFn_Exit2()   /* tracepoint name: omrshr.220 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashEqualFn_Exit3() do { /* tracepoint name: omrshr.221 */ \
	if ((unsigned char) omrshr_UtActive[221] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((221u << 8) | omrshr_UtActive[221]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashEqualFn_Exit3()   /* tracepoint name: omrshr.221 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeHashEqualFn_Exit4(P1) do { /* tracepoint name: omrshr.222 */ \
	if ((unsigned char) omrshr_UtActive[222] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((222u << 8) | omrshr_UtActive[222]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeHashEqualFn_Exit4(P1)   /* tracepoint name: omrshr.222 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Entry(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.223 */ \
	if ((unsigned char) omrshr_UtActive[223] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((223u << 8) | omrshr_UtActive[223]), "\12\377\4\6\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Entry(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.223 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Exit1(thr) do { /* tracepoint name: omrshr.224 */ \
	if ((unsigned char) omrshr_UtActive[224] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((224u << 8) | omrshr_UtActive[224]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Exit1(thr)   /* tracepoint name: omrshr.224 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Exit2(thr) do { /* tracepoint name: omrshr.225 */ \
	if ((unsigned char) omrshr_UtActive[225] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((225u << 8) | omrshr_UtActive[225]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Exit2(thr)   /* tracepoint name: omrshr.225 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Exit3(thr) do { /* tracepoint name: omrshr.226 */ \
	if ((unsigned char) omrshr_UtActive[226] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((226u << 8) | omrshr_UtActive[226]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Exit3(thr)   /* tracepoint name: omrshr.226 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Exit4(thr, P1) do { /* tracepoint name: omrshr.227 */ \
	if ((unsigned char) omrshr_UtActive[227] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((227u << 8) | omrshr_UtActive[227]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Exit4(thr, P1)   /* tracepoint name: omrshr.227 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_Exit5(thr, P1) do { /* tracepoint name: omrshr.228 */ \
	if ((unsigned char) omrshr_UtActive[228] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((228u << 8) | omrshr_UtActive[228]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_Exit5(thr, P1)   /* tracepoint name: omrshr.228 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableLookup_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.229 */ \
	if ((unsigned char) omrshr_UtActive[229] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((229u << 8) | omrshr_UtActive[229]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableLookup_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.229 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.230 */ \
	if ((unsigned char) omrshr_UtActive[230] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((230u << 8) | omrshr_UtActive[230]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.230 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.231 */ \
	if ((unsigned char) omrshr_UtActive[231] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((231u << 8) | omrshr_UtActive[231]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.231 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.232 */ \
	if ((unsigned char) omrshr_UtActive[232] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((232u << 8) | omrshr_UtActive[232]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.232 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableUpdate_Entry(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.233 */ \
	if ((unsigned char) omrshr_UtActive[233] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((233u << 8) | omrshr_UtActive[233]), "\12\377\4\6\4", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableUpdate_Entry(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.233 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableUpdate_Exit(thr, P1) do { /* tracepoint name: omrshr.234 */ \
	if ((unsigned char) omrshr_UtActive[234] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((234u << 8) | omrshr_UtActive[234]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableUpdate_Exit(thr, P1)   /* tracepoint name: omrshr.234 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localUpdate_FindIdentified_Entry(thr, P1) do { /* tracepoint name: omrshr.235 */ \
	if ((unsigned char) omrshr_UtActive[235] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((235u << 8) | omrshr_UtActive[235]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localUpdate_FindIdentified_Entry(thr, P1)   /* tracepoint name: omrshr.235 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localUpdate_FindIdentified_Exit(thr, P1) do { /* tracepoint name: omrshr.236 */ \
	if ((unsigned char) omrshr_UtActive[236] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((236u << 8) | omrshr_UtActive[236]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localUpdate_FindIdentified_Exit(thr, P1)   /* tracepoint name: omrshr.236 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_local_StoreIdentified_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.237 */ \
	if ((unsigned char) omrshr_UtActive[237] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((237u << 8) | omrshr_UtActive[237]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_local_StoreIdentified_Entry(thr, P1, P2)   /* tracepoint name: omrshr.237 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_local_StoreIdentified_Exit1(thr) do { /* tracepoint name: omrshr.238 */ \
	if ((unsigned char) omrshr_UtActive[238] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((238u << 8) | omrshr_UtActive[238]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_local_StoreIdentified_Exit1(thr)   /* tracepoint name: omrshr.238 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_local_StoreIdentified_Exit2(thr) do { /* tracepoint name: omrshr.239 */ \
	if ((unsigned char) omrshr_UtActive[239] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((239u << 8) | omrshr_UtActive[239]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_local_StoreIdentified_Exit2(thr)   /* tracepoint name: omrshr.239 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localUpdate_CheckManually_Entry(thr, P1) do { /* tracepoint name: omrshr.240 */ \
	if ((unsigned char) omrshr_UtActive[240] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((240u << 8) | omrshr_UtActive[240]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localUpdate_CheckManually_Entry(thr, P1)   /* tracepoint name: omrshr.240 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localUpdate_CheckManually_FoundKnown(thr, P1) do { /* tracepoint name: omrshr.241 */ \
	if ((unsigned char) omrshr_UtActive[241] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((241u << 8) | omrshr_UtActive[241]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localUpdate_CheckManually_FoundKnown(thr, P1)   /* tracepoint name: omrshr.241 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localUpdate_CheckManually_Exit(thr, P1) do { /* tracepoint name: omrshr.242 */ \
	if ((unsigned char) omrshr_UtActive[242] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((242u << 8) | omrshr_UtActive[242]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localUpdate_CheckManually_Exit(thr, P1)   /* tracepoint name: omrshr.242 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_Update_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.243 */ \
	if ((unsigned char) omrshr_UtActive[243] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((243u << 8) | omrshr_UtActive[243]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_Update_Entry(thr, P1, P2)   /* tracepoint name: omrshr.243 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_Update_Exit1(thr) do { /* tracepoint name: omrshr.244 */ \
	if ((unsigned char) omrshr_UtActive[244] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((244u << 8) | omrshr_UtActive[244]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_Update_Exit1(thr)   /* tracepoint name: omrshr.244 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_Update_Exit2(thr, P1) do { /* tracepoint name: omrshr.245 */ \
	if ((unsigned char) omrshr_UtActive[245] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((245u << 8) | omrshr_UtActive[245]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_Update_Exit2(thr, P1)   /* tracepoint name: omrshr.245 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_FindIdentified_Entry(thr, P1) do { /* tracepoint name: omrshr.246 */ \
	if ((unsigned char) omrshr_UtActive[246] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((246u << 8) | omrshr_UtActive[246]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_FindIdentified_Entry(thr, P1)   /* tracepoint name: omrshr.246 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_FindIdentified_ExitFound(thr, P1) do { /* tracepoint name: omrshr.247 */ \
	if ((unsigned char) omrshr_UtActive[247] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((247u << 8) | omrshr_UtActive[247]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_FindIdentified_ExitFound(thr, P1)   /* tracepoint name: omrshr.247 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_FindIdentified_ExitNotFound(thr) do { /* tracepoint name: omrshr.248 */ \
	if ((unsigned char) omrshr_UtActive[248] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((248u << 8) | omrshr_UtActive[248]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_FindIdentified_ExitNotFound(thr)   /* tracepoint name: omrshr.248 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.249 */ \
	if ((unsigned char) omrshr_UtActive[249] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((249u << 8) | omrshr_UtActive[249]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.249 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit1(thr, P1) do { /* tracepoint name: omrshr.250 */ \
	if ((unsigned char) omrshr_UtActive[250] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((250u << 8) | omrshr_UtActive[250]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit1(thr, P1)   /* tracepoint name: omrshr.250 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitTokenFound(thr) do { /* tracepoint name: omrshr.251 */ \
	if ((unsigned char) omrshr_UtActive[251] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((251u << 8) | omrshr_UtActive[251]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitTokenFound(thr)   /* tracepoint name: omrshr.251 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitTokenNotFound(thr) do { /* tracepoint name: omrshr.252 */ \
	if ((unsigned char) omrshr_UtActive[252] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((252u << 8) | omrshr_UtActive[252]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitTokenNotFound(thr)   /* tracepoint name: omrshr.252 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DoTryIdentifySet(thr, P1, P2) do { /* tracepoint name: omrshr.253 */ \
	if ((unsigned char) omrshr_UtActive[253] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((253u << 8) | omrshr_UtActive[253]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DoTryIdentifySet(thr, P1, P2)   /* tracepoint name: omrshr.253 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_TestEntry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.254 */ \
	if ((unsigned char) omrshr_UtActive[254] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((254u << 8) | omrshr_UtActive[254]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_TestEntry(thr, P1, P2, P3)   /* tracepoint name: omrshr.254 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DoTryIdentify(thr, P1) do { /* tracepoint name: omrshr.255 */ \
	if ((unsigned char) omrshr_UtActive[255] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((255u << 8) | omrshr_UtActive[255]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DoTryIdentify(thr, P1)   /* tracepoint name: omrshr.255 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_SkippingEntry(thr, P1) do { /* tracepoint name: omrshr.256 */ \
	if ((unsigned char) omrshr_UtActive[256] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((256u << 8) | omrshr_UtActive[256]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_SkippingEntry(thr, P1)   /* tracepoint name: omrshr.256 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit2(thr) do { /* tracepoint name: omrshr.257 */ \
	if ((unsigned char) omrshr_UtActive[257] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((257u << 8) | omrshr_UtActive[257]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit2(thr)   /* tracepoint name: omrshr.257 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DetectedStaleCPEI(thr, P1) do { /* tracepoint name: omrshr.258 */ \
	if ((unsigned char) omrshr_UtActive[258] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((258u << 8) | omrshr_UtActive[258]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_DetectedStaleCPEI(thr, P1)   /* tracepoint name: omrshr.258 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit3(thr) do { /* tracepoint name: omrshr.259 */ \
	if ((unsigned char) omrshr_UtActive[259] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((259u << 8) | omrshr_UtActive[259]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit3(thr)   /* tracepoint name: omrshr.259 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitSuccess(thr, P1, P2, P3) do { /* tracepoint name: omrshr.260 */ \
	if ((unsigned char) omrshr_UtActive[260] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((260u << 8) | omrshr_UtActive[260]), "\4\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_ExitSuccess(thr, P1, P2, P3)   /* tracepoint name: omrshr.260 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_RegisterFailed(thr) do { /* tracepoint name: omrshr.261 */ \
	if ((unsigned char) omrshr_UtActive[261] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((261u << 8) | omrshr_UtActive[261]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_RegisterFailed(thr)   /* tracepoint name: omrshr.261 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitSameInCache(thr) do { /* tracepoint name: omrshr.263 */ \
	if ((unsigned char) omrshr_UtActive[263] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((263u << 8) | omrshr_UtActive[263]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitSameInCache(thr)   /* tracepoint name: omrshr.263 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitNotSameInCache(thr) do { /* tracepoint name: omrshr.264 */ \
	if ((unsigned char) omrshr_UtActive[264] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((264u << 8) | omrshr_UtActive[264]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitNotSameInCache(thr)   /* tracepoint name: omrshr.264 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitNotSamePartition(thr) do { /* tracepoint name: omrshr.265 */ \
	if ((unsigned char) omrshr_UtActive[265] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((265u << 8) | omrshr_UtActive[265]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitNotSamePartition(thr)   /* tracepoint name: omrshr.265 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitStaleItem(thr) do { /* tracepoint name: omrshr.266 */ \
	if ((unsigned char) omrshr_UtActive[266] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((266u << 8) | omrshr_UtActive[266]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitStaleItem(thr)   /* tracepoint name: omrshr.266 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitError(thr) do { /* tracepoint name: omrshr.267 */ \
	if ((unsigned char) omrshr_UtActive[267] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((267u << 8) | omrshr_UtActive[267]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitError(thr)   /* tracepoint name: omrshr.267 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitDone(thr, P1, P2) do { /* tracepoint name: omrshr.268 */ \
	if ((unsigned char) omrshr_UtActive[268] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((268u << 8) | omrshr_UtActive[268]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitDone(thr, P1, P2)   /* tracepoint name: omrshr.268 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitFailedBefore(thr) do { /* tracepoint name: omrshr.269 */ \
	if ((unsigned char) omrshr_UtActive[269] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((269u << 8) | omrshr_UtActive[269]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitFailedBefore(thr)   /* tracepoint name: omrshr.269 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_setTimestamps_Entry(thr, P1) do { /* tracepoint name: omrshr.270 */ \
	if ((unsigned char) omrshr_UtActive[270] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((270u << 8) | omrshr_UtActive[270]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_setTimestamps_Entry(thr, P1)   /* tracepoint name: omrshr.270 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_setTimestamps_NewTimestamp(thr, P1, P2, P3) do { /* tracepoint name: omrshr.271 */ \
	if ((unsigned char) omrshr_UtActive[271] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((271u << 8) | omrshr_UtActive[271]), "\12\377\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_setTimestamps_NewTimestamp(thr, P1, P2, P3)   /* tracepoint name: omrshr.271 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_setTimestamps_Exit(thr) do { /* tracepoint name: omrshr.272 */ \
	if ((unsigned char) omrshr_UtActive[272] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((272u << 8) | omrshr_UtActive[272]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_setTimestamps_Exit(thr)   /* tracepoint name: omrshr.272 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.273 */ \
	if ((unsigned char) omrshr_UtActive[273] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((273u << 8) | omrshr_UtActive[273]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.273 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.274 */ \
	if ((unsigned char) omrshr_UtActive[274] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((274u << 8) | omrshr_UtActive[274]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.274 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.275 */ \
	if ((unsigned char) omrshr_UtActive[275] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((275u << 8) | omrshr_UtActive[275]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.275 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_markClasspathsStale_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.276 */ \
	if ((unsigned char) omrshr_UtActive[276] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((276u << 8) | omrshr_UtActive[276]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_markClasspathsStale_Entry(thr, P1, P2)   /* tracepoint name: omrshr.276 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_markClasspathsStale_SetStaleFromIndex(thr, P1, P2) do { /* tracepoint name: omrshr.277 */ \
	if ((unsigned char) omrshr_UtActive[277] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((277u << 8) | omrshr_UtActive[277]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_markClasspathsStale_SetStaleFromIndex(thr, P1, P2)   /* tracepoint name: omrshr.277 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_markClasspathsStale_Exit(thr) do { /* tracepoint name: omrshr.278 */ \
	if ((unsigned char) omrshr_UtActive[278] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((278u << 8) | omrshr_UtActive[278]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_markClasspathsStale_Exit(thr)   /* tracepoint name: omrshr.278 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_isStale(P1, P2) do { /* tracepoint name: omrshr.279 */ \
	if ((unsigned char) omrshr_UtActive[279] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((279u << 8) | omrshr_UtActive[279]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_isStale(P1, P2)   /* tracepoint name: omrshr.279 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_reset_Entry(thr) do { /* tracepoint name: omrshr.280 */ \
	if ((unsigned char) omrshr_UtActive[280] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((280u << 8) | omrshr_UtActive[280]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_reset_Entry(thr)   /* tracepoint name: omrshr.280 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_reset_Exit(thr) do { /* tracepoint name: omrshr.281 */ \
	if ((unsigned char) omrshr_UtActive[281] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((281u << 8) | omrshr_UtActive[281]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_reset_Exit(thr)   /* tracepoint name: omrshr.281 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.282 */ \
	if ((unsigned char) omrshr_UtActive[282] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((282u << 8) | omrshr_UtActive[282]), "\12\377\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.282 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_ExitFalse1(thr) do { /* tracepoint name: omrshr.283 */ \
	if ((unsigned char) omrshr_UtActive[283] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((283u << 8) | omrshr_UtActive[283]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_ExitFalse1(thr)   /* tracepoint name: omrshr.283 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_ExitError(thr) do { /* tracepoint name: omrshr.284 */ \
	if ((unsigned char) omrshr_UtActive[284] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((284u << 8) | omrshr_UtActive[284]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_ExitError(thr)   /* tracepoint name: omrshr.284 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_ExitTrue(thr, P1) do { /* tracepoint name: omrshr.285 */ \
	if ((unsigned char) omrshr_UtActive[285] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((285u << 8) | omrshr_UtActive[285]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_ExitTrue(thr, P1)   /* tracepoint name: omrshr.285 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_ExitFalse2(thr) do { /* tracepoint name: omrshr.286 */ \
	if ((unsigned char) omrshr_UtActive[286] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((286u << 8) | omrshr_UtActive[286]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_ExitFalse2(thr)   /* tracepoint name: omrshr.286 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_Entry(P1, P2) do { /* tracepoint name: omrshr.287 */ \
	if ((unsigned char) omrshr_UtActive[287] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((287u << 8) | omrshr_UtActive[287]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_Entry(P1, P2)   /* tracepoint name: omrshr.287 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitSame() do { /* tracepoint name: omrshr.288 */ \
	if ((unsigned char) omrshr_UtActive[288] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((288u << 8) | omrshr_UtActive[288]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitSame()   /* tracepoint name: omrshr.288 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_Paths(P1, P2, P3, P4) do { /* tracepoint name: omrshr.289 */ \
	if ((unsigned char) omrshr_UtActive[289] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((289u << 8) | omrshr_UtActive[289]), "\12\377\12\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_Paths(P1, P2, P3, P4)   /* tracepoint name: omrshr.289 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitNull() do { /* tracepoint name: omrshr.290 */ \
	if ((unsigned char) omrshr_UtActive[290] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((290u << 8) | omrshr_UtActive[290]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitNull()   /* tracepoint name: omrshr.290 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitHash(P1, P2) do { /* tracepoint name: omrshr.291 */ \
	if ((unsigned char) omrshr_UtActive[291] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((291u << 8) | omrshr_UtActive[291]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitHash(P1, P2)   /* tracepoint name: omrshr.291 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitProtocol(P1, P2) do { /* tracepoint name: omrshr.292 */ \
	if ((unsigned char) omrshr_UtActive[292] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((292u << 8) | omrshr_UtActive[292]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitProtocol(P1, P2)   /* tracepoint name: omrshr.292 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitCompare() do { /* tracepoint name: omrshr.293 */ \
	if ((unsigned char) omrshr_UtActive[293] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((293u << 8) | omrshr_UtActive[293]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitCompare()   /* tracepoint name: omrshr.293 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_CPEI_ExitSuccess() do { /* tracepoint name: omrshr.294 */ \
	if ((unsigned char) omrshr_UtActive[294] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((294u << 8) | omrshr_UtActive[294]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_CPEI_ExitSuccess()   /* tracepoint name: omrshr.294 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_ClearIdentified_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.295 */ \
	if ((unsigned char) omrshr_UtActive[295] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((295u << 8) | omrshr_UtActive[295]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPC_ClearIdentified_Entry(P1, P2, P3)   /* tracepoint name: omrshr.295 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_ClearIdentified_Killing(P1) do { /* tracepoint name: omrshr.296 */ \
	if ((unsigned char) omrshr_UtActive[296] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((296u << 8) | omrshr_UtActive[296]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_ClearIdentified_Killing(P1)   /* tracepoint name: omrshr.296 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_ClearIdentified_Exit() do { /* tracepoint name: omrshr.297 */ \
	if ((unsigned char) omrshr_UtActive[297] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((297u << 8) | omrshr_UtActive[297]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_ClearIdentified_Exit()   /* tracepoint name: omrshr.297 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_FreeIdentifiedClasspathArray_Entry(P1, P2) do { /* tracepoint name: omrshr.298 */ \
	if ((unsigned char) omrshr_UtActive[298] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((298u << 8) | omrshr_UtActive[298]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPC_FreeIdentifiedClasspathArray_Entry(P1, P2)   /* tracepoint name: omrshr.298 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_FreeIdentifiedClasspathArray_Exit() do { /* tracepoint name: omrshr.299 */ \
	if ((unsigned char) omrshr_UtActive[299] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((299u << 8) | omrshr_UtActive[299]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_FreeIdentifiedClasspathArray_Exit()   /* tracepoint name: omrshr.299 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Entry(P1) do { /* tracepoint name: omrshr.300 */ \
	if ((unsigned char) omrshr_UtActive[300] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((300u << 8) | omrshr_UtActive[300]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Entry(P1)   /* tracepoint name: omrshr.300 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit1() do { /* tracepoint name: omrshr.301 */ \
	if ((unsigned char) omrshr_UtActive[301] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((301u << 8) | omrshr_UtActive[301]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit1()   /* tracepoint name: omrshr.301 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit2() do { /* tracepoint name: omrshr.302 */ \
	if ((unsigned char) omrshr_UtActive[302] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((302u << 8) | omrshr_UtActive[302]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit2()   /* tracepoint name: omrshr.302 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit3(P1) do { /* tracepoint name: omrshr.303 */ \
	if ((unsigned char) omrshr_UtActive[303] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((303u << 8) | omrshr_UtActive[303]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_InitializeIdentifiedClasspathArray_Exit3(P1)   /* tracepoint name: omrshr.303 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.304 */ \
	if ((unsigned char) omrshr_UtActive[304] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((304u << 8) | omrshr_UtActive[304]), "\6\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.304 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitBadIndex(thr) do { /* tracepoint name: omrshr.305 */ \
	if ((unsigned char) omrshr_UtActive[305] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((305u << 8) | omrshr_UtActive[305]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitBadIndex(thr)   /* tracepoint name: omrshr.305 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_ComparePartitions(thr, P1, P2, P3) do { /* tracepoint name: omrshr.306 */ \
	if ((unsigned char) omrshr_UtActive[306] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((306u << 8) | omrshr_UtActive[306]), "\377\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_ComparePartitions(thr, P1, P2, P3)   /* tracepoint name: omrshr.306 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitNotFound(thr) do { /* tracepoint name: omrshr.307 */ \
	if ((unsigned char) omrshr_UtActive[307] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((307u << 8) | omrshr_UtActive[307]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitNotFound(thr)   /* tracepoint name: omrshr.307 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_Found(thr, P1) do { /* tracepoint name: omrshr.308 */ \
	if ((unsigned char) omrshr_UtActive[308] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((308u << 8) | omrshr_UtActive[308]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_Found(thr, P1)   /* tracepoint name: omrshr.308 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_Reset(thr, P1, P2) do { /* tracepoint name: omrshr.309 */ \
	if ((unsigned char) omrshr_UtActive[309] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((309u << 8) | omrshr_UtActive[309]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_Reset(thr, P1, P2)   /* tracepoint name: omrshr.309 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_NullCpData(thr) do { /* tracepoint name: omrshr.310 */ \
	if ((unsigned char) omrshr_UtActive[310] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((310u << 8) | omrshr_UtActive[310]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_NullCpData(thr)   /* tracepoint name: omrshr.310 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitSuccess(thr, P1) do { /* tracepoint name: omrshr.311 */ \
	if ((unsigned char) omrshr_UtActive[311] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((311u << 8) | omrshr_UtActive[311]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIdentifiedClasspath_ExitSuccess(thr, P1)   /* tracepoint name: omrshr.311 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIDForIdentified_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.312 */ \
	if ((unsigned char) omrshr_UtActive[312] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((312u << 8) | omrshr_UtActive[312]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIDForIdentified_Entry(P1, P2, P3)   /* tracepoint name: omrshr.312 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIDForIdentified_ExitFound(P1) do { /* tracepoint name: omrshr.314 */ \
	if ((unsigned char) omrshr_UtActive[314] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((314u << 8) | omrshr_UtActive[314]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIDForIdentified_ExitFound(P1)   /* tracepoint name: omrshr.314 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_getIDForIdentified_ExitNotFound() do { /* tracepoint name: omrshr.315 */ \
	if ((unsigned char) omrshr_UtActive[315] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((315u << 8) | omrshr_UtActive[315]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_getIDForIdentified_ExitNotFound()   /* tracepoint name: omrshr.315 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_Entry(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.316 */ \
	if ((unsigned char) omrshr_UtActive[316] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((316u << 8) | omrshr_UtActive[316]), "\6\4\4\4\6", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_Entry(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.316 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_GrowingArray(thr, P1) do { /* tracepoint name: omrshr.317 */ \
	if ((unsigned char) omrshr_UtActive[317] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((317u << 8) | omrshr_UtActive[317]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_GrowingArray(thr, P1)   /* tracepoint name: omrshr.317 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_ExitAlloc(thr) do { /* tracepoint name: omrshr.318 */ \
	if ((unsigned char) omrshr_UtActive[318] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((318u << 8) | omrshr_UtActive[318]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_ExitAlloc(thr)   /* tracepoint name: omrshr.318 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_Partition(thr, P1, P2) do { /* tracepoint name: omrshr.319 */ \
	if ((unsigned char) omrshr_UtActive[319] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((319u << 8) | omrshr_UtActive[319]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_Partition(thr, P1, P2)   /* tracepoint name: omrshr.319 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_ExistingPartition(thr) do { /* tracepoint name: omrshr.320 */ \
	if ((unsigned char) omrshr_UtActive[320] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((320u << 8) | omrshr_UtActive[320]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_ExistingPartition(thr)   /* tracepoint name: omrshr.320 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_CreatePartitionLink(thr) do { /* tracepoint name: omrshr.321 */ \
	if ((unsigned char) omrshr_UtActive[321] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((321u << 8) | omrshr_UtActive[321]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_CreatePartitionLink(thr)   /* tracepoint name: omrshr.321 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_SetupLink(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.322 */ \
	if ((unsigned char) omrshr_UtActive[322] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((322u << 8) | omrshr_UtActive[322]), "\6\4\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_SetupLink(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.322 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_setIdentifiedClasspath_ExitDone(thr, P1, P2) do { /* tracepoint name: omrshr.323 */ \
	if ((unsigned char) omrshr_UtActive[323] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((323u << 8) | omrshr_UtActive[323]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPC_setIdentifiedClasspath_ExitDone(thr, P1, P2)   /* tracepoint name: omrshr.323 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_findIdentifiedWithPartition_Partition(thr, P1, P2) do { /* tracepoint name: omrshr.324 */ \
	if ((unsigned char) omrshr_UtActive[324] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((324u << 8) | omrshr_UtActive[324]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPC_findIdentifiedWithPartition_Partition(thr, P1, P2)   /* tracepoint name: omrshr.324 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_localMatchCheck_Enter(thr, P1, P2, P3) do { /* tracepoint name: omrshr.325 */ \
	if ((unsigned char) omrshr_UtActive[325] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((325u << 8) | omrshr_UtActive[325]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPC_localMatchCheck_Enter(thr, P1, P2, P3)   /* tracepoint name: omrshr.325 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPC_localMatchCheck_Exit(thr, P1) do { /* tracepoint name: omrshr.326 */ \
	if ((unsigned char) omrshr_UtActive[326] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((326u << 8) | omrshr_UtActive[326]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPC_localMatchCheck_Exit(thr, P1)   /* tracepoint name: omrshr.326 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startCriticalUpdate_Event(P1) do { /* tracepoint name: omrshr.327 */ \
	if ((unsigned char) omrshr_UtActive[327] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((327u << 8) | omrshr_UtActive[327]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_startCriticalUpdate_Event(P1)   /* tracepoint name: omrshr.327 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_endCriticalUpdate_Event(P1) do { /* tracepoint name: omrshr.328 */ \
	if ((unsigned char) omrshr_UtActive[328] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((328u << 8) | omrshr_UtActive[328]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_endCriticalUpdate_Event(P1)   /* tracepoint name: omrshr.328 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_CRASH2_commitUpdate_EnteredCritical(thr) do { /* tracepoint name: omrshr.330 */ \
	if ((unsigned char) omrshr_UtActive[330] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((330u << 8) | omrshr_UtActive[330]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_CRASH2_commitUpdate_EnteredCritical(thr)   /* tracepoint name: omrshr.330 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_CRASH3_commitUpdate_Event1(thr, P1, P2) do { /* tracepoint name: omrshr.331 */ \
	if ((unsigned char) omrshr_UtActive[331] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((331u << 8) | omrshr_UtActive[331]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_CRASH3_commitUpdate_Event1(thr, P1, P2)   /* tracepoint name: omrshr.331 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_CRASH4_commitUpdate_Event2(thr, P1, P2) do { /* tracepoint name: omrshr.332 */ \
	if ((unsigned char) omrshr_UtActive[332] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((332u << 8) | omrshr_UtActive[332]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_CRASH4_commitUpdate_Event2(thr, P1, P2)   /* tracepoint name: omrshr.332 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_CRASH5_commitUpdate_EndingCritical(thr) do { /* tracepoint name: omrshr.333 */ \
	if ((unsigned char) omrshr_UtActive[333] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((333u << 8) | omrshr_UtActive[333]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_CRASH5_commitUpdate_EndingCritical(thr)   /* tracepoint name: omrshr.333 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createPathString_AllocateBuffer(thr, P1, P2) do { /* tracepoint name: omrshr.335 */ \
	if ((unsigned char) omrshr_UtActive[335] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((335u << 8) | omrshr_UtActive[335]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_createPathString_AllocateBuffer(thr, P1, P2)   /* tracepoint name: omrshr.335 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_PoolNew(P1) do { /* tracepoint name: omrshr.336 */ \
	if ((unsigned char) omrshr_UtActive[336] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((336u << 8) | omrshr_UtActive[336]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_createLink_PoolNew(P1)   /* tracepoint name: omrshr.336 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_rcTableAdd_HashtableAdd(thr, P1) do { /* tracepoint name: omrshr.337 */ \
	if ((unsigned char) omrshr_UtActive[337] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((337u << 8) | omrshr_UtActive[337]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_rcTableAdd_HashtableAdd(thr, P1)   /* tracepoint name: omrshr.337 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_prepareForCompare_AllocateTempBuf(thr, P1) do { /* tracepoint name: omrshr.338 */ \
	if ((unsigned char) omrshr_UtActive[338] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((338u << 8) | omrshr_UtActive[338]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_prepareForCompare_AllocateTempBuf(thr, P1)   /* tracepoint name: omrshr.338 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_FreeBuffer(thr, P1) do { /* tracepoint name: omrshr.339 */ \
	if ((unsigned char) omrshr_UtActive[339] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((339u << 8) | omrshr_UtActive[339]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_FreeBuffer(thr, P1)   /* tracepoint name: omrshr.339 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_touchForClassFiles_FreeBuffer(thr, P1) do { /* tracepoint name: omrshr.340 */ \
	if ((unsigned char) omrshr_UtActive[340] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((340u << 8) | omrshr_UtActive[340]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_touchForClassFiles_FreeBuffer(thr, P1)   /* tracepoint name: omrshr.340 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_CpLinkedListImpl_link_PoolNew(P1) do { /* tracepoint name: omrshr.341 */ \
	if ((unsigned char) omrshr_UtActive[341] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((341u << 8) | omrshr_UtActive[341]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_CpLinkedListImpl_link_PoolNew(P1)   /* tracepoint name: omrshr.341 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_PoolNewHdr(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.342 */ \
	if ((unsigned char) omrshr_UtActive[342] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((342u << 8) | omrshr_UtActive[342]), "\12\377\4\6\4\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_PoolNewHdr(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.342 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_cpeTableAdd_HashtableAdd(thr) do { /* tracepoint name: omrshr.343 */ \
	if ((unsigned char) omrshr_UtActive[343] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((343u << 8) | omrshr_UtActive[343]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_cpeTableAdd_HashtableAdd(thr)   /* tracepoint name: omrshr.343 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_allocateClasspathItem(thr, P1, P2) do { /* tracepoint name: omrshr.344 */ \
	if ((unsigned char) omrshr_UtActive[344] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((344u << 8) | omrshr_UtActive[344]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_allocateClasspathItem(thr, P1, P2)   /* tracepoint name: omrshr.344 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_allocateBuf(thr, P1) do { /* tracepoint name: omrshr.345 */ \
	if ((unsigned char) omrshr_UtActive[345] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((345u << 8) | omrshr_UtActive[345]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_allocateBuf(thr, P1)   /* tracepoint name: omrshr.345 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_freeBuf(thr, P1) do { /* tracepoint name: omrshr.346 */ \
	if ((unsigned char) omrshr_UtActive[346] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((346u << 8) | omrshr_UtActive[346]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_freeBuf(thr, P1)   /* tracepoint name: omrshr.346 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_allocateClasspathItem(thr, P1, P2) do { /* tracepoint name: omrshr.347 */ \
	if ((unsigned char) omrshr_UtActive[347] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((347u << 8) | omrshr_UtActive[347]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_allocateClasspathItem(thr, P1, P2)   /* tracepoint name: omrshr.347 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_allocateBuf(thr, P1) do { /* tracepoint name: omrshr.348 */ \
	if ((unsigned char) omrshr_UtActive[348] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((348u << 8) | omrshr_UtActive[348]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_allocateBuf(thr, P1)   /* tracepoint name: omrshr.348 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_freeBuf(thr, P1) do { /* tracepoint name: omrshr.349 */ \
	if ((unsigned char) omrshr_UtActive[349] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((349u << 8) | omrshr_UtActive[349]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_freeBuf(thr, P1)   /* tracepoint name: omrshr.349 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_enterLocalMutex_pre(P1, P2, P3) do { /* tracepoint name: omrshr.350 */ \
	if ((unsigned char) omrshr_UtActive[350] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((350u << 8) | omrshr_UtActive[350]), "\6\377\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_enterLocalMutex_pre(P1, P2, P3)   /* tracepoint name: omrshr.350 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_enterLocalMutex_post(P1, P2, P3, P4) do { /* tracepoint name: omrshr.351 */ \
	if ((unsigned char) omrshr_UtActive[351] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((351u << 8) | omrshr_UtActive[351]), "\6\377\4\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_enterLocalMutex_post(P1, P2, P3, P4)   /* tracepoint name: omrshr.351 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_exitLocalMutex_pre(P1, P2, P3) do { /* tracepoint name: omrshr.352 */ \
	if ((unsigned char) omrshr_UtActive[352] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((352u << 8) | omrshr_UtActive[352]), "\6\377\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_exitLocalMutex_pre(P1, P2, P3)   /* tracepoint name: omrshr.352 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_exitLocalMutex_post(P1, P2, P3, P4) do { /* tracepoint name: omrshr.353 */ \
	if ((unsigned char) omrshr_UtActive[353] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((353u << 8) | omrshr_UtActive[353]), "\6\377\4\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_exitLocalMutex_post(P1, P2, P3, P4)   /* tracepoint name: omrshr.353 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterWriteMutex_Enter(P1, P2, P3) do { /* tracepoint name: omrshr.354 */ \
	if ((unsigned char) omrshr_UtActive[354] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((354u << 8) | omrshr_UtActive[354]), "\6\4\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_enterWriteMutex_Enter(P1, P2, P3)   /* tracepoint name: omrshr.354 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterWriteMutex_Exit(P1, P2, P3, P4) do { /* tracepoint name: omrshr.355 */ \
	if ((unsigned char) omrshr_UtActive[355] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((355u << 8) | omrshr_UtActive[355]), "\6\4\377\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_enterWriteMutex_Exit(P1, P2, P3, P4)   /* tracepoint name: omrshr.355 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitWriteMutex_Enter(P1, P2) do { /* tracepoint name: omrshr.356 */ \
	if ((unsigned char) omrshr_UtActive[356] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((356u << 8) | omrshr_UtActive[356]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_exitWriteMutex_Enter(P1, P2)   /* tracepoint name: omrshr.356 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitWriteMutex_Exit(P1, P2, P3) do { /* tracepoint name: omrshr.357 */ \
	if ((unsigned char) omrshr_UtActive[357] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((357u << 8) | omrshr_UtActive[357]), "\6\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_exitWriteMutex_Exit(P1, P2, P3)   /* tracepoint name: omrshr.357 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadMutex_Enter(P1, P2) do { /* tracepoint name: omrshr.358 */ \
	if ((unsigned char) omrshr_UtActive[358] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((358u << 8) | omrshr_UtActive[358]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadMutex_Enter(P1, P2)   /* tracepoint name: omrshr.358 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadMutex_WaitOnGlobalMutex(P1, P2) do { /* tracepoint name: omrshr.359 */ \
	if ((unsigned char) omrshr_UtActive[359] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((359u << 8) | omrshr_UtActive[359]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadMutex_WaitOnGlobalMutex(P1, P2)   /* tracepoint name: omrshr.359 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadMutex_ReleasingGlobalMutex(P1, P2) do { /* tracepoint name: omrshr.360 */ \
	if ((unsigned char) omrshr_UtActive[360] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((360u << 8) | omrshr_UtActive[360]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadMutex_ReleasingGlobalMutex(P1, P2)   /* tracepoint name: omrshr.360 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadMutex_Exit(P1, P2, P3) do { /* tracepoint name: omrshr.361 */ \
	if ((unsigned char) omrshr_UtActive[361] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((361u << 8) | omrshr_UtActive[361]), "\6\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadMutex_Exit(P1, P2, P3)   /* tracepoint name: omrshr.361 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadMutex_Enter(P1, P2) do { /* tracepoint name: omrshr.362 */ \
	if ((unsigned char) omrshr_UtActive[362] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((362u << 8) | omrshr_UtActive[362]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadMutex_Enter(P1, P2)   /* tracepoint name: omrshr.362 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadMutex_Exit(P1, P2) do { /* tracepoint name: omrshr.363 */ \
	if ((unsigned char) omrshr_UtActive[363] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((363u << 8) | omrshr_UtActive[363]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadMutex_Exit(P1, P2)   /* tracepoint name: omrshr.363 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_PERFCNTR(thr, P1) do { /* tracepoint name: omrshr.364 */ \
	if ((unsigned char) omrshr_UtActive[364] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((364u << 8) | omrshr_UtActive[364]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_PERFCNTR(thr, P1)   /* tracepoint name: omrshr.364 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_TMI_LocalCheckTimestamp_Checking_File(thr, P1) do { /* tracepoint name: omrshr.365 */ \
	if ((unsigned char) omrshr_UtActive[365] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((365u << 8) | omrshr_UtActive[365]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_TMI_LocalCheckTimestamp_Checking_File(thr, P1)   /* tracepoint name: omrshr.365 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_TMI_LocalCheckTimestamp_Checking_Jar(thr, P1) do { /* tracepoint name: omrshr.366 */ \
	if ((unsigned char) omrshr_UtActive[366] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((366u << 8) | omrshr_UtActive[366]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_TMI_LocalCheckTimestamp_Checking_Jar(thr, P1)   /* tracepoint name: omrshr.366 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Constructor_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.367 */ \
	if ((unsigned char) omrshr_UtActive[367] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((367u << 8) | omrshr_UtActive[367]), "\377\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Constructor_Entry(P1, P2, P3)   /* tracepoint name: omrshr.367 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Constructor_Exit(P1) do { /* tracepoint name: omrshr.368 */ \
	if ((unsigned char) omrshr_UtActive[368] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((368u << 8) | omrshr_UtActive[368]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Constructor_Exit(P1)   /* tracepoint name: omrshr.368 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.369 */ \
	if ((unsigned char) omrshr_UtActive[369] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((369u << 8) | omrshr_UtActive[369]), "\377\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_Entry(P1, P2, P3)   /* tracepoint name: omrshr.369 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_Exit_Opened(P1) do { /* tracepoint name: omrshr.370 */ \
	if ((unsigned char) omrshr_UtActive[370] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((370u << 8) | omrshr_UtActive[370]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_Exit_Opened(P1)   /* tracepoint name: omrshr.370 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_Exit_Created(P1) do { /* tracepoint name: omrshr.371 */ \
	if ((unsigned char) omrshr_UtActive[371] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((371u << 8) | omrshr_UtActive[371]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_Exit_Created(P1)   /* tracepoint name: omrshr.371 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_Exit_Failed(P1) do { /* tracepoint name: omrshr.372 */ \
	if ((unsigned char) omrshr_UtActive[372] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((372u << 8) | omrshr_UtActive[372]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_Exit_Failed(P1)   /* tracepoint name: omrshr.372 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_attempt_Restart(P1) do { /* tracepoint name: omrshr.373 */ \
	if ((unsigned char) omrshr_UtActive[373] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((373u << 8) | omrshr_UtActive[373]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_attempt_Restart(P1)   /* tracepoint name: omrshr.373 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_GlobalLock_getMutex(P1) do { /* tracepoint name: omrshr.377 */ \
	if ((unsigned char) omrshr_UtActive[377] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((377u << 8) | omrshr_UtActive[377]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_GlobalLock_getMutex(P1)   /* tracepoint name: omrshr.377 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_GlobalLock_gotMutex(P1) do { /* tracepoint name: omrshr.378 */ \
	if ((unsigned char) omrshr_UtActive[378] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((378u << 8) | omrshr_UtActive[378]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_GlobalLock_gotMutex(P1)   /* tracepoint name: omrshr.378 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_GlobalLock_released() do { /* tracepoint name: omrshr.379 */ \
	if ((unsigned char) omrshr_UtActive[379] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((379u << 8) | omrshr_UtActive[379]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_GlobalLock_released()   /* tracepoint name: omrshr.379 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_ExitAttachFailed() do { /* tracepoint name: omrshr.386 */ \
	if ((unsigned char) omrshr_UtActive[386] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((386u << 8) | omrshr_UtActive[386]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_ExitAttachFailed()   /* tracepoint name: omrshr.386 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_ExitOpExist() do { /* tracepoint name: omrshr.388 */ \
	if ((unsigned char) omrshr_UtActive[388] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((388u << 8) | omrshr_UtActive[388]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_ExitOpExist()   /* tracepoint name: omrshr.388 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Entry(P1) do { /* tracepoint name: omrshr.390 */ \
	if ((unsigned char) omrshr_UtActive[390] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((390u << 8) | omrshr_UtActive[390]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Entry(P1)   /* tracepoint name: omrshr.390 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_shmem_open(P1, P2) do { /* tracepoint name: omrshr.391 */ \
	if ((unsigned char) omrshr_UtActive[391] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((391u << 8) | omrshr_UtActive[391]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_shmem_open(P1, P2)   /* tracepoint name: omrshr.391 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_release_cache_activity() do { /* tracepoint name: omrshr.392 */ \
	if ((unsigned char) omrshr_UtActive[392] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((392u << 8) | omrshr_UtActive[392]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_release_cache_activity()   /* tracepoint name: omrshr.392 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit_Restart1() do { /* tracepoint name: omrshr.393 */ \
	if ((unsigned char) omrshr_UtActive[393] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((393u << 8) | omrshr_UtActive[393]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit_Restart1()   /* tracepoint name: omrshr.393 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit_Restart2() do { /* tracepoint name: omrshr.394 */ \
	if ((unsigned char) omrshr_UtActive[394] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((394u << 8) | omrshr_UtActive[394]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit_Restart2()   /* tracepoint name: omrshr.394 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit_Opened(P1) do { /* tracepoint name: omrshr.395 */ \
	if ((unsigned char) omrshr_UtActive[395] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((395u << 8) | omrshr_UtActive[395]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit_Opened(P1)   /* tracepoint name: omrshr.395 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit1() do { /* tracepoint name: omrshr.396 */ \
	if ((unsigned char) omrshr_UtActive[396] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((396u << 8) | omrshr_UtActive[396]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit1()   /* tracepoint name: omrshr.396 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit2() do { /* tracepoint name: omrshr.397 */ \
	if ((unsigned char) omrshr_UtActive[397] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((397u << 8) | omrshr_UtActive[397]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit2()   /* tracepoint name: omrshr.397 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit3() do { /* tracepoint name: omrshr.398 */ \
	if ((unsigned char) omrshr_UtActive[398] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((398u << 8) | omrshr_UtActive[398]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit3()   /* tracepoint name: omrshr.398 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstanceEntry() do { /* tracepoint name: omrshr.399 */ \
	if ((unsigned char) omrshr_UtActive[399] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((399u << 8) | omrshr_UtActive[399]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstanceEntry()   /* tracepoint name: omrshr.399 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstanceExit() do { /* tracepoint name: omrshr.400 */ \
	if ((unsigned char) omrshr_UtActive[400] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((400u << 8) | omrshr_UtActive[400]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstanceExit()   /* tracepoint name: omrshr.400 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Entry() do { /* tracepoint name: omrshr.401 */ \
	if ((unsigned char) omrshr_UtActive[401] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((401u << 8) | omrshr_UtActive[401]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Entry()   /* tracepoint name: omrshr.401 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Debug1(P1, P2) do { /* tracepoint name: omrshr.402 */ \
	if ((unsigned char) omrshr_UtActive[402] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((402u << 8) | omrshr_UtActive[402]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Debug1(P1, P2)   /* tracepoint name: omrshr.402 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Exit1() do { /* tracepoint name: omrshr.403 */ \
	if ((unsigned char) omrshr_UtActive[403] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((403u << 8) | omrshr_UtActive[403]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Exit1()   /* tracepoint name: omrshr.403 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Exit2(P1, P2) do { /* tracepoint name: omrshr.404 */ \
	if ((unsigned char) omrshr_UtActive[404] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((404u << 8) | omrshr_UtActive[404]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Exit2(P1, P2)   /* tracepoint name: omrshr.404 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Exit3(P1, P2) do { /* tracepoint name: omrshr.405 */ \
	if ((unsigned char) omrshr_UtActive[405] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((405u << 8) | omrshr_UtActive[405]), "\10\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Exit3(P1, P2)   /* tracepoint name: omrshr.405 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Exit() do { /* tracepoint name: omrshr.406 */ \
	if ((unsigned char) omrshr_UtActive[406] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((406u << 8) | omrshr_UtActive[406]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Exit()   /* tracepoint name: omrshr.406 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detachRegion_Entry() do { /* tracepoint name: omrshr.407 */ \
	if ((unsigned char) omrshr_UtActive[407] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((407u << 8) | omrshr_UtActive[407]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_detachRegion_Entry()   /* tracepoint name: omrshr.407 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detachRegion_Debug(P1, P2) do { /* tracepoint name: omrshr.408 */ \
	if ((unsigned char) omrshr_UtActive[408] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((408u << 8) | omrshr_UtActive[408]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_detachRegion_Debug(P1, P2)   /* tracepoint name: omrshr.408 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detachRegion_Exit() do { /* tracepoint name: omrshr.409 */ \
	if ((unsigned char) omrshr_UtActive[409] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((409u << 8) | omrshr_UtActive[409]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_detachRegion_Exit()   /* tracepoint name: omrshr.409 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_cleanup_Entry() do { /* tracepoint name: omrshr.410 */ \
	if ((unsigned char) omrshr_UtActive[410] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((410u << 8) | omrshr_UtActive[410]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_cleanup_Entry()   /* tracepoint name: omrshr.410 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_cleanup_Exit() do { /* tracepoint name: omrshr.411 */ \
	if ((unsigned char) omrshr_UtActive[411] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((411u << 8) | omrshr_UtActive[411]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_cleanup_Exit()   /* tracepoint name: omrshr.411 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detach_Entry() do { /* tracepoint name: omrshr.412 */ \
	if ((unsigned char) omrshr_UtActive[412] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((412u << 8) | omrshr_UtActive[412]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_detach_Entry()   /* tracepoint name: omrshr.412 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detach_Debug(P1, P2) do { /* tracepoint name: omrshr.413 */ \
	if ((unsigned char) omrshr_UtActive[413] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((413u << 8) | omrshr_UtActive[413]), "\377\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_detach_Debug(P1, P2)   /* tracepoint name: omrshr.413 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detach_Exit() do { /* tracepoint name: omrshr.414 */ \
	if ((unsigned char) omrshr_UtActive[414] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((414u << 8) | omrshr_UtActive[414]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_detach_Exit()   /* tracepoint name: omrshr.414 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_detach_Exit1() do { /* tracepoint name: omrshr.415 */ \
	if ((unsigned char) omrshr_UtActive[415] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((415u << 8) | omrshr_UtActive[415]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_detach_Exit1()   /* tracepoint name: omrshr.415 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_count_inc() do { /* tracepoint name: omrshr.416 */ \
	if ((unsigned char) omrshr_UtActive[416] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((416u << 8) | omrshr_UtActive[416]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_count_inc()   /* tracepoint name: omrshr.416 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_count_dec() do { /* tracepoint name: omrshr.417 */ \
	if ((unsigned char) omrshr_UtActive[417] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((417u << 8) | omrshr_UtActive[417]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_count_dec()   /* tracepoint name: omrshr.417 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Header_Debug(P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.418 */ \
	if ((unsigned char) omrshr_UtActive[418] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((418u << 8) | omrshr_UtActive[418]), "\6\4\10\4\377", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_OSC_Header_Debug(P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.418 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_add_Entry() do { /* tracepoint name: omrshr.419 */ \
	if ((unsigned char) omrshr_UtActive[419] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((419u << 8) | omrshr_UtActive[419]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_add_Entry()   /* tracepoint name: omrshr.419 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_add_Exit1() do { /* tracepoint name: omrshr.420 */ \
	if ((unsigned char) omrshr_UtActive[420] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((420u << 8) | omrshr_UtActive[420]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_add_Exit1()   /* tracepoint name: omrshr.420 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_add_Exit() do { /* tracepoint name: omrshr.421 */ \
	if ((unsigned char) omrshr_UtActive[421] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((421u << 8) | omrshr_UtActive[421]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_add_Exit()   /* tracepoint name: omrshr.421 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Entry() do { /* tracepoint name: omrshr.422 */ \
	if ((unsigned char) omrshr_UtActive[422] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((422u << 8) | omrshr_UtActive[422]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Entry()   /* tracepoint name: omrshr.422 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Exit1() do { /* tracepoint name: omrshr.423 */ \
	if ((unsigned char) omrshr_UtActive[423] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((423u << 8) | omrshr_UtActive[423]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Exit1()   /* tracepoint name: omrshr.423 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Exit2() do { /* tracepoint name: omrshr.424 */ \
	if ((unsigned char) omrshr_UtActive[424] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((424u << 8) | omrshr_UtActive[424]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Exit2()   /* tracepoint name: omrshr.424 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Exit(P1) do { /* tracepoint name: omrshr.425 */ \
	if ((unsigned char) omrshr_UtActive[425] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((425u << 8) | omrshr_UtActive[425]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Exit(P1)   /* tracepoint name: omrshr.425 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Debug1(P1) do { /* tracepoint name: omrshr.426 */ \
	if ((unsigned char) omrshr_UtActive[426] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((426u << 8) | omrshr_UtActive[426]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Debug1(P1)   /* tracepoint name: omrshr.426 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Debug2(P1) do { /* tracepoint name: omrshr.427 */ \
	if ((unsigned char) omrshr_UtActive[427] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((427u << 8) | omrshr_UtActive[427]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Debug2(P1)   /* tracepoint name: omrshr.427 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_destroy_Entry() do { /* tracepoint name: omrshr.429 */ \
	if ((unsigned char) omrshr_UtActive[429] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((429u << 8) | omrshr_UtActive[429]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_destroy_Entry()   /* tracepoint name: omrshr.429 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_destroy_Exit() do { /* tracepoint name: omrshr.430 */ \
	if ((unsigned char) omrshr_UtActive[430] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((430u << 8) | omrshr_UtActive[430]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_destroy_Exit()   /* tracepoint name: omrshr.430 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_enterMutex_Entry(P1) do { /* tracepoint name: omrshr.431 */ \
	if ((unsigned char) omrshr_UtActive[431] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((431u << 8) | omrshr_UtActive[431]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_enterMutex_Entry(P1)   /* tracepoint name: omrshr.431 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_enterMutex_Exit(P1) do { /* tracepoint name: omrshr.432 */ \
	if ((unsigned char) omrshr_UtActive[432] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((432u << 8) | omrshr_UtActive[432]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_enterMutex_Exit(P1)   /* tracepoint name: omrshr.432 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_exitMutex_Entry(P1) do { /* tracepoint name: omrshr.433 */ \
	if ((unsigned char) omrshr_UtActive[433] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((433u << 8) | omrshr_UtActive[433]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_exitMutex_Entry(P1)   /* tracepoint name: omrshr.433 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_exitMutex_Exit(P1) do { /* tracepoint name: omrshr.434 */ \
	if ((unsigned char) omrshr_UtActive[434] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((434u << 8) | omrshr_UtActive[434]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_exitMutex_Exit(P1)   /* tracepoint name: omrshr.434 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Entry() do { /* tracepoint name: omrshr.435 */ \
	if ((unsigned char) omrshr_UtActive[435] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((435u << 8) | omrshr_UtActive[435]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Entry()   /* tracepoint name: omrshr.435 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Exit1() do { /* tracepoint name: omrshr.436 */ \
	if ((unsigned char) omrshr_UtActive[436] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((436u << 8) | omrshr_UtActive[436]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Exit1()   /* tracepoint name: omrshr.436 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Exit() do { /* tracepoint name: omrshr.437 */ \
	if ((unsigned char) omrshr_UtActive[437] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((437u << 8) | omrshr_UtActive[437]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Exit()   /* tracepoint name: omrshr.437 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_exitMutex_Exit1() do { /* tracepoint name: omrshr.438 */ \
	if ((unsigned char) omrshr_UtActive[438] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((438u << 8) | omrshr_UtActive[438]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_exitMutex_Exit1()   /* tracepoint name: omrshr.438 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_enterMutex_Exit1() do { /* tracepoint name: omrshr.439 */ \
	if ((unsigned char) omrshr_UtActive[439] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((439u << 8) | omrshr_UtActive[439]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_enterMutex_Exit1()   /* tracepoint name: omrshr.439 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_entry(thr) do { /* tracepoint name: omrshr.440 */ \
	if ((unsigned char) omrshr_UtActive[440] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((440u << 8) | omrshr_UtActive[440]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_entry(thr)   /* tracepoint name: omrshr.440 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_exit_Noop(thr) do { /* tracepoint name: omrshr.441 */ \
	if ((unsigned char) omrshr_UtActive[441] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((441u << 8) | omrshr_UtActive[441]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_exit_Noop(thr)   /* tracepoint name: omrshr.441 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_exit(thr) do { /* tracepoint name: omrshr.442 */ \
	if ((unsigned char) omrshr_UtActive[442] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((442u << 8) | omrshr_UtActive[442]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_exit(thr)   /* tracepoint name: omrshr.442 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_entry(thr) do { /* tracepoint name: omrshr.443 */ \
	if ((unsigned char) omrshr_UtActive[443] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((443u << 8) | omrshr_UtActive[443]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_entry(thr)   /* tracepoint name: omrshr.443 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_exit_Noop(thr) do { /* tracepoint name: omrshr.444 */ \
	if ((unsigned char) omrshr_UtActive[444] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((444u << 8) | omrshr_UtActive[444]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_exit_Noop(thr)   /* tracepoint name: omrshr.444 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_exit(thr) do { /* tracepoint name: omrshr.445 */ \
	if ((unsigned char) omrshr_UtActive[445] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((445u << 8) | omrshr_UtActive[445]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_exit(thr)   /* tracepoint name: omrshr.445 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_compareWriteHash_Enter(P1, P2) do { /* tracepoint name: omrshr.446 */ \
	if ((unsigned char) omrshr_UtActive[446] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((446u << 8) | omrshr_UtActive[446]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_compareWriteHash_Enter(P1, P2)   /* tracepoint name: omrshr.446 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_compareWriteHash_Updating(P1) do { /* tracepoint name: omrshr.447 */ \
	if ((unsigned char) omrshr_UtActive[447] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((447u << 8) | omrshr_UtActive[447]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_compareWriteHash_Updating(P1)   /* tracepoint name: omrshr.447 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_compareWriteHash_Exit1() do { /* tracepoint name: omrshr.448 */ \
	if ((unsigned char) omrshr_UtActive[448] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((448u << 8) | omrshr_UtActive[448]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_compareWriteHash_Exit1()   /* tracepoint name: omrshr.448 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_compareWriteHash_Exit2() do { /* tracepoint name: omrshr.449 */ \
	if ((unsigned char) omrshr_UtActive[449] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((449u << 8) | omrshr_UtActive[449]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_compareWriteHash_Exit2()   /* tracepoint name: omrshr.449 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_compareWriteHash_Exit3() do { /* tracepoint name: omrshr.450 */ \
	if ((unsigned char) omrshr_UtActive[450] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((450u << 8) | omrshr_UtActive[450]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_compareWriteHash_Exit3()   /* tracepoint name: omrshr.450 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_testAndSetWriteHash_Enter(P1, P2, P3, P4) do { /* tracepoint name: omrshr.452 */ \
	if ((unsigned char) omrshr_UtActive[452] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((452u << 8) | omrshr_UtActive[452]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_testAndSetWriteHash_Enter(P1, P2, P3, P4)   /* tracepoint name: omrshr.452 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_testAndSetWriteHash_Exit1(P1, P2, P3) do { /* tracepoint name: omrshr.453 */ \
	if ((unsigned char) omrshr_UtActive[453] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((453u << 8) | omrshr_UtActive[453]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_testAndSetWriteHash_Exit1(P1, P2, P3)   /* tracepoint name: omrshr.453 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_testAndSetWriteHash_Exit2(P1, P2) do { /* tracepoint name: omrshr.454 */ \
	if ((unsigned char) omrshr_UtActive[454] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((454u << 8) | omrshr_UtActive[454]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_testAndSetWriteHash_Exit2(P1, P2)   /* tracepoint name: omrshr.454 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryResetWriteHash_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.455 */ \
	if ((unsigned char) omrshr_UtActive[455] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((455u << 8) | omrshr_UtActive[455]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_tryResetWriteHash_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.455 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryResetWriteHash_Exit1(P1, P2, P3) do { /* tracepoint name: omrshr.456 */ \
	if ((unsigned char) omrshr_UtActive[456] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((456u << 8) | omrshr_UtActive[456]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_tryResetWriteHash_Exit1(P1, P2, P3)   /* tracepoint name: omrshr.456 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryResetWriteHash_Exit2(P1, P2) do { /* tracepoint name: omrshr.457 */ \
	if ((unsigned char) omrshr_UtActive[457] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((457u << 8) | omrshr_UtActive[457]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryResetWriteHash_Exit2(P1, P2)   /* tracepoint name: omrshr.457 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setWriteHash_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.458 */ \
	if ((unsigned char) omrshr_UtActive[458] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((458u << 8) | omrshr_UtActive[458]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_setWriteHash_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.458 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setWriteHash_Exit(P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.459 */ \
	if ((unsigned char) omrshr_UtActive[459] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((459u << 8) | omrshr_UtActive[459]), "\4\4\4\4\4", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CC_setWriteHash_Exit(P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.459 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_testForClasspathReset_Entry(thr) do { /* tracepoint name: omrshr.460 */ \
	if ((unsigned char) omrshr_UtActive[460] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((460u << 8) | omrshr_UtActive[460]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_testForClasspathReset_Entry(thr)   /* tracepoint name: omrshr.460 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_testForClasspathReset_ExitReset(thr) do { /* tracepoint name: omrshr.461 */ \
	if ((unsigned char) omrshr_UtActive[461] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((461u << 8) | omrshr_UtActive[461]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_testForClasspathReset_ExitReset(thr)   /* tracepoint name: omrshr.461 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_testForClasspathReset_ExitDoNothing(thr) do { /* tracepoint name: omrshr.462 */ \
	if ((unsigned char) omrshr_UtActive[462] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((462u << 8) | omrshr_UtActive[462]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_testForClasspathReset_ExitDoNothing(thr)   /* tracepoint name: omrshr.462 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_addItem_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.463 */ \
	if ((unsigned char) omrshr_UtActive[463] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((463u << 8) | omrshr_UtActive[463]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPI_addItem_Entry(P1, P2, P3)   /* tracepoint name: omrshr.463 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_addItem_ExitTooMany() do { /* tracepoint name: omrshr.464 */ \
	if ((unsigned char) omrshr_UtActive[464] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((464u << 8) | omrshr_UtActive[464]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_addItem_ExitTooMany()   /* tracepoint name: omrshr.464 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_addItem_ExitError() do { /* tracepoint name: omrshr.465 */ \
	if ((unsigned char) omrshr_UtActive[465] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((465u << 8) | omrshr_UtActive[465]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_addItem_ExitError()   /* tracepoint name: omrshr.465 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_addItem_Exit(P1) do { /* tracepoint name: omrshr.466 */ \
	if ((unsigned char) omrshr_UtActive[466] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((466u << 8) | omrshr_UtActive[466]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_addItem_Exit(P1)   /* tracepoint name: omrshr.466 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_Entry(P1, P2) do { /* tracepoint name: omrshr.467 */ \
	if ((unsigned char) omrshr_UtActive[467] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((467u << 8) | omrshr_UtActive[467]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_Entry(P1, P2)   /* tracepoint name: omrshr.467 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitNullError() do { /* tracepoint name: omrshr.468 */ \
	if ((unsigned char) omrshr_UtActive[468] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((468u << 8) | omrshr_UtActive[468]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitNullError()   /* tracepoint name: omrshr.468 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitTrue1() do { /* tracepoint name: omrshr.469 */ \
	if ((unsigned char) omrshr_UtActive[469] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((469u << 8) | omrshr_UtActive[469]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitTrue1()   /* tracepoint name: omrshr.469 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitTrue2() do { /* tracepoint name: omrshr.470 */ \
	if ((unsigned char) omrshr_UtActive[470] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((470u << 8) | omrshr_UtActive[470]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitTrue2()   /* tracepoint name: omrshr.470 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse1() do { /* tracepoint name: omrshr.471 */ \
	if ((unsigned char) omrshr_UtActive[471] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((471u << 8) | omrshr_UtActive[471]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse1()   /* tracepoint name: omrshr.471 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse2() do { /* tracepoint name: omrshr.472 */ \
	if ((unsigned char) omrshr_UtActive[472] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((472u << 8) | omrshr_UtActive[472]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse2()   /* tracepoint name: omrshr.472 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse3() do { /* tracepoint name: omrshr.473 */ \
	if ((unsigned char) omrshr_UtActive[473] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((473u << 8) | omrshr_UtActive[473]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse3()   /* tracepoint name: omrshr.473 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse4() do { /* tracepoint name: omrshr.474 */ \
	if ((unsigned char) omrshr_UtActive[474] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((474u << 8) | omrshr_UtActive[474]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_isSamePartitionContext_ExitFalse4()   /* tracepoint name: omrshr.474 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_Entry(P1, P2) do { /* tracepoint name: omrshr.475 */ \
	if ((unsigned char) omrshr_UtActive[475] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((475u << 8) | omrshr_UtActive[475]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_Entry(P1, P2)   /* tracepoint name: omrshr.475 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitNullError() do { /* tracepoint name: omrshr.476 */ \
	if ((unsigned char) omrshr_UtActive[476] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((476u << 8) | omrshr_UtActive[476]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitNullError()   /* tracepoint name: omrshr.476 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitTrue1() do { /* tracepoint name: omrshr.477 */ \
	if ((unsigned char) omrshr_UtActive[477] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((477u << 8) | omrshr_UtActive[477]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitTrue1()   /* tracepoint name: omrshr.477 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitTrue2() do { /* tracepoint name: omrshr.478 */ \
	if ((unsigned char) omrshr_UtActive[478] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((478u << 8) | omrshr_UtActive[478]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitTrue2()   /* tracepoint name: omrshr.478 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitFalse1() do { /* tracepoint name: omrshr.479 */ \
	if ((unsigned char) omrshr_UtActive[479] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((479u << 8) | omrshr_UtActive[479]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitFalse1()   /* tracepoint name: omrshr.479 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitFalse2() do { /* tracepoint name: omrshr.480 */ \
	if ((unsigned char) omrshr_UtActive[480] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((480u << 8) | omrshr_UtActive[480]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitFalse2()   /* tracepoint name: omrshr.480 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitFalse3() do { /* tracepoint name: omrshr.481 */ \
	if ((unsigned char) omrshr_UtActive[481] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((481u << 8) | omrshr_UtActive[481]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitFalse3()   /* tracepoint name: omrshr.481 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_compare_ExitFalse4(P1) do { /* tracepoint name: omrshr.482 */ \
	if ((unsigned char) omrshr_UtActive[482] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((482u << 8) | omrshr_UtActive[482]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_compare_ExitFalse4(P1)   /* tracepoint name: omrshr.482 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_find_Entry(P1, P2) do { /* tracepoint name: omrshr.483 */ \
	if ((unsigned char) omrshr_UtActive[483] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((483u << 8) | omrshr_UtActive[483]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CPI_find_Entry(P1, P2)   /* tracepoint name: omrshr.483 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_find_ExitFound(P1) do { /* tracepoint name: omrshr.484 */ \
	if ((unsigned char) omrshr_UtActive[484] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((484u << 8) | omrshr_UtActive[484]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_find_ExitFound(P1)   /* tracepoint name: omrshr.484 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_find_ExitNotFound() do { /* tracepoint name: omrshr.485 */ \
	if ((unsigned char) omrshr_UtActive[485] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((485u << 8) | omrshr_UtActive[485]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_find_ExitNotFound()   /* tracepoint name: omrshr.485 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_writeToAddress_Entry(P1) do { /* tracepoint name: omrshr.486 */ \
	if ((unsigned char) omrshr_UtActive[486] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((486u << 8) | omrshr_UtActive[486]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_writeToAddress_Entry(P1)   /* tracepoint name: omrshr.486 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_writeToAddress_Exit() do { /* tracepoint name: omrshr.487 */ \
	if ((unsigned char) omrshr_UtActive[487] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((487u << 8) | omrshr_UtActive[487]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_writeToAddress_Exit()   /* tracepoint name: omrshr.487 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_itemAt_Entry(P1) do { /* tracepoint name: omrshr.488 */ \
	if ((unsigned char) omrshr_UtActive[488] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((488u << 8) | omrshr_UtActive[488]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_itemAt_Entry(P1)   /* tracepoint name: omrshr.488 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_itemAt_ExitError(P1) do { /* tracepoint name: omrshr.489 */ \
	if ((unsigned char) omrshr_UtActive[489] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((489u << 8) | omrshr_UtActive[489]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CPI_itemAt_ExitError(P1)   /* tracepoint name: omrshr.489 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_itemAt_NotInitialized() do { /* tracepoint name: omrshr.490 */ \
	if ((unsigned char) omrshr_UtActive[490] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((490u << 8) | omrshr_UtActive[490]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_itemAt_NotInitialized()   /* tracepoint name: omrshr.490 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_itemAt_ExitLocal() do { /* tracepoint name: omrshr.491 */ \
	if ((unsigned char) omrshr_UtActive[491] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((491u << 8) | omrshr_UtActive[491]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_itemAt_ExitLocal()   /* tracepoint name: omrshr.491 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_itemAt_ExitInCache() do { /* tracepoint name: omrshr.492 */ \
	if ((unsigned char) omrshr_UtActive[492] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((492u << 8) | omrshr_UtActive[492]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_itemAt_ExitInCache()   /* tracepoint name: omrshr.492 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getPartition_Entry() do { /* tracepoint name: omrshr.493 */ \
	if ((unsigned char) omrshr_UtActive[493] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((493u << 8) | omrshr_UtActive[493]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getPartition_Entry()   /* tracepoint name: omrshr.493 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getPartition_ExitNull() do { /* tracepoint name: omrshr.494 */ \
	if ((unsigned char) omrshr_UtActive[494] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((494u << 8) | omrshr_UtActive[494]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getPartition_ExitNull()   /* tracepoint name: omrshr.494 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getPartition_ExitLocal() do { /* tracepoint name: omrshr.495 */ \
	if ((unsigned char) omrshr_UtActive[495] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((495u << 8) | omrshr_UtActive[495]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getPartition_ExitLocal()   /* tracepoint name: omrshr.495 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getPartition_ExitInCache() do { /* tracepoint name: omrshr.496 */ \
	if ((unsigned char) omrshr_UtActive[496] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((496u << 8) | omrshr_UtActive[496]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getPartition_ExitInCache()   /* tracepoint name: omrshr.496 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getModContext_Entry() do { /* tracepoint name: omrshr.497 */ \
	if ((unsigned char) omrshr_UtActive[497] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((497u << 8) | omrshr_UtActive[497]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getModContext_Entry()   /* tracepoint name: omrshr.497 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getModContext_ExitNull() do { /* tracepoint name: omrshr.498 */ \
	if ((unsigned char) omrshr_UtActive[498] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((498u << 8) | omrshr_UtActive[498]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getModContext_ExitNull()   /* tracepoint name: omrshr.498 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getModContext_ExitLocal() do { /* tracepoint name: omrshr.499 */ \
	if ((unsigned char) omrshr_UtActive[499] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((499u << 8) | omrshr_UtActive[499]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getModContext_ExitLocal()   /* tracepoint name: omrshr.499 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_getModContext_ExitInCache() do { /* tracepoint name: omrshr.500 */ \
	if ((unsigned char) omrshr_UtActive[500] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((500u << 8) | omrshr_UtActive[500]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_getModContext_ExitInCache()   /* tracepoint name: omrshr.500 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_initialize_Exit() do { /* tracepoint name: omrshr.502 */ \
	if ((unsigned char) omrshr_UtActive[502] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((502u << 8) | omrshr_UtActive[502]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CPI_initialize_Exit()   /* tracepoint name: omrshr.502 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitNotConfirmed(thr, P1, P2) do { /* tracepoint name: omrshr.503 */ \
	if ((unsigned char) omrshr_UtActive[503] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((503u << 8) | omrshr_UtActive[503]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitNotConfirmed(thr, P1, P2)   /* tracepoint name: omrshr.503 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNull3(thr) do { /* tracepoint name: omrshr.507 */ \
	if ((unsigned char) omrshr_UtActive[507] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((507u << 8) | omrshr_UtActive[507]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNull3(thr)   /* tracepoint name: omrshr.507 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_shmemOpenWrapper_Entry(P1) do { /* tracepoint name: omrshr.509 */ \
	if ((unsigned char) omrshr_UtActive[509] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((509u << 8) | omrshr_UtActive[509]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_shmemOpenWrapper_Entry(P1)   /* tracepoint name: omrshr.509 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_shmemOpenWrapper_Exit(P1, P2) do { /* tracepoint name: omrshr.510 */ \
	if ((unsigned char) omrshr_UtActive[510] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((510u << 8) | omrshr_UtActive[510]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_shmemOpenWrapper_Exit(P1, P2)   /* tracepoint name: omrshr.510 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_shmemOpenWrapper_Sizes(P1, P2, P3) do { /* tracepoint name: omrshr.511 */ \
	if ((unsigned char) omrshr_UtActive[511] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((511u << 8) | omrshr_UtActive[511]), "\4\10\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_shmemOpenWrapper_Sizes(P1, P2, P3)   /* tracepoint name: omrshr.511 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_shmemOpenWrapper_Retry() do { /* tracepoint name: omrshr.512 */ \
	if ((unsigned char) omrshr_UtActive[512] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((512u << 8) | omrshr_UtActive[512]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_shmemOpenWrapper_Retry()   /* tracepoint name: omrshr.512 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit4() do { /* tracepoint name: omrshr.514 */ \
	if ((unsigned char) omrshr_UtActive[514] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((514u << 8) | omrshr_UtActive[514]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit4()   /* tracepoint name: omrshr.514 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addNewROMImageSegment_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.548 */ \
	if ((unsigned char) omrshr_UtActive[548] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((548u << 8) | omrshr_UtActive[548]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_addNewROMImageSegment_Entry(thr, P1, P2)   /* tracepoint name: omrshr.548 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addNewROMImageSegment_Exit(thr, P1) do { /* tracepoint name: omrshr.549 */ \
	if ((unsigned char) omrshr_UtActive[549] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((549u << 8) | omrshr_UtActive[549]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addNewROMImageSegment_Exit(thr, P1)   /* tracepoint name: omrshr.549 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMSegmentList_Entry(thr, P1) do { /* tracepoint name: omrshr.550 */ \
	if ((unsigned char) omrshr_UtActive[550] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((550u << 8) | omrshr_UtActive[550]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMSegmentList_Entry(thr, P1)   /* tracepoint name: omrshr.550 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMSegmentList_Exit(thr, P1) do { /* tracepoint name: omrshr.551 */ \
	if ((unsigned char) omrshr_UtActive[551] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((551u << 8) | omrshr_UtActive[551]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMSegmentList_Exit(thr, P1)   /* tracepoint name: omrshr.551 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_initializeROMSegmentList_Entry(thr) do { /* tracepoint name: omrshr.552 */ \
	if ((unsigned char) omrshr_UtActive[552] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((552u << 8) | omrshr_UtActive[552]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_initializeROMSegmentList_Entry(thr)   /* tracepoint name: omrshr.552 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_initializeROMSegmentList_Exit(thr, P1) do { /* tracepoint name: omrshr.553 */ \
	if ((unsigned char) omrshr_UtActive[553] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((553u << 8) | omrshr_UtActive[553]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_initializeROMSegmentList_Exit(thr, P1)   /* tracepoint name: omrshr.553 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.554 */ \
	if ((unsigned char) omrshr_UtActive[554] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((554u << 8) | omrshr_UtActive[554]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.554 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Exit1(thr) do { /* tracepoint name: omrshr.555 */ \
	if ((unsigned char) omrshr_UtActive[555] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((555u << 8) | omrshr_UtActive[555]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Exit1(thr)   /* tracepoint name: omrshr.555 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Exit2(thr) do { /* tracepoint name: omrshr.556 */ \
	if ((unsigned char) omrshr_UtActive[556] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((556u << 8) | omrshr_UtActive[556]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Exit2(thr)   /* tracepoint name: omrshr.556 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Exit3(thr) do { /* tracepoint name: omrshr.557 */ \
	if ((unsigned char) omrshr_UtActive[557] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((557u << 8) | omrshr_UtActive[557]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Exit3(thr)   /* tracepoint name: omrshr.557 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Exit4(thr, P1) do { /* tracepoint name: omrshr.558 */ \
	if ((unsigned char) omrshr_UtActive[558] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((558u << 8) | omrshr_UtActive[558]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Exit4(thr, P1)   /* tracepoint name: omrshr.558 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_Entry(thr, P1) do { /* tracepoint name: omrshr.559 */ \
	if ((unsigned char) omrshr_UtActive[559] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((559u << 8) | omrshr_UtActive[559]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_Entry(thr, P1)   /* tracepoint name: omrshr.559 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_Exit1(thr) do { /* tracepoint name: omrshr.560 */ \
	if ((unsigned char) omrshr_UtActive[560] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((560u << 8) | omrshr_UtActive[560]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_Exit1(thr)   /* tracepoint name: omrshr.560 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_Exit2(thr, P1) do { /* tracepoint name: omrshr.561 */ \
	if ((unsigned char) omrshr_UtActive[561] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((561u << 8) | omrshr_UtActive[561]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_Exit2(thr, P1)   /* tracepoint name: omrshr.561 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_localHashTableCreate_Entry(thr, P1) do { /* tracepoint name: omrshr.562 */ \
	if ((unsigned char) omrshr_UtActive[562] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((562u << 8) | omrshr_UtActive[562]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_localHashTableCreate_Entry(thr, P1)   /* tracepoint name: omrshr.562 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_localHashTableCreate_Exit(thr, P1) do { /* tracepoint name: omrshr.563 */ \
	if ((unsigned char) omrshr_UtActive[563] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((563u << 8) | omrshr_UtActive[563]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_localHashTableCreate_Exit(thr, P1)   /* tracepoint name: omrshr.563 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashFn_Entry(P1) do { /* tracepoint name: omrshr.564 */ \
	if ((unsigned char) omrshr_UtActive[564] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((564u << 8) | omrshr_UtActive[564]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashFn_Entry(P1)   /* tracepoint name: omrshr.564 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashFn_Exit(P1) do { /* tracepoint name: omrshr.565 */ \
	if ((unsigned char) omrshr_UtActive[565] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((565u << 8) | omrshr_UtActive[565]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashFn_Exit(P1)   /* tracepoint name: omrshr.565 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.566 */ \
	if ((unsigned char) omrshr_UtActive[566] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((566u << 8) | omrshr_UtActive[566]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.566 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashEqualFn_Exit1() do { /* tracepoint name: omrshr.567 */ \
	if ((unsigned char) omrshr_UtActive[567] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((567u << 8) | omrshr_UtActive[567]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashEqualFn_Exit1()   /* tracepoint name: omrshr.567 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashEqualFn_Exit2() do { /* tracepoint name: omrshr.568 */ \
	if ((unsigned char) omrshr_UtActive[568] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((568u << 8) | omrshr_UtActive[568]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashEqualFn_Exit2()   /* tracepoint name: omrshr.568 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmHashEqualFn_Exit3(P1) do { /* tracepoint name: omrshr.569 */ \
	if ((unsigned char) omrshr_UtActive[569] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((569u << 8) | omrshr_UtActive[569]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmHashEqualFn_Exit3(P1)   /* tracepoint name: omrshr.569 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.570 */ \
	if ((unsigned char) omrshr_UtActive[570] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((570u << 8) | omrshr_UtActive[570]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_Entry(thr, P1, P2)   /* tracepoint name: omrshr.570 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_Exception1(thr) do { /* tracepoint name: omrshr.571 */ \
	if ((unsigned char) omrshr_UtActive[571] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((571u << 8) | omrshr_UtActive[571]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_Exception1(thr)   /* tracepoint name: omrshr.571 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_Exit1(thr, P1) do { /* tracepoint name: omrshr.572 */ \
	if ((unsigned char) omrshr_UtActive[572] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((572u << 8) | omrshr_UtActive[572]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_Exit1(thr, P1)   /* tracepoint name: omrshr.572 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_Exit2(thr, P1) do { /* tracepoint name: omrshr.573 */ \
	if ((unsigned char) omrshr_UtActive[573] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((573u << 8) | omrshr_UtActive[573]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_Exit2(thr, P1)   /* tracepoint name: omrshr.573 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_Exit3(thr) do { /* tracepoint name: omrshr.574 */ \
	if ((unsigned char) omrshr_UtActive[574] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((574u << 8) | omrshr_UtActive[574]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_Exit3(thr)   /* tracepoint name: omrshr.574 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableAdd_HashtableAdd(thr, P1) do { /* tracepoint name: omrshr.575 */ \
	if ((unsigned char) omrshr_UtActive[575] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((575u << 8) | omrshr_UtActive[575]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableAdd_HashtableAdd(thr, P1)   /* tracepoint name: omrshr.575 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableLookup_Entry(thr, P1) do { /* tracepoint name: omrshr.576 */ \
	if ((unsigned char) omrshr_UtActive[576] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((576u << 8) | omrshr_UtActive[576]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableLookup_Entry(thr, P1)   /* tracepoint name: omrshr.576 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.577 */ \
	if ((unsigned char) omrshr_UtActive[577] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((577u << 8) | omrshr_UtActive[577]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.577 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.578 */ \
	if ((unsigned char) omrshr_UtActive[578] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((578u << 8) | omrshr_UtActive[578]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.578 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.579 */ \
	if ((unsigned char) omrshr_UtActive[579] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((579u << 8) | omrshr_UtActive[579]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.579 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMMI_newInstance_Entry(P1, P2) do { /* tracepoint name: omrshr.580 */ \
	if ((unsigned char) omrshr_UtActive[580] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((580u << 8) | omrshr_UtActive[580]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMMI_newInstance_Entry(P1, P2)   /* tracepoint name: omrshr.580 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.581 */ \
	if ((unsigned char) omrshr_UtActive[581] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((581u << 8) | omrshr_UtActive[581]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.581 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMMI_initialize_Entry() do { /* tracepoint name: omrshr.582 */ \
	if ((unsigned char) omrshr_UtActive[582] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((582u << 8) | omrshr_UtActive[582]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMMI_initialize_Entry()   /* tracepoint name: omrshr.582 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMMI_initialize_Exit() do { /* tracepoint name: omrshr.583 */ \
	if ((unsigned char) omrshr_UtActive[583] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((583u << 8) | omrshr_UtActive[583]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMMI_initialize_Exit()   /* tracepoint name: omrshr.583 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.584 */ \
	if ((unsigned char) omrshr_UtActive[584] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((584u << 8) | omrshr_UtActive[584]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.584 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.585 */ \
	if ((unsigned char) omrshr_UtActive[585] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((585u << 8) | omrshr_UtActive[585]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.585 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.586 */ \
	if ((unsigned char) omrshr_UtActive[586] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((586u << 8) | omrshr_UtActive[586]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RRM_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.586 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_find_Exit(thr, P1) do { /* tracepoint name: omrshr.588 */ \
	if ((unsigned char) omrshr_UtActive[588] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((588u << 8) | omrshr_UtActive[588]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_find_Exit(thr, P1)   /* tracepoint name: omrshr.588 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_localHashTableCreate_Entry(thr, P1) do { /* tracepoint name: omrshr.589 */ \
	if ((unsigned char) omrshr_UtActive[589] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((589u << 8) | omrshr_UtActive[589]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_localHashTableCreate_Entry(thr, P1)   /* tracepoint name: omrshr.589 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_localHashTableCreate_Exit(thr, P1) do { /* tracepoint name: omrshr.590 */ \
	if ((unsigned char) omrshr_UtActive[590] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((590u << 8) | omrshr_UtActive[590]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_localHashTableCreate_Exit(thr, P1)   /* tracepoint name: omrshr.590 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashFn_Entry(P1) do { /* tracepoint name: omrshr.591 */ \
	if ((unsigned char) omrshr_UtActive[591] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((591u << 8) | omrshr_UtActive[591]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashFn_Entry(P1)   /* tracepoint name: omrshr.591 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashFn_Exit(P1) do { /* tracepoint name: omrshr.592 */ \
	if ((unsigned char) omrshr_UtActive[592] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((592u << 8) | omrshr_UtActive[592]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashFn_Exit(P1)   /* tracepoint name: omrshr.592 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.593 */ \
	if ((unsigned char) omrshr_UtActive[593] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((593u << 8) | omrshr_UtActive[593]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.593 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashEqualFn_Exit1() do { /* tracepoint name: omrshr.594 */ \
	if ((unsigned char) omrshr_UtActive[594] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((594u << 8) | omrshr_UtActive[594]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashEqualFn_Exit1()   /* tracepoint name: omrshr.594 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashEqualFn_Exit2() do { /* tracepoint name: omrshr.595 */ \
	if ((unsigned char) omrshr_UtActive[595] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((595u << 8) | omrshr_UtActive[595]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashEqualFn_Exit2()   /* tracepoint name: omrshr.595 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scHashEqualFn_Exit3(P1) do { /* tracepoint name: omrshr.596 */ \
	if ((unsigned char) omrshr_UtActive[596] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((596u << 8) | omrshr_UtActive[596]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scHashEqualFn_Exit3(P1)   /* tracepoint name: omrshr.596 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableAdd_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.597 */ \
	if ((unsigned char) omrshr_UtActive[597] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((597u << 8) | omrshr_UtActive[597]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableAdd_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.597 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableAdd_Exception1(thr) do { /* tracepoint name: omrshr.598 */ \
	if ((unsigned char) omrshr_UtActive[598] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((598u << 8) | omrshr_UtActive[598]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableAdd_Exception1(thr)   /* tracepoint name: omrshr.598 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableAdd_Exit1(thr, P1) do { /* tracepoint name: omrshr.599 */ \
	if ((unsigned char) omrshr_UtActive[599] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((599u << 8) | omrshr_UtActive[599]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableAdd_Exit1(thr, P1)   /* tracepoint name: omrshr.599 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableAdd_Exit2(thr, P1) do { /* tracepoint name: omrshr.600 */ \
	if ((unsigned char) omrshr_UtActive[600] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((600u << 8) | omrshr_UtActive[600]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableAdd_Exit2(thr, P1)   /* tracepoint name: omrshr.600 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableAdd_HashtableAdd(thr, P1) do { /* tracepoint name: omrshr.601 */ \
	if ((unsigned char) omrshr_UtActive[601] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((601u << 8) | omrshr_UtActive[601]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableAdd_HashtableAdd(thr, P1)   /* tracepoint name: omrshr.601 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableLookup_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.602 */ \
	if ((unsigned char) omrshr_UtActive[602] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((602u << 8) | omrshr_UtActive[602]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableLookup_Entry(thr, P1, P2)   /* tracepoint name: omrshr.602 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.603 */ \
	if ((unsigned char) omrshr_UtActive[603] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((603u << 8) | omrshr_UtActive[603]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.603 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.604 */ \
	if ((unsigned char) omrshr_UtActive[604] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((604u << 8) | omrshr_UtActive[604]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.604 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_scTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.605 */ \
	if ((unsigned char) omrshr_UtActive[605] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((605u << 8) | omrshr_UtActive[605]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_scTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.605 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_newInstance_Entry(P1, P2) do { /* tracepoint name: omrshr.606 */ \
	if ((unsigned char) omrshr_UtActive[606] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((606u << 8) | omrshr_UtActive[606]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_SMI_newInstance_Entry(P1, P2)   /* tracepoint name: omrshr.606 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.607 */ \
	if ((unsigned char) omrshr_UtActive[607] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((607u << 8) | omrshr_UtActive[607]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.607 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_initialize_Entry() do { /* tracepoint name: omrshr.608 */ \
	if ((unsigned char) omrshr_UtActive[608] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((608u << 8) | omrshr_UtActive[608]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_initialize_Entry()   /* tracepoint name: omrshr.608 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_initialize_Exit() do { /* tracepoint name: omrshr.609 */ \
	if ((unsigned char) omrshr_UtActive[609] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((609u << 8) | omrshr_UtActive[609]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_initialize_Exit()   /* tracepoint name: omrshr.609 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.610 */ \
	if ((unsigned char) omrshr_UtActive[610] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((610u << 8) | omrshr_UtActive[610]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.610 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.611 */ \
	if ((unsigned char) omrshr_UtActive[611] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((611u << 8) | omrshr_UtActive[611]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.611 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.612 */ \
	if ((unsigned char) omrshr_UtActive[612] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((612u << 8) | omrshr_UtActive[612]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.612 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_findScopeForUTF_Entry(thr, P1) do { /* tracepoint name: omrshr.613 */ \
	if ((unsigned char) omrshr_UtActive[613] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((613u << 8) | omrshr_UtActive[613]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_findScopeForUTF_Entry(thr, P1)   /* tracepoint name: omrshr.613 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_findScopeForUTF_Exit(thr, P1) do { /* tracepoint name: omrshr.614 */ \
	if ((unsigned char) omrshr_UtActive[614] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((614u << 8) | omrshr_UtActive[614]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_SMI_findScopeForUTF_Exit(thr, P1)   /* tracepoint name: omrshr.614 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.615 */ \
	if ((unsigned char) omrshr_UtActive[615] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((615u << 8) | omrshr_UtActive[615]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_Entry(thr, P1, P2)   /* tracepoint name: omrshr.615 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_Exit1(thr) do { /* tracepoint name: omrshr.616 */ \
	if ((unsigned char) omrshr_UtActive[616] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((616u << 8) | omrshr_UtActive[616]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_Exit1(thr)   /* tracepoint name: omrshr.616 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_ExitFailed2(thr) do { /* tracepoint name: omrshr.617 */ \
	if ((unsigned char) omrshr_UtActive[617] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((617u << 8) | omrshr_UtActive[617]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_ExitFailed2(thr)   /* tracepoint name: omrshr.617 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_ExitFailed3(thr) do { /* tracepoint name: omrshr.618 */ \
	if ((unsigned char) omrshr_UtActive[618] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((618u << 8) | omrshr_UtActive[618]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_ExitFailed3(thr)   /* tracepoint name: omrshr.618 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_ExitFailed4(thr) do { /* tracepoint name: omrshr.619 */ \
	if ((unsigned char) omrshr_UtActive[619] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((619u << 8) | omrshr_UtActive[619]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_ExitFailed4(thr)   /* tracepoint name: omrshr.619 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_ExitFailed5(thr) do { /* tracepoint name: omrshr.620 */ \
	if ((unsigned char) omrshr_UtActive[620] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((620u << 8) | omrshr_UtActive[620]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_ExitFailed5(thr)   /* tracepoint name: omrshr.620 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_validate_ExitOK(thr) do { /* tracepoint name: omrshr.621 */ \
	if ((unsigned char) omrshr_UtActive[621] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((621u << 8) | omrshr_UtActive[621]), NULL);} \
	} while(0)
#else
#define Trc_SHR_SMI_validate_ExitOK(thr)   /* tracepoint name: omrshr.621 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_ExitNull4(thr) do { /* tracepoint name: omrshr.622 */ \
	if ((unsigned char) omrshr_UtActive[622] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((622u << 8) | omrshr_UtActive[622]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_ExitNull4(thr)   /* tracepoint name: omrshr.622 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateClasspathInfo_ExitNull5(thr) do { /* tracepoint name: omrshr.623 */ \
	if ((unsigned char) omrshr_UtActive[623] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((623u << 8) | omrshr_UtActive[623]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateClasspathInfo_ExitNull5(thr)   /* tracepoint name: omrshr.623 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addScopeToCache_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.624 */ \
	if ((unsigned char) omrshr_UtActive[624] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((624u << 8) | omrshr_UtActive[624]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_addScopeToCache_Entry(thr, P1, P2)   /* tracepoint name: omrshr.624 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addScopeToCache_Exit_Null(thr) do { /* tracepoint name: omrshr.625 */ \
	if ((unsigned char) omrshr_UtActive[625] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((625u << 8) | omrshr_UtActive[625]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addScopeToCache_Exit_Null(thr)   /* tracepoint name: omrshr.625 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addScopeToCache_Exit(thr, P1) do { /* tracepoint name: omrshr.626 */ \
	if ((unsigned char) omrshr_UtActive[626] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((626u << 8) | omrshr_UtActive[626]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addScopeToCache_Exit(thr, P1)   /* tracepoint name: omrshr.626 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Entry(thr) do { /* tracepoint name: omrshr.627 */ \
	if ((unsigned char) omrshr_UtActive[627] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((627u << 8) | omrshr_UtActive[627]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Entry(thr)   /* tracepoint name: omrshr.627 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed1(thr) do { /* tracepoint name: omrshr.628 */ \
	if ((unsigned char) omrshr_UtActive[628] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((628u << 8) | omrshr_UtActive[628]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed1(thr)   /* tracepoint name: omrshr.628 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed2(thr) do { /* tracepoint name: omrshr.629 */ \
	if ((unsigned char) omrshr_UtActive[629] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((629u << 8) | omrshr_UtActive[629]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed2(thr)   /* tracepoint name: omrshr.629 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed3(thr) do { /* tracepoint name: omrshr.630 */ \
	if ((unsigned char) omrshr_UtActive[630] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((630u << 8) | omrshr_UtActive[630]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed3(thr)   /* tracepoint name: omrshr.630 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Exit_OK(thr) do { /* tracepoint name: omrshr.631 */ \
	if ((unsigned char) omrshr_UtActive[631] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((631u << 8) | omrshr_UtActive[631]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Exit_OK(thr)   /* tracepoint name: omrshr.631 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassResourceToCache_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.632 */ \
	if ((unsigned char) omrshr_UtActive[632] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((632u << 8) | omrshr_UtActive[632]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassResourceToCache_Entry(thr, P1, P2)   /* tracepoint name: omrshr.632 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassResourceToCache_Exit_Null(thr) do { /* tracepoint name: omrshr.633 */ \
	if ((unsigned char) omrshr_UtActive[633] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((633u << 8) | omrshr_UtActive[633]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassResourceToCache_Exit_Null(thr)   /* tracepoint name: omrshr.633 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassResourceToCache_Exit(thr, P1) do { /* tracepoint name: omrshr.634 */ \
	if ((unsigned char) omrshr_UtActive[634] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((634u << 8) | omrshr_UtActive[634]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassResourceToCache_Exit(thr, P1)   /* tracepoint name: omrshr.634 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_initializeHashTable_Entry(thr, P1) do { /* tracepoint name: omrshr.635 */ \
	if ((unsigned char) omrshr_UtActive[635] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((635u << 8) | omrshr_UtActive[635]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_initializeHashTable_Entry(thr, P1)   /* tracepoint name: omrshr.635 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_initializeHashTable_Exit(thr, P1) do { /* tracepoint name: omrshr.636 */ \
	if ((unsigned char) omrshr_UtActive[636] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((636u << 8) | omrshr_UtActive[636]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_initializeHashTable_Exit(thr, P1)   /* tracepoint name: omrshr.636 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_tearDownHashTable_Entry(thr, P1) do { /* tracepoint name: omrshr.637 */ \
	if ((unsigned char) omrshr_UtActive[637] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((637u << 8) | omrshr_UtActive[637]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_tearDownHashTable_Entry(thr, P1)   /* tracepoint name: omrshr.637 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_tearDownHashTable_Exit(thr) do { /* tracepoint name: omrshr.638 */ \
	if ((unsigned char) omrshr_UtActive[638] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((638u << 8) | omrshr_UtActive[638]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_tearDownHashTable_Exit(thr)   /* tracepoint name: omrshr.638 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Entry(thr, P1) do { /* tracepoint name: omrshr.639 */ \
	if ((unsigned char) omrshr_UtActive[639] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((639u << 8) | omrshr_UtActive[639]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Entry(thr, P1)   /* tracepoint name: omrshr.639 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Exit1(thr) do { /* tracepoint name: omrshr.640 */ \
	if ((unsigned char) omrshr_UtActive[640] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((640u << 8) | omrshr_UtActive[640]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Exit1(thr)   /* tracepoint name: omrshr.640 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Exit2(thr) do { /* tracepoint name: omrshr.641 */ \
	if ((unsigned char) omrshr_UtActive[641] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((641u << 8) | omrshr_UtActive[641]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Exit2(thr)   /* tracepoint name: omrshr.641 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Exit3(thr) do { /* tracepoint name: omrshr.642 */ \
	if ((unsigned char) omrshr_UtActive[642] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((642u << 8) | omrshr_UtActive[642]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Exit3(thr)   /* tracepoint name: omrshr.642 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Exit4(thr) do { /* tracepoint name: omrshr.643 */ \
	if ((unsigned char) omrshr_UtActive[643] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((643u << 8) | omrshr_UtActive[643]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Exit4(thr)   /* tracepoint name: omrshr.643 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_cleanup_Entry(thr, P1) do { /* tracepoint name: omrshr.644 */ \
	if ((unsigned char) omrshr_UtActive[644] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((644u << 8) | omrshr_UtActive[644]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_cleanup_Entry(thr, P1)   /* tracepoint name: omrshr.644 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_cleanup_Exit(thr) do { /* tracepoint name: omrshr.645 */ \
	if ((unsigned char) omrshr_UtActive[645] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((645u << 8) | omrshr_UtActive[645]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_cleanup_Exit(thr)   /* tracepoint name: omrshr.645 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_reset_Entry(thr, P1) do { /* tracepoint name: omrshr.646 */ \
	if ((unsigned char) omrshr_UtActive[646] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((646u << 8) | omrshr_UtActive[646]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_reset_Entry(thr, P1)   /* tracepoint name: omrshr.646 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_reset_Exit(thr, P1) do { /* tracepoint name: omrshr.647 */ \
	if ((unsigned char) omrshr_UtActive[647] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((647u << 8) | omrshr_UtActive[647]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_reset_Exit(thr, P1)   /* tracepoint name: omrshr.647 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localInitializePools_Entry(thr) do { /* tracepoint name: omrshr.648 */ \
	if ((unsigned char) omrshr_UtActive[648] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((648u << 8) | omrshr_UtActive[648]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_localInitializePools_Entry(thr)   /* tracepoint name: omrshr.648 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localInitializePools_ExitFailed(thr) do { /* tracepoint name: omrshr.649 */ \
	if ((unsigned char) omrshr_UtActive[649] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((649u << 8) | omrshr_UtActive[649]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_localInitializePools_ExitFailed(thr)   /* tracepoint name: omrshr.649 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localInitializePools_ExitOK(thr) do { /* tracepoint name: omrshr.650 */ \
	if ((unsigned char) omrshr_UtActive[650] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((650u << 8) | omrshr_UtActive[650]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_localInitializePools_ExitOK(thr)   /* tracepoint name: omrshr.650 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localTearDownPools_Entry(thr) do { /* tracepoint name: omrshr.651 */ \
	if ((unsigned char) omrshr_UtActive[651] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((651u << 8) | omrshr_UtActive[651]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_localTearDownPools_Entry(thr)   /* tracepoint name: omrshr.651 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_localTearDownPools_Exit(thr) do { /* tracepoint name: omrshr.652 */ \
	if ((unsigned char) omrshr_UtActive[652] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((652u << 8) | omrshr_UtActive[652]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_localTearDownPools_Exit(thr)   /* tracepoint name: omrshr.652 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localInitializePools_Entry(thr) do { /* tracepoint name: omrshr.653 */ \
	if ((unsigned char) omrshr_UtActive[653] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((653u << 8) | omrshr_UtActive[653]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localInitializePools_Entry(thr)   /* tracepoint name: omrshr.653 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localInitializePools_Exit(thr, P1) do { /* tracepoint name: omrshr.654 */ \
	if ((unsigned char) omrshr_UtActive[654] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((654u << 8) | omrshr_UtActive[654]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localInitializePools_Exit(thr, P1)   /* tracepoint name: omrshr.654 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localTearDownPools_Entry(thr) do { /* tracepoint name: omrshr.655 */ \
	if ((unsigned char) omrshr_UtActive[655] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((655u << 8) | omrshr_UtActive[655]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localTearDownPools_Entry(thr)   /* tracepoint name: omrshr.655 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localTearDownPools_Exit(thr) do { /* tracepoint name: omrshr.656 */ \
	if ((unsigned char) omrshr_UtActive[656] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((656u << 8) | omrshr_UtActive[656]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localTearDownPools_Exit(thr)   /* tracepoint name: omrshr.656 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeCompiledMethod_entry(thr) do { /* tracepoint name: omrshr.657 */ \
	if ((unsigned char) omrshr_UtActive[657] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((657u << 8) | omrshr_UtActive[657]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeCompiledMethod_entry(thr)   /* tracepoint name: omrshr.657 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeCompiledMethod_exit_Noop(thr) do { /* tracepoint name: omrshr.658 */ \
	if ((unsigned char) omrshr_UtActive[658] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((658u << 8) | omrshr_UtActive[658]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeCompiledMethod_exit_Noop(thr)   /* tracepoint name: omrshr.658 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeCompiledMethod_exit(thr, P1) do { /* tracepoint name: omrshr.659 */ \
	if ((unsigned char) omrshr_UtActive[659] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((659u << 8) | omrshr_UtActive[659]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeCompiledMethod_exit(thr, P1)   /* tracepoint name: omrshr.659 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findCompiledMethod_entry(thr) do { /* tracepoint name: omrshr.660 */ \
	if ((unsigned char) omrshr_UtActive[660] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((660u << 8) | omrshr_UtActive[660]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_findCompiledMethod_entry(thr)   /* tracepoint name: omrshr.660 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findCompiledMethod_exit_Noop(thr) do { /* tracepoint name: omrshr.661 */ \
	if ((unsigned char) omrshr_UtActive[661] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((661u << 8) | omrshr_UtActive[661]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_findCompiledMethod_exit_Noop(thr)   /* tracepoint name: omrshr.661 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findCompiledMethod_exit(thr, P1) do { /* tracepoint name: omrshr.662 */ \
	if ((unsigned char) omrshr_UtActive[662] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((662u << 8) | omrshr_UtActive[662]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findCompiledMethod_exit(thr, P1)   /* tracepoint name: omrshr.662 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeSharedData_entry(thr, P1, P2) do { /* tracepoint name: omrshr.663 */ \
	if ((unsigned char) omrshr_UtActive[663] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((663u << 8) | omrshr_UtActive[663]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeSharedData_entry(thr, P1, P2)   /* tracepoint name: omrshr.663 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeSharedData_exit_Noop(thr) do { /* tracepoint name: omrshr.664 */ \
	if ((unsigned char) omrshr_UtActive[664] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((664u << 8) | omrshr_UtActive[664]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeSharedData_exit_Noop(thr)   /* tracepoint name: omrshr.664 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeSharedData_exit(thr, P1) do { /* tracepoint name: omrshr.665 */ \
	if ((unsigned char) omrshr_UtActive[665] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((665u << 8) | omrshr_UtActive[665]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeSharedData_exit(thr, P1)   /* tracepoint name: omrshr.665 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findSharedData_entry(thr, P1, P2) do { /* tracepoint name: omrshr.666 */ \
	if ((unsigned char) omrshr_UtActive[666] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((666u << 8) | omrshr_UtActive[666]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_findSharedData_entry(thr, P1, P2)   /* tracepoint name: omrshr.666 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findSharedData_exit_Noop(thr) do { /* tracepoint name: omrshr.667 */ \
	if ((unsigned char) omrshr_UtActive[667] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((667u << 8) | omrshr_UtActive[667]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_findSharedData_exit_Noop(thr)   /* tracepoint name: omrshr.667 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findSharedData_exit(thr, P1) do { /* tracepoint name: omrshr.668 */ \
	if ((unsigned char) omrshr_UtActive[668] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((668u << 8) | omrshr_UtActive[668]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findSharedData_exit(thr, P1)   /* tracepoint name: omrshr.668 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addByteDataToCache_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.669 */ \
	if ((unsigned char) omrshr_UtActive[669] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((669u << 8) | omrshr_UtActive[669]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_addByteDataToCache_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.669 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addByteDataToCache_Exit_Null(thr) do { /* tracepoint name: omrshr.670 */ \
	if ((unsigned char) omrshr_UtActive[670] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((670u << 8) | omrshr_UtActive[670]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addByteDataToCache_Exit_Null(thr)   /* tracepoint name: omrshr.670 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addByteDataToCache_Exit(thr, P1) do { /* tracepoint name: omrshr.671 */ \
	if ((unsigned char) omrshr_UtActive[671] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((671u << 8) | omrshr_UtActive[671]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_addByteDataToCache_Exit(thr, P1)   /* tracepoint name: omrshr.671 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.672 */ \
	if ((unsigned char) omrshr_UtActive[672] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((672u << 8) | omrshr_UtActive[672]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.672 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_FoundExisting(thr) do { /* tracepoint name: omrshr.673 */ \
	if ((unsigned char) omrshr_UtActive[673] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((673u << 8) | omrshr_UtActive[673]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_FoundExisting(thr)   /* tracepoint name: omrshr.673 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_NoSCM(thr) do { /* tracepoint name: omrshr.674 */ \
	if ((unsigned char) omrshr_UtActive[674] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((674u << 8) | omrshr_UtActive[674]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_NoSCM(thr)   /* tracepoint name: omrshr.674 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_NoMem(thr) do { /* tracepoint name: omrshr.675 */ \
	if ((unsigned char) omrshr_UtActive[675] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((675u << 8) | omrshr_UtActive[675]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_NoMem(thr)   /* tracepoint name: omrshr.675 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_CannotAddScope(thr) do { /* tracepoint name: omrshr.676 */ \
	if ((unsigned char) omrshr_UtActive[676] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((676u << 8) | omrshr_UtActive[676]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_CannotAddScope(thr)   /* tracepoint name: omrshr.676 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_Exit1(thr) do { /* tracepoint name: omrshr.677 */ \
	if ((unsigned char) omrshr_UtActive[677] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((677u << 8) | omrshr_UtActive[677]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_Exit1(thr)   /* tracepoint name: omrshr.677 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_Exit2(thr) do { /* tracepoint name: omrshr.678 */ \
	if ((unsigned char) omrshr_UtActive[678] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((678u << 8) | omrshr_UtActive[678]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_Exit2(thr)   /* tracepoint name: omrshr.678 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeSharedData_Exit3(thr, P1) do { /* tracepoint name: omrshr.679 */ \
	if ((unsigned char) omrshr_UtActive[679] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((679u << 8) | omrshr_UtActive[679]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_storeSharedData_Exit3(thr, P1)   /* tracepoint name: omrshr.679 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findSharedData_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.680 */ \
	if ((unsigned char) omrshr_UtActive[680] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((680u << 8) | omrshr_UtActive[680]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findSharedData_Entry(thr, P1, P2)   /* tracepoint name: omrshr.680 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findSharedData_Exit1(thr) do { /* tracepoint name: omrshr.681 */ \
	if ((unsigned char) omrshr_UtActive[681] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((681u << 8) | omrshr_UtActive[681]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findSharedData_Exit1(thr)   /* tracepoint name: omrshr.681 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findSharedData_Exit2(thr, P1) do { /* tracepoint name: omrshr.682 */ \
	if ((unsigned char) omrshr_UtActive[682] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((682u << 8) | omrshr_UtActive[682]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findSharedData_Exit2(thr, P1)   /* tracepoint name: omrshr.682 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localHashTableCreate_Entry(thr, P1) do { /* tracepoint name: omrshr.683 */ \
	if ((unsigned char) omrshr_UtActive[683] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((683u << 8) | omrshr_UtActive[683]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localHashTableCreate_Entry(thr, P1)   /* tracepoint name: omrshr.683 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localHashTableCreate_Exit(thr, P1) do { /* tracepoint name: omrshr.684 */ \
	if ((unsigned char) omrshr_UtActive[684] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((684u << 8) | omrshr_UtActive[684]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localHashTableCreate_Exit(thr, P1)   /* tracepoint name: omrshr.684 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashFn_Entry(P1) do { /* tracepoint name: omrshr.685 */ \
	if ((unsigned char) omrshr_UtActive[685] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((685u << 8) | omrshr_UtActive[685]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashFn_Entry(P1)   /* tracepoint name: omrshr.685 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashFn_Exit(P1) do { /* tracepoint name: omrshr.686 */ \
	if ((unsigned char) omrshr_UtActive[686] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((686u << 8) | omrshr_UtActive[686]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashFn_Exit(P1)   /* tracepoint name: omrshr.686 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.687 */ \
	if ((unsigned char) omrshr_UtActive[687] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((687u << 8) | omrshr_UtActive[687]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.687 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashEqualFn_Exit1() do { /* tracepoint name: omrshr.688 */ \
	if ((unsigned char) omrshr_UtActive[688] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((688u << 8) | omrshr_UtActive[688]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashEqualFn_Exit1()   /* tracepoint name: omrshr.688 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashEqualFn_Exit2() do { /* tracepoint name: omrshr.689 */ \
	if ((unsigned char) omrshr_UtActive[689] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((689u << 8) | omrshr_UtActive[689]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashEqualFn_Exit2()   /* tracepoint name: omrshr.689 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdHashEqualFn_Exit3(P1) do { /* tracepoint name: omrshr.690 */ \
	if ((unsigned char) omrshr_UtActive[690] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((690u << 8) | omrshr_UtActive[690]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdHashEqualFn_Exit3(P1)   /* tracepoint name: omrshr.690 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableAdd_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.691 */ \
	if ((unsigned char) omrshr_UtActive[691] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((691u << 8) | omrshr_UtActive[691]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableAdd_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.691 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableAdd_Exception1(thr) do { /* tracepoint name: omrshr.692 */ \
	if ((unsigned char) omrshr_UtActive[692] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((692u << 8) | omrshr_UtActive[692]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableAdd_Exception1(thr)   /* tracepoint name: omrshr.692 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableAdd_Exit1(thr, P1) do { /* tracepoint name: omrshr.693 */ \
	if ((unsigned char) omrshr_UtActive[693] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((693u << 8) | omrshr_UtActive[693]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableAdd_Exit1(thr, P1)   /* tracepoint name: omrshr.693 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableAdd_Exit2(thr, P1) do { /* tracepoint name: omrshr.694 */ \
	if ((unsigned char) omrshr_UtActive[694] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((694u << 8) | omrshr_UtActive[694]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableAdd_Exit2(thr, P1)   /* tracepoint name: omrshr.694 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableAdd_HashtableAdd(thr, P1) do { /* tracepoint name: omrshr.695 */ \
	if ((unsigned char) omrshr_UtActive[695] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((695u << 8) | omrshr_UtActive[695]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableAdd_HashtableAdd(thr, P1)   /* tracepoint name: omrshr.695 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableLookup_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.696 */ \
	if ((unsigned char) omrshr_UtActive[696] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((696u << 8) | omrshr_UtActive[696]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableLookup_Entry(thr, P1, P2)   /* tracepoint name: omrshr.696 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.697 */ \
	if ((unsigned char) omrshr_UtActive[697] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((697u << 8) | omrshr_UtActive[697]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.697 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.698 */ \
	if ((unsigned char) omrshr_UtActive[698] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((698u << 8) | omrshr_UtActive[698]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.698 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_bdTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.699 */ \
	if ((unsigned char) omrshr_UtActive[699] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((699u << 8) | omrshr_UtActive[699]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_bdTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.699 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_newInstance_Entry(P1, P2) do { /* tracepoint name: omrshr.700 */ \
	if ((unsigned char) omrshr_UtActive[700] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((700u << 8) | omrshr_UtActive[700]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_newInstance_Entry(P1, P2)   /* tracepoint name: omrshr.700 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.701 */ \
	if ((unsigned char) omrshr_UtActive[701] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((701u << 8) | omrshr_UtActive[701]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.701 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_initialize_Entry() do { /* tracepoint name: omrshr.702 */ \
	if ((unsigned char) omrshr_UtActive[702] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((702u << 8) | omrshr_UtActive[702]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_initialize_Entry()   /* tracepoint name: omrshr.702 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_initialize_Exit() do { /* tracepoint name: omrshr.703 */ \
	if ((unsigned char) omrshr_UtActive[703] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((703u << 8) | omrshr_UtActive[703]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_initialize_Exit()   /* tracepoint name: omrshr.703 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.704 */ \
	if ((unsigned char) omrshr_UtActive[704] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((704u << 8) | omrshr_UtActive[704]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.704 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.705 */ \
	if ((unsigned char) omrshr_UtActive[705] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((705u << 8) | omrshr_UtActive[705]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.705 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.706 */ \
	if ((unsigned char) omrshr_UtActive[706] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((706u << 8) | omrshr_UtActive[706]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.706 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localPostStartup_Entry(thr) do { /* tracepoint name: omrshr.707 */ \
	if ((unsigned char) omrshr_UtActive[707] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((707u << 8) | omrshr_UtActive[707]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localPostStartup_Entry(thr)   /* tracepoint name: omrshr.707 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localPostStartup_Exit1(thr) do { /* tracepoint name: omrshr.708 */ \
	if ((unsigned char) omrshr_UtActive[708] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((708u << 8) | omrshr_UtActive[708]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localPostStartup_Exit1(thr)   /* tracepoint name: omrshr.708 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localPostStartup_Exit2(thr) do { /* tracepoint name: omrshr.709 */ \
	if ((unsigned char) omrshr_UtActive[709] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((709u << 8) | omrshr_UtActive[709]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localPostStartup_Exit2(thr)   /* tracepoint name: omrshr.709 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localPostCleanup_Entry(thr) do { /* tracepoint name: omrshr.710 */ \
	if ((unsigned char) omrshr_UtActive[710] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((710u << 8) | omrshr_UtActive[710]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localPostCleanup_Entry(thr)   /* tracepoint name: omrshr.710 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localPostCleanup_Exit(thr) do { /* tracepoint name: omrshr.711 */ \
	if ((unsigned char) omrshr_UtActive[711] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((711u << 8) | omrshr_UtActive[711]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localPostCleanup_Exit(thr)   /* tracepoint name: omrshr.711 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Entry(thr, P1) do { /* tracepoint name: omrshr.712 */ \
	if ((unsigned char) omrshr_UtActive[712] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((712u << 8) | omrshr_UtActive[712]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Entry(thr, P1)   /* tracepoint name: omrshr.712 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Exit1(thr, P1) do { /* tracepoint name: omrshr.713 */ \
	if ((unsigned char) omrshr_UtActive[713] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((713u << 8) | omrshr_UtActive[713]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Exit1(thr, P1)   /* tracepoint name: omrshr.713 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Exit2(thr) do { /* tracepoint name: omrshr.714 */ \
	if ((unsigned char) omrshr_UtActive[714] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((714u << 8) | omrshr_UtActive[714]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_existsCachedCodeForROMMethod_Exit2(thr)   /* tracepoint name: omrshr.714 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_Constructor_Entry(P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.715 */ \
	if ((unsigned char) omrshr_UtActive[715] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((715u << 8) | omrshr_UtActive[715]), "\377\6\6\6\6", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_Constructor_Entry(P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.715 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_Constructor_Exit() do { /* tracepoint name: omrshr.716 */ \
	if ((unsigned char) omrshr_UtActive[716] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((716u << 8) | omrshr_UtActive[716]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_Constructor_Exit()   /* tracepoint name: omrshr.716 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initialize_Entry(P1, P2) do { /* tracepoint name: omrshr.717 */ \
	if ((unsigned char) omrshr_UtActive[717] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((717u << 8) | omrshr_UtActive[717]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initialize_Entry(P1, P2)   /* tracepoint name: omrshr.717 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initialize_Exit() do { /* tracepoint name: omrshr.718 */ \
	if ((unsigned char) omrshr_UtActive[718] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((718u << 8) | omrshr_UtActive[718]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initialize_Exit()   /* tracepoint name: omrshr.718 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_finalise_Entry() do { /* tracepoint name: omrshr.719 */ \
	if ((unsigned char) omrshr_UtActive[719] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((719u << 8) | omrshr_UtActive[719]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_finalise_Entry()   /* tracepoint name: omrshr.719 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_finalise_Exit() do { /* tracepoint name: omrshr.720 */ \
	if ((unsigned char) omrshr_UtActive[720] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((720u << 8) | omrshr_UtActive[720]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_finalise_Exit()   /* tracepoint name: omrshr.720 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_Entry(P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.721 */ \
	if ((unsigned char) omrshr_UtActive[721] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((721u << 8) | omrshr_UtActive[721]), "\377\377\6\6\6\6\4", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_Entry(P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.721 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_nommap(P1) do { /* tracepoint name: omrshr.722 */ \
	if ((unsigned char) omrshr_UtActive[722] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((722u << 8) | omrshr_UtActive[722]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_nommap(P1)   /* tracepoint name: omrshr.722 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_nofilelocking(P1) do { /* tracepoint name: omrshr.723 */ \
	if ((unsigned char) omrshr_UtActive[723] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((723u << 8) | omrshr_UtActive[723]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_nofilelocking(P1)   /* tracepoint name: omrshr.723 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_failed_mutex_init(P1) do { /* tracepoint name: omrshr.724 */ \
	if ((unsigned char) omrshr_UtActive[724] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((724u << 8) | omrshr_UtActive[724]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_failed_mutex_init(P1)   /* tracepoint name: omrshr.724 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_initialized_mutexes() do { /* tracepoint name: omrshr.725 */ \
	if ((unsigned char) omrshr_UtActive[725] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((725u << 8) | omrshr_UtActive[725]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_initialized_mutexes()   /* tracepoint name: omrshr.725 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badfileopen(P1) do { /* tracepoint name: omrshr.726 */ \
	if ((unsigned char) omrshr_UtActive[726] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((726u << 8) | omrshr_UtActive[726]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badfileopen(P1)   /* tracepoint name: omrshr.726 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodfileopen(P1, P2) do { /* tracepoint name: omrshr.727 */ \
	if ((unsigned char) omrshr_UtActive[727] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((727u << 8) | omrshr_UtActive[727]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodfileopen(P1, P2)   /* tracepoint name: omrshr.727 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badAcquireHeaderWriteLock() do { /* tracepoint name: omrshr.728 */ \
	if ((unsigned char) omrshr_UtActive[728] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((728u << 8) | omrshr_UtActive[728]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badAcquireHeaderWriteLock()   /* tracepoint name: omrshr.728 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodAcquireHeaderWriteLock() do { /* tracepoint name: omrshr.729 */ \
	if ((unsigned char) omrshr_UtActive[729] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((729u << 8) | omrshr_UtActive[729]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodAcquireHeaderWriteLock()   /* tracepoint name: omrshr.729 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_fileOpened() do { /* tracepoint name: omrshr.730 */ \
	if ((unsigned char) omrshr_UtActive[730] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((730u << 8) | omrshr_UtActive[730]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_fileOpened()   /* tracepoint name: omrshr.730 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_deleteFlagSet() do { /* tracepoint name: omrshr.731 */ \
	if ((unsigned char) omrshr_UtActive[731] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((731u << 8) | omrshr_UtActive[731]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_deleteFlagSet()   /* tracepoint name: omrshr.731 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_fileCreated() do { /* tracepoint name: omrshr.732 */ \
	if ((unsigned char) omrshr_UtActive[732] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((732u << 8) | omrshr_UtActive[732]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_fileCreated()   /* tracepoint name: omrshr.732 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodCreateCacheHeader() do { /* tracepoint name: omrshr.733 */ \
	if ((unsigned char) omrshr_UtActive[733] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((733u << 8) | omrshr_UtActive[733]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodCreateCacheHeader()   /* tracepoint name: omrshr.733 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodSetCacheLength(P1) do { /* tracepoint name: omrshr.734 */ \
	if ((unsigned char) omrshr_UtActive[734] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((734u << 8) | omrshr_UtActive[734]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodSetCacheLength(P1)   /* tracepoint name: omrshr.734 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badAttach() do { /* tracepoint name: omrshr.735 */ \
	if ((unsigned char) omrshr_UtActive[735] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((735u << 8) | omrshr_UtActive[735]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badAttach()   /* tracepoint name: omrshr.735 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badSetCacheLength(P1) do { /* tracepoint name: omrshr.736 */ \
	if ((unsigned char) omrshr_UtActive[736] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((736u << 8) | omrshr_UtActive[736]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badSetCacheLength(P1)   /* tracepoint name: omrshr.736 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodInitializeDataHeader() do { /* tracepoint name: omrshr.737 */ \
	if ((unsigned char) omrshr_UtActive[737] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((737u << 8) | omrshr_UtActive[737]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodInitializeDataHeader()   /* tracepoint name: omrshr.737 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badInitializeDataHeader() do { /* tracepoint name: omrshr.738 */ \
	if ((unsigned char) omrshr_UtActive[738] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((738u << 8) | omrshr_UtActive[738]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badInitializeDataHeader()   /* tracepoint name: omrshr.738 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badCreateCacheHeader() do { /* tracepoint name: omrshr.739 */ \
	if ((unsigned char) omrshr_UtActive[739] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((739u << 8) | omrshr_UtActive[739]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badCreateCacheHeader()   /* tracepoint name: omrshr.739 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badReleaseHeaderWriteLock() do { /* tracepoint name: omrshr.740 */ \
	if ((unsigned char) omrshr_UtActive[740] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((740u << 8) | omrshr_UtActive[740]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badReleaseHeaderWriteLock()   /* tracepoint name: omrshr.740 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_goodReleaseHeaderWriteLock() do { /* tracepoint name: omrshr.741 */ \
	if ((unsigned char) omrshr_UtActive[741] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((741u << 8) | omrshr_UtActive[741]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_goodReleaseHeaderWriteLock()   /* tracepoint name: omrshr.741 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_closingFileHandle(P1) do { /* tracepoint name: omrshr.742 */ \
	if ((unsigned char) omrshr_UtActive[742] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((742u << 8) | omrshr_UtActive[742]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_closingFileHandle(P1)   /* tracepoint name: omrshr.742 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_Exit() do { /* tracepoint name: omrshr.743 */ \
	if ((unsigned char) omrshr_UtActive[743] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((743u << 8) | omrshr_UtActive[743]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_Exit()   /* tracepoint name: omrshr.743 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_Entry(P1) do { /* tracepoint name: omrshr.744 */ \
	if ((unsigned char) omrshr_UtActive[744] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((744u << 8) | omrshr_UtActive[744]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_Entry(P1)   /* tracepoint name: omrshr.744 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_BadLockID(P1) do { /* tracepoint name: omrshr.745 */ \
	if ((unsigned char) omrshr_UtActive[745] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((745u << 8) | omrshr_UtActive[745]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_BadLockID(P1)   /* tracepoint name: omrshr.745 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.746 */ \
	if ((unsigned char) omrshr_UtActive[746] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((746u << 8) | omrshr_UtActive[746]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.746 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_badLock() do { /* tracepoint name: omrshr.747 */ \
	if ((unsigned char) omrshr_UtActive[747] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((747u << 8) | omrshr_UtActive[747]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_badLock()   /* tracepoint name: omrshr.747 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_goodLock() do { /* tracepoint name: omrshr.748 */ \
	if ((unsigned char) omrshr_UtActive[748] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((748u << 8) | omrshr_UtActive[748]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_goodLock()   /* tracepoint name: omrshr.748 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_Exit(P1) do { /* tracepoint name: omrshr.749 */ \
	if ((unsigned char) omrshr_UtActive[749] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((749u << 8) | omrshr_UtActive[749]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_Exit(P1)   /* tracepoint name: omrshr.749 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_Entry(P1) do { /* tracepoint name: omrshr.750 */ \
	if ((unsigned char) omrshr_UtActive[750] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((750u << 8) | omrshr_UtActive[750]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_Entry(P1)   /* tracepoint name: omrshr.750 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_BadLockID(P1) do { /* tracepoint name: omrshr.751 */ \
	if ((unsigned char) omrshr_UtActive[751] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((751u << 8) | omrshr_UtActive[751]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_BadLockID(P1)   /* tracepoint name: omrshr.751 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_entering_monitor(P1) do { /* tracepoint name: omrshr.752 */ \
	if ((unsigned char) omrshr_UtActive[752] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((752u << 8) | omrshr_UtActive[752]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_entering_monitor(P1)   /* tracepoint name: omrshr.752 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_failed_monitor_enter(P1) do { /* tracepoint name: omrshr.753 */ \
	if ((unsigned char) omrshr_UtActive[753] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((753u << 8) | omrshr_UtActive[753]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_failed_monitor_enter(P1)   /* tracepoint name: omrshr.753 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_gettingLock(P1, P2, P3) do { /* tracepoint name: omrshr.754 */ \
	if ((unsigned char) omrshr_UtActive[754] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((754u << 8) | omrshr_UtActive[754]), "\6\10\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_gettingLock(P1, P2, P3)   /* tracepoint name: omrshr.754 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_badLock() do { /* tracepoint name: omrshr.755 */ \
	if ((unsigned char) omrshr_UtActive[755] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((755u << 8) | omrshr_UtActive[755]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_badLock()   /* tracepoint name: omrshr.755 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_goodLock() do { /* tracepoint name: omrshr.756 */ \
	if ((unsigned char) omrshr_UtActive[756] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((756u << 8) | omrshr_UtActive[756]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_goodLock()   /* tracepoint name: omrshr.756 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_exiting_monitor(P1) do { /* tracepoint name: omrshr.757 */ \
	if ((unsigned char) omrshr_UtActive[757] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((757u << 8) | omrshr_UtActive[757]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_exiting_monitor(P1)   /* tracepoint name: omrshr.757 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_bad_monitor_exit(P1) do { /* tracepoint name: omrshr.758 */ \
	if ((unsigned char) omrshr_UtActive[758] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((758u << 8) | omrshr_UtActive[758]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_bad_monitor_exit(P1)   /* tracepoint name: omrshr.758 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseWriteLock_Exit(P1) do { /* tracepoint name: omrshr.759 */ \
	if ((unsigned char) omrshr_UtActive[759] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((759u << 8) | omrshr_UtActive[759]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseWriteLock_Exit(P1)   /* tracepoint name: omrshr.759 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_Entry() do { /* tracepoint name: omrshr.760 */ \
	if ((unsigned char) omrshr_UtActive[760] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((760u << 8) | omrshr_UtActive[760]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_Entry()   /* tracepoint name: omrshr.760 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.761 */ \
	if ((unsigned char) omrshr_UtActive[761] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((761u << 8) | omrshr_UtActive[761]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.761 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_badLock() do { /* tracepoint name: omrshr.762 */ \
	if ((unsigned char) omrshr_UtActive[762] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((762u << 8) | omrshr_UtActive[762]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_badLock()   /* tracepoint name: omrshr.762 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_goodLock() do { /* tracepoint name: omrshr.763 */ \
	if ((unsigned char) omrshr_UtActive[763] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((763u << 8) | omrshr_UtActive[763]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_goodLock()   /* tracepoint name: omrshr.763 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_Exit(P1) do { /* tracepoint name: omrshr.764 */ \
	if ((unsigned char) omrshr_UtActive[764] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((764u << 8) | omrshr_UtActive[764]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_Exit(P1)   /* tracepoint name: omrshr.764 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_Entry() do { /* tracepoint name: omrshr.765 */ \
	if ((unsigned char) omrshr_UtActive[765] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((765u << 8) | omrshr_UtActive[765]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_Entry()   /* tracepoint name: omrshr.765 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_gettingLock(P1, P2, P3) do { /* tracepoint name: omrshr.766 */ \
	if ((unsigned char) omrshr_UtActive[766] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((766u << 8) | omrshr_UtActive[766]), "\6\10\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_gettingLock(P1, P2, P3)   /* tracepoint name: omrshr.766 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_badLock() do { /* tracepoint name: omrshr.767 */ \
	if ((unsigned char) omrshr_UtActive[767] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((767u << 8) | omrshr_UtActive[767]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_badLock()   /* tracepoint name: omrshr.767 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_goodLock() do { /* tracepoint name: omrshr.768 */ \
	if ((unsigned char) omrshr_UtActive[768] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((768u << 8) | omrshr_UtActive[768]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_goodLock()   /* tracepoint name: omrshr.768 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_Exit(P1) do { /* tracepoint name: omrshr.769 */ \
	if ((unsigned char) omrshr_UtActive[769] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((769u << 8) | omrshr_UtActive[769]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_Exit(P1)   /* tracepoint name: omrshr.769 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_Entry() do { /* tracepoint name: omrshr.770 */ \
	if ((unsigned char) omrshr_UtActive[770] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((770u << 8) | omrshr_UtActive[770]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_Entry()   /* tracepoint name: omrshr.770 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.771 */ \
	if ((unsigned char) omrshr_UtActive[771] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((771u << 8) | omrshr_UtActive[771]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.771 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_badLock() do { /* tracepoint name: omrshr.772 */ \
	if ((unsigned char) omrshr_UtActive[772] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((772u << 8) | omrshr_UtActive[772]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_badLock()   /* tracepoint name: omrshr.772 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_goodLock() do { /* tracepoint name: omrshr.773 */ \
	if ((unsigned char) omrshr_UtActive[773] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((773u << 8) | omrshr_UtActive[773]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_goodLock()   /* tracepoint name: omrshr.773 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_Exit(P1) do { /* tracepoint name: omrshr.774 */ \
	if ((unsigned char) omrshr_UtActive[774] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((774u << 8) | omrshr_UtActive[774]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderReadLock_Exit(P1)   /* tracepoint name: omrshr.774 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_Entry() do { /* tracepoint name: omrshr.775 */ \
	if ((unsigned char) omrshr_UtActive[775] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((775u << 8) | omrshr_UtActive[775]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_Entry()   /* tracepoint name: omrshr.775 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_gettingLock(P1, P2, P3) do { /* tracepoint name: omrshr.776 */ \
	if ((unsigned char) omrshr_UtActive[776] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((776u << 8) | omrshr_UtActive[776]), "\6\10\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_gettingLock(P1, P2, P3)   /* tracepoint name: omrshr.776 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_badLock() do { /* tracepoint name: omrshr.777 */ \
	if ((unsigned char) omrshr_UtActive[777] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((777u << 8) | omrshr_UtActive[777]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_badLock()   /* tracepoint name: omrshr.777 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_goodLock() do { /* tracepoint name: omrshr.778 */ \
	if ((unsigned char) omrshr_UtActive[778] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((778u << 8) | omrshr_UtActive[778]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_goodLock()   /* tracepoint name: omrshr.778 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_Exit(P1) do { /* tracepoint name: omrshr.779 */ \
	if ((unsigned char) omrshr_UtActive[779] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((779u << 8) | omrshr_UtActive[779]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderReadLock_Exit(P1)   /* tracepoint name: omrshr.779 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_Entry() do { /* tracepoint name: omrshr.780 */ \
	if ((unsigned char) omrshr_UtActive[780] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((780u << 8) | omrshr_UtActive[780]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_Entry()   /* tracepoint name: omrshr.780 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.781 */ \
	if ((unsigned char) omrshr_UtActive[781] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((781u << 8) | omrshr_UtActive[781]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.781 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_badLock() do { /* tracepoint name: omrshr.782 */ \
	if ((unsigned char) omrshr_UtActive[782] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((782u << 8) | omrshr_UtActive[782]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_badLock()   /* tracepoint name: omrshr.782 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_goodLock() do { /* tracepoint name: omrshr.783 */ \
	if ((unsigned char) omrshr_UtActive[783] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((783u << 8) | omrshr_UtActive[783]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_goodLock()   /* tracepoint name: omrshr.783 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_Exit(P1) do { /* tracepoint name: omrshr.784 */ \
	if ((unsigned char) omrshr_UtActive[784] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((784u << 8) | omrshr_UtActive[784]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachWriteLock_Exit(P1)   /* tracepoint name: omrshr.784 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_Entry() do { /* tracepoint name: omrshr.785 */ \
	if ((unsigned char) omrshr_UtActive[785] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((785u << 8) | omrshr_UtActive[785]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_Entry()   /* tracepoint name: omrshr.785 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.786 */ \
	if ((unsigned char) omrshr_UtActive[786] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((786u << 8) | omrshr_UtActive[786]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.786 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_badLock() do { /* tracepoint name: omrshr.787 */ \
	if ((unsigned char) omrshr_UtActive[787] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((787u << 8) | omrshr_UtActive[787]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_badLock()   /* tracepoint name: omrshr.787 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_goodLock() do { /* tracepoint name: omrshr.788 */ \
	if ((unsigned char) omrshr_UtActive[788] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((788u << 8) | omrshr_UtActive[788]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_goodLock()   /* tracepoint name: omrshr.788 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_Exit(P1) do { /* tracepoint name: omrshr.789 */ \
	if ((unsigned char) omrshr_UtActive[789] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((789u << 8) | omrshr_UtActive[789]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireAttachWriteLock_Exit(P1)   /* tracepoint name: omrshr.789 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_Entry() do { /* tracepoint name: omrshr.790 */ \
	if ((unsigned char) omrshr_UtActive[790] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((790u << 8) | omrshr_UtActive[790]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_Entry()   /* tracepoint name: omrshr.790 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_gettingLock(P1, P2, P3) do { /* tracepoint name: omrshr.791 */ \
	if ((unsigned char) omrshr_UtActive[791] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((791u << 8) | omrshr_UtActive[791]), "\6\10\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_gettingLock(P1, P2, P3)   /* tracepoint name: omrshr.791 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_badLock() do { /* tracepoint name: omrshr.792 */ \
	if ((unsigned char) omrshr_UtActive[792] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((792u << 8) | omrshr_UtActive[792]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_badLock()   /* tracepoint name: omrshr.792 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_goodLock() do { /* tracepoint name: omrshr.793 */ \
	if ((unsigned char) omrshr_UtActive[793] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((793u << 8) | omrshr_UtActive[793]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_goodLock()   /* tracepoint name: omrshr.793 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_Exit(P1) do { /* tracepoint name: omrshr.794 */ \
	if ((unsigned char) omrshr_UtActive[794] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((794u << 8) | omrshr_UtActive[794]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachWriteLock_Exit(P1)   /* tracepoint name: omrshr.794 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_Entry() do { /* tracepoint name: omrshr.795 */ \
	if ((unsigned char) omrshr_UtActive[795] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((795u << 8) | omrshr_UtActive[795]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_Entry()   /* tracepoint name: omrshr.795 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.796 */ \
	if ((unsigned char) omrshr_UtActive[796] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((796u << 8) | omrshr_UtActive[796]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.796 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_badLock() do { /* tracepoint name: omrshr.797 */ \
	if ((unsigned char) omrshr_UtActive[797] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((797u << 8) | omrshr_UtActive[797]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_badLock()   /* tracepoint name: omrshr.797 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_goodLock() do { /* tracepoint name: omrshr.798 */ \
	if ((unsigned char) omrshr_UtActive[798] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((798u << 8) | omrshr_UtActive[798]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_goodLock()   /* tracepoint name: omrshr.798 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_Exit(P1) do { /* tracepoint name: omrshr.799 */ \
	if ((unsigned char) omrshr_UtActive[799] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((799u << 8) | omrshr_UtActive[799]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireAttachReadLock_Exit(P1)   /* tracepoint name: omrshr.799 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_Entry() do { /* tracepoint name: omrshr.800 */ \
	if ((unsigned char) omrshr_UtActive[800] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((800u << 8) | omrshr_UtActive[800]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_Entry()   /* tracepoint name: omrshr.800 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_gettingLock(P1, P2, P3) do { /* tracepoint name: omrshr.801 */ \
	if ((unsigned char) omrshr_UtActive[801] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((801u << 8) | omrshr_UtActive[801]), "\6\10\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_gettingLock(P1, P2, P3)   /* tracepoint name: omrshr.801 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_badLock() do { /* tracepoint name: omrshr.802 */ \
	if ((unsigned char) omrshr_UtActive[802] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((802u << 8) | omrshr_UtActive[802]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_badLock()   /* tracepoint name: omrshr.802 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_goodLock() do { /* tracepoint name: omrshr.803 */ \
	if ((unsigned char) omrshr_UtActive[803] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((803u << 8) | omrshr_UtActive[803]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_goodLock()   /* tracepoint name: omrshr.803 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_Exit(P1) do { /* tracepoint name: omrshr.804 */ \
	if ((unsigned char) omrshr_UtActive[804] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((804u << 8) | omrshr_UtActive[804]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseAttachReadLock_Exit(P1)   /* tracepoint name: omrshr.804 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_Entry() do { /* tracepoint name: omrshr.805 */ \
	if ((unsigned char) omrshr_UtActive[805] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((805u << 8) | omrshr_UtActive[805]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_Entry()   /* tracepoint name: omrshr.805 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_badgetdir() do { /* tracepoint name: omrshr.806 */ \
	if ((unsigned char) omrshr_UtActive[806] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((806u << 8) | omrshr_UtActive[806]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_badgetdir()   /* tracepoint name: omrshr.806 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_goodgetdir(P1) do { /* tracepoint name: omrshr.807 */ \
	if ((unsigned char) omrshr_UtActive[807] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((807u << 8) | omrshr_UtActive[807]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_goodgetdir(P1)   /* tracepoint name: omrshr.807 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_nomem_cacheGenName() do { /* tracepoint name: omrshr.808 */ \
	if ((unsigned char) omrshr_UtActive[808] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((808u << 8) | omrshr_UtActive[808]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_nomem_cacheGenName()   /* tracepoint name: omrshr.808 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_generated_cacheGenName(P1) do { /* tracepoint name: omrshr.809 */ \
	if ((unsigned char) omrshr_UtActive[809] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((809u << 8) | omrshr_UtActive[809]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_generated_cacheGenName(P1)   /* tracepoint name: omrshr.809 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_nomem(P1) do { /* tracepoint name: omrshr.810 */ \
	if ((unsigned char) omrshr_UtActive[810] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((810u << 8) | omrshr_UtActive[810]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_nomem(P1)   /* tracepoint name: omrshr.810 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCachePathName_generated_cachePathName(P1) do { /* tracepoint name: omrshr.811 */ \
	if ((unsigned char) omrshr_UtActive[811] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((811u << 8) | omrshr_UtActive[811]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCachePathName_generated_cachePathName(P1)   /* tracepoint name: omrshr.811 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_Entry(P1) do { /* tracepoint name: omrshr.812 */ \
	if ((unsigned char) omrshr_UtActive[812] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((812u << 8) | omrshr_UtActive[812]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_Entry(P1)   /* tracepoint name: omrshr.812 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_eyecatcherFailed(P1, P2) do { /* tracepoint name: omrshr.813 */ \
	if ((unsigned char) omrshr_UtActive[813] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((813u << 8) | omrshr_UtActive[813]), "\377\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_eyecatcherFailed(P1, P2)   /* tracepoint name: omrshr.813 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_wrongSize(P1, P2) do { /* tracepoint name: omrshr.814 */ \
	if ((unsigned char) omrshr_UtActive[814] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((814u << 8) | omrshr_UtActive[814]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_wrongSize(P1, P2)   /* tracepoint name: omrshr.814 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_Exit() do { /* tracepoint name: omrshr.815 */ \
	if ((unsigned char) omrshr_UtActive[815] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((815u << 8) | omrshr_UtActive[815]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_Exit()   /* tracepoint name: omrshr.815 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCachePathName_Entry(P1) do { /* tracepoint name: omrshr.816 */ \
	if ((unsigned char) omrshr_UtActive[816] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((816u << 8) | omrshr_UtActive[816]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCachePathName_Entry(P1)   /* tracepoint name: omrshr.816 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCachePathName_searching(P1, P2) do { /* tracepoint name: omrshr.817 */ \
	if ((unsigned char) omrshr_UtActive[817] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((817u << 8) | omrshr_UtActive[817]), "\377\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCachePathName_searching(P1, P2)   /* tracepoint name: omrshr.817 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCachePathName_no() do { /* tracepoint name: omrshr.818 */ \
	if ((unsigned char) omrshr_UtActive[818] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((818u << 8) | omrshr_UtActive[818]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCachePathName_no()   /* tracepoint name: omrshr.818 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCachePathName_yes() do { /* tracepoint name: omrshr.819 */ \
	if ((unsigned char) omrshr_UtActive[819] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((819u << 8) | omrshr_UtActive[819]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCachePathName_yes()   /* tracepoint name: omrshr.819 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCachePathName_Exit(P1) do { /* tracepoint name: omrshr.820 */ \
	if ((unsigned char) omrshr_UtActive[820] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((820u << 8) | omrshr_UtActive[820]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCachePathName_Exit(P1)   /* tracepoint name: omrshr.820 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_createCacheHeader_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.821 */ \
	if ((unsigned char) omrshr_UtActive[821] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((821u << 8) | omrshr_UtActive[821]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_createCacheHeader_Entry(P1, P2, P3)   /* tracepoint name: omrshr.821 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_createCacheHeader_header(P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.822 */ \
	if ((unsigned char) omrshr_UtActive[822] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((822u << 8) | omrshr_UtActive[822]), "\377\4\4\4\10\10", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_createCacheHeader_header(P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.822 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_createCacheHeader_Exit() do { /* tracepoint name: omrshr.823 */ \
	if ((unsigned char) omrshr_UtActive[823] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((823u << 8) | omrshr_UtActive[823]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_createCacheHeader_Exit()   /* tracepoint name: omrshr.823 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setCacheLength_Entry(P1) do { /* tracepoint name: omrshr.824 */ \
	if ((unsigned char) omrshr_UtActive[824] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((824u << 8) | omrshr_UtActive[824]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setCacheLength_Entry(P1)   /* tracepoint name: omrshr.824 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setCacheLength_badfilesetlength() do { /* tracepoint name: omrshr.825 */ \
	if ((unsigned char) omrshr_UtActive[825] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((825u << 8) | omrshr_UtActive[825]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setCacheLength_badfilesetlength()   /* tracepoint name: omrshr.825 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setCacheLength_goodfilesetlength() do { /* tracepoint name: omrshr.826 */ \
	if ((unsigned char) omrshr_UtActive[826] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((826u << 8) | omrshr_UtActive[826]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setCacheLength_goodfilesetlength()   /* tracepoint name: omrshr.826 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setCacheLength_Exit() do { /* tracepoint name: omrshr.827 */ \
	if ((unsigned char) omrshr_UtActive[827] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((827u << 8) | omrshr_UtActive[827]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setCacheLength_Exit()   /* tracepoint name: omrshr.827 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getError_Event(P1) do { /* tracepoint name: omrshr.828 */ \
	if ((unsigned char) omrshr_UtActive[828] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((828u << 8) | omrshr_UtActive[828]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getError_Event(P1)   /* tracepoint name: omrshr.828 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setError_Entry(P1) do { /* tracepoint name: omrshr.829 */ \
	if ((unsigned char) omrshr_UtActive[829] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((829u << 8) | omrshr_UtActive[829]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setError_Entry(P1)   /* tracepoint name: omrshr.829 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_setError_Exit(P1) do { /* tracepoint name: omrshr.830 */ \
	if ((unsigned char) omrshr_UtActive[830] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((830u << 8) | omrshr_UtActive[830]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_setError_Exit(P1)   /* tracepoint name: omrshr.830 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getFileMode_Entry() do { /* tracepoint name: omrshr.831 */ \
	if ((unsigned char) omrshr_UtActive[831] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((831u << 8) | omrshr_UtActive[831]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getFileMode_Entry()   /* tracepoint name: omrshr.831 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getFileMode_Exit(P1, P2) do { /* tracepoint name: omrshr.832 */ \
	if ((unsigned char) omrshr_UtActive[832] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((832u << 8) | omrshr_UtActive[832]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getFileMode_Exit(P1, P2)   /* tracepoint name: omrshr.832 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_Entry() do { /* tracepoint name: omrshr.833 */ \
	if ((unsigned char) omrshr_UtActive[833] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((833u << 8) | omrshr_UtActive[833]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_Entry()   /* tracepoint name: omrshr.833 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_badAcquireAttachedReadLock() do { /* tracepoint name: omrshr.836 */ \
	if ((unsigned char) omrshr_UtActive[836] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((836u << 8) | omrshr_UtActive[836]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_badAcquireAttachedReadLock()   /* tracepoint name: omrshr.836 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_goodAcquireAttachReadLock() do { /* tracepoint name: omrshr.837 */ \
	if ((unsigned char) omrshr_UtActive[837] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((837u << 8) | omrshr_UtActive[837]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_goodAcquireAttachReadLock()   /* tracepoint name: omrshr.837 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_badmapfile() do { /* tracepoint name: omrshr.838 */ \
	if ((unsigned char) omrshr_UtActive[838] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((838u << 8) | omrshr_UtActive[838]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_badmapfile()   /* tracepoint name: omrshr.838 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_goodmapfile(P1) do { /* tracepoint name: omrshr.839 */ \
	if ((unsigned char) omrshr_UtActive[839] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((839u << 8) | omrshr_UtActive[839]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_goodmapfile(P1)   /* tracepoint name: omrshr.839 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_Exit(P1, P2) do { /* tracepoint name: omrshr.840 */ \
	if ((unsigned char) omrshr_UtActive[840] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((840u << 8) | omrshr_UtActive[840]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_Exit(P1, P2)   /* tracepoint name: omrshr.840 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_alreadyattached(P1, P2, P3) do { /* tracepoint name: omrshr.842 */ \
	if ((unsigned char) omrshr_UtActive[842] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((842u << 8) | omrshr_UtActive[842]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_alreadyattached(P1, P2, P3)   /* tracepoint name: omrshr.842 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_validCacheHeader() do { /* tracepoint name: omrshr.844 */ \
	if ((unsigned char) omrshr_UtActive[844] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((844u << 8) | omrshr_UtActive[844]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_validCacheHeader()   /* tracepoint name: omrshr.844 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_goodupdatelastattachedtime() do { /* tracepoint name: omrshr.847 */ \
	if ((unsigned char) omrshr_UtActive[847] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((847u << 8) | omrshr_UtActive[847]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_goodupdatelastattachedtime()   /* tracepoint name: omrshr.847 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_Exit(P1) do { /* tracepoint name: omrshr.849 */ \
	if ((unsigned char) omrshr_UtActive[849] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((849u << 8) | omrshr_UtActive[849]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_Exit(P1)   /* tracepoint name: omrshr.849 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_Entry() do { /* tracepoint name: omrshr.850 */ \
	if ((unsigned char) omrshr_UtActive[850] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((850u << 8) | omrshr_UtActive[850]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_Entry()   /* tracepoint name: omrshr.850 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_time(P1, P2) do { /* tracepoint name: omrshr.851 */ \
	if ((unsigned char) omrshr_UtActive[851] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((851u << 8) | omrshr_UtActive[851]), "\10\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_time(P1, P2)   /* tracepoint name: omrshr.851 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_Exit() do { /* tracepoint name: omrshr.852 */ \
	if ((unsigned char) omrshr_UtActive[852] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((852u << 8) | omrshr_UtActive[852]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_Exit()   /* tracepoint name: omrshr.852 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_Entry() do { /* tracepoint name: omrshr.853 */ \
	if ((unsigned char) omrshr_UtActive[853] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((853u << 8) | omrshr_UtActive[853]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_Entry()   /* tracepoint name: omrshr.853 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_badacquirelock() do { /* tracepoint name: omrshr.854 */ \
	if ((unsigned char) omrshr_UtActive[854] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((854u << 8) | omrshr_UtActive[854]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_badacquirelock()   /* tracepoint name: omrshr.854 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_goodacquirelock() do { /* tracepoint name: omrshr.855 */ \
	if ((unsigned char) omrshr_UtActive[855] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((855u << 8) | omrshr_UtActive[855]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_goodacquirelock()   /* tracepoint name: omrshr.855 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_time(P1, P2) do { /* tracepoint name: omrshr.856 */ \
	if ((unsigned char) omrshr_UtActive[856] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((856u << 8) | omrshr_UtActive[856]), "\10\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_time(P1, P2)   /* tracepoint name: omrshr.856 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_badreleaselock() do { /* tracepoint name: omrshr.857 */ \
	if ((unsigned char) omrshr_UtActive[857] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((857u << 8) | omrshr_UtActive[857]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_badreleaselock()   /* tracepoint name: omrshr.857 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_goodreleaselock() do { /* tracepoint name: omrshr.858 */ \
	if ((unsigned char) omrshr_UtActive[858] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((858u << 8) | omrshr_UtActive[858]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_goodreleaselock()   /* tracepoint name: omrshr.858 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_Exit() do { /* tracepoint name: omrshr.859 */ \
	if ((unsigned char) omrshr_UtActive[859] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((859u << 8) | omrshr_UtActive[859]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_Exit()   /* tracepoint name: omrshr.859 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initializeDataHeader_Entry() do { /* tracepoint name: omrshr.860 */ \
	if ((unsigned char) omrshr_UtActive[860] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((860u << 8) | omrshr_UtActive[860]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initializeDataHeader_Entry()   /* tracepoint name: omrshr.860 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initializeDataHeader_initialized() do { /* tracepoint name: omrshr.862 */ \
	if ((unsigned char) omrshr_UtActive[862] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((862u << 8) | omrshr_UtActive[862]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initializeDataHeader_initialized()   /* tracepoint name: omrshr.862 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initializeDataHeader_Exit() do { /* tracepoint name: omrshr.863 */ \
	if ((unsigned char) omrshr_UtActive[863] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((863u << 8) | omrshr_UtActive[863]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initializeDataHeader_Exit()   /* tracepoint name: omrshr.863 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalDetach_Entry() do { /* tracepoint name: omrshr.864 */ \
	if ((unsigned char) omrshr_UtActive[864] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((864u << 8) | omrshr_UtActive[864]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalDetach_Entry()   /* tracepoint name: omrshr.864 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalDetach_notattached() do { /* tracepoint name: omrshr.865 */ \
	if ((unsigned char) omrshr_UtActive[865] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((865u << 8) | omrshr_UtActive[865]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalDetach_notattached()   /* tracepoint name: omrshr.865 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalDetach_badReleaseAttachReadLock() do { /* tracepoint name: omrshr.866 */ \
	if ((unsigned char) omrshr_UtActive[866] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((866u << 8) | omrshr_UtActive[866]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalDetach_badReleaseAttachReadLock()   /* tracepoint name: omrshr.866 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalDetach_goodReleaseAttachReadLock() do { /* tracepoint name: omrshr.867 */ \
	if ((unsigned char) omrshr_UtActive[867] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((867u << 8) | omrshr_UtActive[867]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalDetach_goodReleaseAttachReadLock()   /* tracepoint name: omrshr.867 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalDetach_Exit(P1, P2, P3) do { /* tracepoint name: omrshr.868 */ \
	if ((unsigned char) omrshr_UtActive[868] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((868u << 8) | omrshr_UtActive[868]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalDetach_Exit(P1, P2, P3)   /* tracepoint name: omrshr.868 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_Entry() do { /* tracepoint name: omrshr.869 */ \
	if ((unsigned char) omrshr_UtActive[869] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((869u << 8) | omrshr_UtActive[869]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_Entry()   /* tracepoint name: omrshr.869 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_alreadyfinalised() do { /* tracepoint name: omrshr.870 */ \
	if ((unsigned char) omrshr_UtActive[870] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((870u << 8) | omrshr_UtActive[870]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_alreadyfinalised()   /* tracepoint name: omrshr.870 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_goodUpdateLastDetachedTime() do { /* tracepoint name: omrshr.871 */ \
	if ((unsigned char) omrshr_UtActive[871] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((871u << 8) | omrshr_UtActive[871]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_goodUpdateLastDetachedTime()   /* tracepoint name: omrshr.871 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_badUpdateLastDetachedTime() do { /* tracepoint name: omrshr.872 */ \
	if ((unsigned char) omrshr_UtActive[872] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((872u << 8) | omrshr_UtActive[872]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_badUpdateLastDetachedTime()   /* tracepoint name: omrshr.872 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_Exit() do { /* tracepoint name: omrshr.873 */ \
	if ((unsigned char) omrshr_UtActive[873] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((873u << 8) | omrshr_UtActive[873]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_Exit()   /* tracepoint name: omrshr.873 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.874 */ \
	if ((unsigned char) omrshr_UtActive[874] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((874u << 8) | omrshr_UtActive[874]), "\6\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_Entry(P1, P2, P3)   /* tracepoint name: omrshr.874 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_mmapFilepath(P1) do { /* tracepoint name: omrshr.875 */ \
	if ((unsigned char) omrshr_UtActive[875] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((875u << 8) | omrshr_UtActive[875]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_mmapFilepath(P1)   /* tracepoint name: omrshr.875 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_sysvFilepath(P1) do { /* tracepoint name: omrshr.876 */ \
	if ((unsigned char) omrshr_UtActive[876] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((876u << 8) | omrshr_UtActive[876]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_sysvFilepath(P1)   /* tracepoint name: omrshr.876 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_mmapFileExists() do { /* tracepoint name: omrshr.877 */ \
	if ((unsigned char) omrshr_UtActive[877] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((877u << 8) | omrshr_UtActive[877]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_mmapFileExists()   /* tracepoint name: omrshr.877 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_mmapFileDoesNotExist() do { /* tracepoint name: omrshr.878 */ \
	if ((unsigned char) omrshr_UtActive[878] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((878u << 8) | omrshr_UtActive[878]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_mmapFileDoesNotExist()   /* tracepoint name: omrshr.878 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_sysvFileExists() do { /* tracepoint name: omrshr.879 */ \
	if ((unsigned char) omrshr_UtActive[879] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((879u << 8) | omrshr_UtActive[879]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_sysvFileExists()   /* tracepoint name: omrshr.879 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_sysvFileDoesNotExist() do { /* tracepoint name: omrshr.880 */ \
	if ((unsigned char) omrshr_UtActive[880] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((880u << 8) | omrshr_UtActive[880]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_sysvFileDoesNotExist()   /* tracepoint name: omrshr.880 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_persistentReqd() do { /* tracepoint name: omrshr.881 */ \
	if ((unsigned char) omrshr_UtActive[881] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((881u << 8) | omrshr_UtActive[881]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_persistentReqd()   /* tracepoint name: omrshr.881 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_nonpersistentReqd() do { /* tracepoint name: omrshr.882 */ \
	if ((unsigned char) omrshr_UtActive[882] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((882u << 8) | omrshr_UtActive[882]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_nonpersistentReqd()   /* tracepoint name: omrshr.882 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_creatingMmap(P1) do { /* tracepoint name: omrshr.883 */ \
	if ((unsigned char) omrshr_UtActive[883] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((883u << 8) | omrshr_UtActive[883]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_creatingMmap(P1)   /* tracepoint name: omrshr.883 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_creatingSysv(P1) do { /* tracepoint name: omrshr.884 */ \
	if ((unsigned char) omrshr_UtActive[884] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((884u << 8) | omrshr_UtActive[884]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_creatingSysv(P1)   /* tracepoint name: omrshr.884 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_initializingNewObject() do { /* tracepoint name: omrshr.885 */ \
	if ((unsigned char) omrshr_UtActive[885] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((885u << 8) | omrshr_UtActive[885]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_initializingNewObject()   /* tracepoint name: omrshr.885 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_newInstance_Exit(P1) do { /* tracepoint name: omrshr.886 */ \
	if ((unsigned char) omrshr_UtActive[886] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((886u << 8) | omrshr_UtActive[886]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_newInstance_Exit(P1)   /* tracepoint name: omrshr.886 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_Entry() do { /* tracepoint name: omrshr.887 */ \
	if ((unsigned char) omrshr_UtActive[887] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((887u << 8) | omrshr_UtActive[887]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_Entry()   /* tracepoint name: omrshr.887 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_closefilefailed() do { /* tracepoint name: omrshr.888 */ \
	if ((unsigned char) omrshr_UtActive[888] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((888u << 8) | omrshr_UtActive[888]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_closefilefailed()   /* tracepoint name: omrshr.888 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_deletingfile(P1) do { /* tracepoint name: omrshr.889 */ \
	if ((unsigned char) omrshr_UtActive[889] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((889u << 8) | omrshr_UtActive[889]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_deletingfile(P1)   /* tracepoint name: omrshr.889 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_badunlink() do { /* tracepoint name: omrshr.890 */ \
	if ((unsigned char) omrshr_UtActive[890] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((890u << 8) | omrshr_UtActive[890]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_badunlink()   /* tracepoint name: omrshr.890 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_goodunlink() do { /* tracepoint name: omrshr.891 */ \
	if ((unsigned char) omrshr_UtActive[891] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((891u << 8) | omrshr_UtActive[891]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_goodunlink()   /* tracepoint name: omrshr.891 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_finalising() do { /* tracepoint name: omrshr.892 */ \
	if ((unsigned char) omrshr_UtActive[892] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((892u << 8) | omrshr_UtActive[892]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_finalising()   /* tracepoint name: omrshr.892 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_destroy_Exit() do { /* tracepoint name: omrshr.893 */ \
	if ((unsigned char) omrshr_UtActive[893] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((893u << 8) | omrshr_UtActive[893]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_destroy_Exit()   /* tracepoint name: omrshr.893 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_runExitCode_Entry() do { /* tracepoint name: omrshr.894 */ \
	if ((unsigned char) omrshr_UtActive[894] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((894u << 8) | omrshr_UtActive[894]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_runExitCode_Entry()   /* tracepoint name: omrshr.894 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_runExitCode_goodUpdateLastDetachedTime() do { /* tracepoint name: omrshr.895 */ \
	if ((unsigned char) omrshr_UtActive[895] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((895u << 8) | omrshr_UtActive[895]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_runExitCode_goodUpdateLastDetachedTime()   /* tracepoint name: omrshr.895 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_runExitCode_badUpdateLastDetachedTime() do { /* tracepoint name: omrshr.896 */ \
	if ((unsigned char) omrshr_UtActive[896] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((896u << 8) | omrshr_UtActive[896]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_runExitCode_badUpdateLastDetachedTime()   /* tracepoint name: omrshr.896 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_runExitCode_Exit() do { /* tracepoint name: omrshr.897 */ \
	if ((unsigned char) omrshr_UtActive[897] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((897u << 8) | omrshr_UtActive[897]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_runExitCode_Exit()   /* tracepoint name: omrshr.897 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_syncUpdates_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.898 */ \
	if ((unsigned char) omrshr_UtActive[898] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((898u << 8) | omrshr_UtActive[898]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_syncUpdates_Entry(P1, P2, P3)   /* tracepoint name: omrshr.898 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_syncUpdates_badmsync() do { /* tracepoint name: omrshr.899 */ \
	if ((unsigned char) omrshr_UtActive[899] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((899u << 8) | omrshr_UtActive[899]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_syncUpdates_badmsync()   /* tracepoint name: omrshr.899 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_syncUpdates_goodmsync() do { /* tracepoint name: omrshr.900 */ \
	if ((unsigned char) omrshr_UtActive[900] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((900u << 8) | omrshr_UtActive[900]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_syncUpdates_goodmsync()   /* tracepoint name: omrshr.900 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_syncUpdates_Exit() do { /* tracepoint name: omrshr.901 */ \
	if ((unsigned char) omrshr_UtActive[901] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((901u << 8) | omrshr_UtActive[901]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_syncUpdates_Exit()   /* tracepoint name: omrshr.901 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_errorHandler_printingMessage(P1) do { /* tracepoint name: omrshr.903 */ \
	if ((unsigned char) omrshr_UtActive[903] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((903u << 8) | omrshr_UtActive[903]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_errorHandler_printingMessage(P1)   /* tracepoint name: omrshr.903 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_errorHandler_printingPortMessages() do { /* tracepoint name: omrshr.904 */ \
	if ((unsigned char) omrshr_UtActive[904] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((904u << 8) | omrshr_UtActive[904]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_errorHandler_printingPortMessages()   /* tracepoint name: omrshr.904 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_errorHandler_notPrintingMessage(P1) do { /* tracepoint name: omrshr.905 */ \
	if ((unsigned char) omrshr_UtActive[905] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((905u << 8) | omrshr_UtActive[905]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_errorHandler_notPrintingMessage(P1)   /* tracepoint name: omrshr.905 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_errorHandler_Exit() do { /* tracepoint name: omrshr.906 */ \
	if ((unsigned char) omrshr_UtActive[906] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((906u << 8) | omrshr_UtActive[906]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_errorHandler_Exit()   /* tracepoint name: omrshr.906 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_Entry(P1, P2) do { /* tracepoint name: omrshr.907 */ \
	if ((unsigned char) omrshr_UtActive[907] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((907u << 8) | omrshr_UtActive[907]), "\377\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_Entry(P1, P2)   /* tracepoint name: omrshr.907 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_badFileOpen() do { /* tracepoint name: omrshr.908 */ \
	if ((unsigned char) omrshr_UtActive[908] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((908u << 8) | omrshr_UtActive[908]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_badFileOpen()   /* tracepoint name: omrshr.908 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_goodFileOpen() do { /* tracepoint name: omrshr.909 */ \
	if ((unsigned char) omrshr_UtActive[909] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((909u << 8) | omrshr_UtActive[909]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_goodFileOpen()   /* tracepoint name: omrshr.909 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_badFileRead() do { /* tracepoint name: omrshr.910 */ \
	if ((unsigned char) omrshr_UtActive[910] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((910u << 8) | omrshr_UtActive[910]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_badFileRead()   /* tracepoint name: omrshr.910 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_goodFileRead() do { /* tracepoint name: omrshr.911 */ \
	if ((unsigned char) omrshr_UtActive[911] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((911u << 8) | omrshr_UtActive[911]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_goodFileRead()   /* tracepoint name: omrshr.911 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_cacheNotInUse() do { /* tracepoint name: omrshr.912 */ \
	if ((unsigned char) omrshr_UtActive[912] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((912u << 8) | omrshr_UtActive[912]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_cacheNotInUse()   /* tracepoint name: omrshr.912 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_cacheInUse() do { /* tracepoint name: omrshr.913 */ \
	if ((unsigned char) omrshr_UtActive[913] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((913u << 8) | omrshr_UtActive[913]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_cacheInUse()   /* tracepoint name: omrshr.913 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_closedFile() do { /* tracepoint name: omrshr.914 */ \
	if ((unsigned char) omrshr_UtActive[914] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((914u << 8) | omrshr_UtActive[914]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_closedFile()   /* tracepoint name: omrshr.914 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_getCacheStats_Exit(P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.915 */ \
	if ((unsigned char) omrshr_UtActive[915] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((915u << 8) | omrshr_UtActive[915]), "\4\4\10\10\10\6\6", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_getCacheStats_Exit(P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.915 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_openCacheFile_entry() do { /* tracepoint name: omrshr.916 */ \
	if ((unsigned char) omrshr_UtActive[916] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((916u << 8) | omrshr_UtActive[916]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_openCacheFile_entry()   /* tracepoint name: omrshr.916 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_openCacheFile_failed() do { /* tracepoint name: omrshr.917 */ \
	if ((unsigned char) omrshr_UtActive[917] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((917u << 8) | omrshr_UtActive[917]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_openCacheFile_failed()   /* tracepoint name: omrshr.917 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_openCacheFile_exit() do { /* tracepoint name: omrshr.918 */ \
	if ((unsigned char) omrshr_UtActive[918] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((918u << 8) | omrshr_UtActive[918]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_openCacheFile_exit()   /* tracepoint name: omrshr.918 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_closeCacheFile_entry() do { /* tracepoint name: omrshr.919 */ \
	if ((unsigned char) omrshr_UtActive[919] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((919u << 8) | omrshr_UtActive[919]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_closeCacheFile_entry()   /* tracepoint name: omrshr.919 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_closeCacheFile_failed() do { /* tracepoint name: omrshr.920 */ \
	if ((unsigned char) omrshr_UtActive[920] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((920u << 8) | omrshr_UtActive[920]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_closeCacheFile_failed()   /* tracepoint name: omrshr.920 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_closeCacheFile_exit() do { /* tracepoint name: omrshr.921 */ \
	if ((unsigned char) omrshr_UtActive[921] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((921u << 8) | omrshr_UtActive[921]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_closeCacheFile_exit()   /* tracepoint name: omrshr.921 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_deleteCacheFile_entry() do { /* tracepoint name: omrshr.922 */ \
	if ((unsigned char) omrshr_UtActive[922] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((922u << 8) | omrshr_UtActive[922]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_deleteCacheFile_entry()   /* tracepoint name: omrshr.922 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_deleteCacheFile_failed() do { /* tracepoint name: omrshr.923 */ \
	if ((unsigned char) omrshr_UtActive[923] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((923u << 8) | omrshr_UtActive[923]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_deleteCacheFile_failed()   /* tracepoint name: omrshr.923 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_deleteCacheFile_exit() do { /* tracepoint name: omrshr.924 */ \
	if ((unsigned char) omrshr_UtActive[924] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((924u << 8) | omrshr_UtActive[924]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_deleteCacheFile_exit()   /* tracepoint name: omrshr.924 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableRemove_Entry(thr, P1) do { /* tracepoint name: omrshr.925 */ \
	if ((unsigned char) omrshr_UtActive[925] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((925u << 8) | omrshr_UtActive[925]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableRemove_Entry(thr, P1)   /* tracepoint name: omrshr.925 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableRemove_HashtableRemove(thr, P1) do { /* tracepoint name: omrshr.926 */ \
	if ((unsigned char) omrshr_UtActive[926] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((926u << 8) | omrshr_UtActive[926]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableRemove_HashtableRemove(thr, P1)   /* tracepoint name: omrshr.926 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableRemove_Exit1(thr, P1) do { /* tracepoint name: omrshr.927 */ \
	if ((unsigned char) omrshr_UtActive[927] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((927u << 8) | omrshr_UtActive[927]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableRemove_Exit1(thr, P1)   /* tracepoint name: omrshr.927 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableRemove_Exit2(thr, P1) do { /* tracepoint name: omrshr.928 */ \
	if ((unsigned char) omrshr_UtActive[928] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((928u << 8) | omrshr_UtActive[928]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableRemove_Exit2(thr, P1)   /* tracepoint name: omrshr.928 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_markStale_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.929 */ \
	if ((unsigned char) omrshr_UtActive[929] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((929u << 8) | omrshr_UtActive[929]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RRM_markStale_Entry(thr, P1, P2)   /* tracepoint name: omrshr.929 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_markStale_Exit(thr, P1) do { /* tracepoint name: omrshr.930 */ \
	if ((unsigned char) omrshr_UtActive[930] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((930u << 8) | omrshr_UtActive[930]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_markStale_Exit(thr, P1)   /* tracepoint name: omrshr.930 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_localInit_Entry() do { /* tracepoint name: omrshr.931 */ \
	if ((unsigned char) omrshr_UtActive[931] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((931u << 8) | omrshr_UtActive[931]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_localInit_Entry()   /* tracepoint name: omrshr.931 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_RcLinkedListImpl_localInit_Exit() do { /* tracepoint name: omrshr.932 */ \
	if ((unsigned char) omrshr_UtActive[932] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((932u << 8) | omrshr_UtActive[932]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_RcLinkedListImpl_localInit_Exit()   /* tracepoint name: omrshr.932 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_LinkListImpl_link_Entry(P1, P2) do { /* tracepoint name: omrshr.933 */ \
	if ((unsigned char) omrshr_UtActive[933] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((933u << 8) | omrshr_UtActive[933]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_M_LinkListImpl_link_Entry(P1, P2)   /* tracepoint name: omrshr.933 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_LinkListImpl_link_Exit1(P1) do { /* tracepoint name: omrshr.934 */ \
	if ((unsigned char) omrshr_UtActive[934] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((934u << 8) | omrshr_UtActive[934]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_LinkListImpl_link_Exit1(P1)   /* tracepoint name: omrshr.934 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_LinkListImpl_link_Exit2(P1, P2) do { /* tracepoint name: omrshr.935 */ \
	if ((unsigned char) omrshr_UtActive[935] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((935u << 8) | omrshr_UtActive[935]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_M_LinkListImpl_link_Exit2(P1, P2)   /* tracepoint name: omrshr.935 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_HashLinkedListImpl_initialize_Entry() do { /* tracepoint name: omrshr.936 */ \
	if ((unsigned char) omrshr_UtActive[936] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((936u << 8) | omrshr_UtActive[936]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_HashLinkedListImpl_initialize_Entry()   /* tracepoint name: omrshr.936 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_HashLinkedListImpl_initialize_Exit() do { /* tracepoint name: omrshr.937 */ \
	if ((unsigned char) omrshr_UtActive[937] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((937u << 8) | omrshr_UtActive[937]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_HashLinkedListImpl_initialize_Exit()   /* tracepoint name: omrshr.937 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_HashLinkedListImpl_createLink_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.938 */ \
	if ((unsigned char) omrshr_UtActive[938] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((938u << 8) | omrshr_UtActive[938]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_M_HashLinkedListImpl_createLink_Entry(P1, P2, P3)   /* tracepoint name: omrshr.938 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_HashLinkedListImpl_createLink_Exit1() do { /* tracepoint name: omrshr.939 */ \
	if ((unsigned char) omrshr_UtActive[939] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((939u << 8) | omrshr_UtActive[939]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_HashLinkedListImpl_createLink_Exit1()   /* tracepoint name: omrshr.939 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_HashLinkedListImpl_createLink_Exit2(P1) do { /* tracepoint name: omrshr.940 */ \
	if ((unsigned char) omrshr_UtActive[940] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((940u << 8) | omrshr_UtActive[940]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_HashLinkedListImpl_createLink_Exit2(P1)   /* tracepoint name: omrshr.940 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashFn_Entry(P1) do { /* tracepoint name: omrshr.941 */ \
	if ((unsigned char) omrshr_UtActive[941] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((941u << 8) | omrshr_UtActive[941]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashFn_Entry(P1)   /* tracepoint name: omrshr.941 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashFn_Exit(P1) do { /* tracepoint name: omrshr.942 */ \
	if ((unsigned char) omrshr_UtActive[942] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((942u << 8) | omrshr_UtActive[942]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashFn_Exit(P1)   /* tracepoint name: omrshr.942 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashEqualFn_Entry(P1, P2) do { /* tracepoint name: omrshr.943 */ \
	if ((unsigned char) omrshr_UtActive[943] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((943u << 8) | omrshr_UtActive[943]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashEqualFn_Entry(P1, P2)   /* tracepoint name: omrshr.943 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashEqualFn_Exit1() do { /* tracepoint name: omrshr.944 */ \
	if ((unsigned char) omrshr_UtActive[944] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((944u << 8) | omrshr_UtActive[944]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashEqualFn_Exit1()   /* tracepoint name: omrshr.944 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashEqualFn_Exit2() do { /* tracepoint name: omrshr.945 */ \
	if ((unsigned char) omrshr_UtActive[945] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((945u << 8) | omrshr_UtActive[945]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashEqualFn_Exit2()   /* tracepoint name: omrshr.945 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllHashEqualFn_Exit3(P1) do { /* tracepoint name: omrshr.946 */ \
	if ((unsigned char) omrshr_UtActive[946] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((946u << 8) | omrshr_UtActive[946]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllHashEqualFn_Exit3(P1)   /* tracepoint name: omrshr.946 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.947 */ \
	if ((unsigned char) omrshr_UtActive[947] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((947u << 8) | omrshr_UtActive[947]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.947 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_Exception1(thr) do { /* tracepoint name: omrshr.948 */ \
	if ((unsigned char) omrshr_UtActive[948] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((948u << 8) | omrshr_UtActive[948]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_Exception1(thr)   /* tracepoint name: omrshr.948 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_HashtableAdd(thr, P1) do { /* tracepoint name: omrshr.949 */ \
	if ((unsigned char) omrshr_UtActive[949] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((949u << 8) | omrshr_UtActive[949]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_HashtableAdd(thr, P1)   /* tracepoint name: omrshr.949 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_Exit1(thr) do { /* tracepoint name: omrshr.950 */ \
	if ((unsigned char) omrshr_UtActive[950] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((950u << 8) | omrshr_UtActive[950]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_Exit1(thr)   /* tracepoint name: omrshr.950 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_Exit3(thr, P1) do { /* tracepoint name: omrshr.951 */ \
	if ((unsigned char) omrshr_UtActive[951] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((951u << 8) | omrshr_UtActive[951]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_Exit3(thr, P1)   /* tracepoint name: omrshr.951 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableAdd_Exit4(thr, P1) do { /* tracepoint name: omrshr.952 */ \
	if ((unsigned char) omrshr_UtActive[952] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((952u << 8) | omrshr_UtActive[952]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableAdd_Exit4(thr, P1)   /* tracepoint name: omrshr.952 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableLookup_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.953 */ \
	if ((unsigned char) omrshr_UtActive[953] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((953u << 8) | omrshr_UtActive[953]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableLookup_Entry(thr, P1, P2)   /* tracepoint name: omrshr.953 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableLookup_HashtableFind(thr, P1) do { /* tracepoint name: omrshr.954 */ \
	if ((unsigned char) omrshr_UtActive[954] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((954u << 8) | omrshr_UtActive[954]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableLookup_HashtableFind(thr, P1)   /* tracepoint name: omrshr.954 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableLookup_Exit1(thr, P1) do { /* tracepoint name: omrshr.955 */ \
	if ((unsigned char) omrshr_UtActive[955] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((955u << 8) | omrshr_UtActive[955]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableLookup_Exit1(thr, P1)   /* tracepoint name: omrshr.955 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableLookup_Exit2(thr, P1) do { /* tracepoint name: omrshr.956 */ \
	if ((unsigned char) omrshr_UtActive[956] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((956u << 8) | omrshr_UtActive[956]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableLookup_Exit2(thr, P1)   /* tracepoint name: omrshr.956 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableUpdate_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.957 */ \
	if ((unsigned char) omrshr_UtActive[957] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((957u << 8) | omrshr_UtActive[957]), "\12\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableUpdate_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.957 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableUpdate_Exit1(thr) do { /* tracepoint name: omrshr.958 */ \
	if ((unsigned char) omrshr_UtActive[958] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((958u << 8) | omrshr_UtActive[958]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableUpdate_Exit1(thr)   /* tracepoint name: omrshr.958 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_hllTableUpdate_Exit2(thr, P1) do { /* tracepoint name: omrshr.959 */ \
	if ((unsigned char) omrshr_UtActive[959] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((959u << 8) | omrshr_UtActive[959]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_M_hllTableUpdate_Exit2(thr, P1)   /* tracepoint name: omrshr.959 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localInitializePools_Entry(thr) do { /* tracepoint name: omrshr.960 */ \
	if ((unsigned char) omrshr_UtActive[960] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((960u << 8) | omrshr_UtActive[960]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localInitializePools_Entry(thr)   /* tracepoint name: omrshr.960 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localInitializePools_ExitFailed(thr) do { /* tracepoint name: omrshr.961 */ \
	if ((unsigned char) omrshr_UtActive[961] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((961u << 8) | omrshr_UtActive[961]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localInitializePools_ExitFailed(thr)   /* tracepoint name: omrshr.961 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localInitializePools_ExitOK(thr) do { /* tracepoint name: omrshr.962 */ \
	if ((unsigned char) omrshr_UtActive[962] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((962u << 8) | omrshr_UtActive[962]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localInitializePools_ExitOK(thr)   /* tracepoint name: omrshr.962 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localTearDownPools_Entry(thr) do { /* tracepoint name: omrshr.963 */ \
	if ((unsigned char) omrshr_UtActive[963] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((963u << 8) | omrshr_UtActive[963]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localTearDownPools_Entry(thr)   /* tracepoint name: omrshr.963 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_localTearDownPools_Exit(thr) do { /* tracepoint name: omrshr.964 */ \
	if ((unsigned char) omrshr_UtActive[964] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((964u << 8) | omrshr_UtActive[964]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_localTearDownPools_Exit(thr)   /* tracepoint name: omrshr.964 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateSRP_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.965 */ \
	if ((unsigned char) omrshr_UtActive[965] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((965u << 8) | omrshr_UtActive[965]), "\6\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateSRP_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.965 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateSRP_ExitSuccess(thr) do { /* tracepoint name: omrshr.966 */ \
	if ((unsigned char) omrshr_UtActive[966] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((966u << 8) | omrshr_UtActive[966]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateSRP_ExitSuccess(thr)   /* tracepoint name: omrshr.966 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateSRP_ExitOutOfRange(thr, P1, P2) do { /* tracepoint name: omrshr.967 */ \
	if ((unsigned char) omrshr_UtActive[967] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((967u << 8) | omrshr_UtActive[967]), "\4\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateSRP_ExitOutOfRange(thr, P1, P2)   /* tracepoint name: omrshr.967 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateSRP_ExitBad(thr) do { /* tracepoint name: omrshr.968 */ \
	if ((unsigned char) omrshr_UtActive[968] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((968u << 8) | omrshr_UtActive[968]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateSRP_ExitBad(thr)   /* tracepoint name: omrshr.968 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateInvariants_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.969 */ \
	if ((unsigned char) omrshr_UtActive[969] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((969u << 8) | omrshr_UtActive[969]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateInvariants_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.969 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateInvariants_ExitRelocFail(thr) do { /* tracepoint name: omrshr.970 */ \
	if ((unsigned char) omrshr_UtActive[970] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((970u << 8) | omrshr_UtActive[970]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateInvariants_ExitRelocFail(thr)   /* tracepoint name: omrshr.970 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_relocateInvariants_ExitSuccess(thr) do { /* tracepoint name: omrshr.971 */ \
	if ((unsigned char) omrshr_UtActive[971] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((971u << 8) | omrshr_UtActive[971]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_relocateInvariants_ExitSuccess(thr)   /* tracepoint name: omrshr.971 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_prepareForCompare_ExitBad(thr) do { /* tracepoint name: omrshr.974 */ \
	if ((unsigned char) omrshr_UtActive[974] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((974u << 8) | omrshr_UtActive[974]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_prepareForCompare_ExitBad(thr)   /* tracepoint name: omrshr.974 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_recreateSemaphore_Exit4(P1, P2) do { /* tracepoint name: omrshr.980 */ \
	if ((unsigned char) omrshr_UtActive[980] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((980u << 8) | omrshr_UtActive[980]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_recreateSemaphore_Exit4(P1, P2)   /* tracepoint name: omrshr.980 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_enterStringTableMutex_entry(thr) do { /* tracepoint name: omrshr.981 */ \
	if ((unsigned char) omrshr_UtActive[981] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((981u << 8) | omrshr_UtActive[981]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_enterStringTableMutex_entry(thr)   /* tracepoint name: omrshr.981 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_enterStringTableMutex_exit(thr, P1) do { /* tracepoint name: omrshr.982 */ \
	if ((unsigned char) omrshr_UtActive[982] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((982u << 8) | omrshr_UtActive[982]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_enterStringTableMutex_exit(thr, P1)   /* tracepoint name: omrshr.982 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_exitStringTableMutex_entry(thr) do { /* tracepoint name: omrshr.983 */ \
	if ((unsigned char) omrshr_UtActive[983] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((983u << 8) | omrshr_UtActive[983]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_exitStringTableMutex_entry(thr)   /* tracepoint name: omrshr.983 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_exitStringTableMutex_exit(thr, P1) do { /* tracepoint name: omrshr.984 */ \
	if ((unsigned char) omrshr_UtActive[984] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((984u << 8) | omrshr_UtActive[984]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_exitStringTableMutex_exit(thr, P1)   /* tracepoint name: omrshr.984 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame3(thr) do { /* tracepoint name: omrshr.985 */ \
	if ((unsigned char) omrshr_UtActive[985] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((985u << 8) | omrshr_UtActive[985]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_ExitNotSame3(thr)   /* tracepoint name: omrshr.985 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findExisting_ExitPrepareFailed(thr) do { /* tracepoint name: omrshr.986 */ \
	if ((unsigned char) omrshr_UtActive[986] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((986u << 8) | omrshr_UtActive[986]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findExisting_ExitPrepareFailed(thr)   /* tracepoint name: omrshr.986 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_findSingleEntry_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.987 */ \
	if ((unsigned char) omrshr_UtActive[987] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((987u << 8) | omrshr_UtActive[987]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_BDMI_findSingleEntry_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.987 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_findSingleEntry_ExitFound(thr, P1) do { /* tracepoint name: omrshr.988 */ \
	if ((unsigned char) omrshr_UtActive[988] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((988u << 8) | omrshr_UtActive[988]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_findSingleEntry_ExitFound(thr, P1)   /* tracepoint name: omrshr.988 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_findSingleEntry_ExitNotFound(thr) do { /* tracepoint name: omrshr.989 */ \
	if ((unsigned char) omrshr_UtActive[989] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((989u << 8) | omrshr_UtActive[989]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_findSingleEntry_ExitNotFound(thr)   /* tracepoint name: omrshr.989 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_markAllStaleForKey_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.990 */ \
	if ((unsigned char) omrshr_UtActive[990] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((990u << 8) | omrshr_UtActive[990]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_markAllStaleForKey_Entry(thr, P1, P2)   /* tracepoint name: omrshr.990 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_markAllStaleForKey_Exit(thr) do { /* tracepoint name: omrshr.991 */ \
	if ((unsigned char) omrshr_UtActive[991] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((991u << 8) | omrshr_UtActive[991]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_markAllStaleForKey_Exit(thr)   /* tracepoint name: omrshr.991 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_setDescriptorFields_Event(P1, P2) do { /* tracepoint name: omrshr.992 */ \
	if ((unsigned char) omrshr_UtActive[992] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((992u << 8) | omrshr_UtActive[992]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_setDescriptorFields_Event(P1, P2)   /* tracepoint name: omrshr.992 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_find_Entry(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.993 */ \
	if ((unsigned char) omrshr_UtActive[993] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((993u << 8) | omrshr_UtActive[993]), "\12\377\4\4\6\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_BDMI_find_Entry(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.993 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_find_Exit(thr, P1) do { /* tracepoint name: omrshr.994 */ \
	if ((unsigned char) omrshr_UtActive[994] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((994u << 8) | omrshr_UtActive[994]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_find_Exit(thr, P1)   /* tracepoint name: omrshr.994 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_releasePrivateEntry_Entry(thr, P1) do { /* tracepoint name: omrshr.995 */ \
	if ((unsigned char) omrshr_UtActive[995] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((995u << 8) | omrshr_UtActive[995]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_releasePrivateEntry_Entry(thr, P1)   /* tracepoint name: omrshr.995 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_releasePrivateEntry_ExitNoop(thr) do { /* tracepoint name: omrshr.996 */ \
	if ((unsigned char) omrshr_UtActive[996] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((996u << 8) | omrshr_UtActive[996]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_releasePrivateEntry_ExitNoop(thr)   /* tracepoint name: omrshr.996 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_releasePrivateEntry_ExitSuccess(thr, P1) do { /* tracepoint name: omrshr.997 */ \
	if ((unsigned char) omrshr_UtActive[997] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((997u << 8) | omrshr_UtActive[997]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_releasePrivateEntry_ExitSuccess(thr, P1)   /* tracepoint name: omrshr.997 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_releasePrivateEntry_ExitFailed(thr, P1) do { /* tracepoint name: omrshr.998 */ \
	if ((unsigned char) omrshr_UtActive[998] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((998u << 8) | omrshr_UtActive[998]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_releasePrivateEntry_ExitFailed(thr, P1)   /* tracepoint name: omrshr.998 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_acquirePrivateEntry_Entry(thr, P1) do { /* tracepoint name: omrshr.999 */ \
	if ((unsigned char) omrshr_UtActive[999] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((999u << 8) | omrshr_UtActive[999]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_acquirePrivateEntry_Entry(thr, P1)   /* tracepoint name: omrshr.999 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitNoop(thr) do { /* tracepoint name: omrshr.1000 */ \
	if ((unsigned char) omrshr_UtActive[1000] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1000u << 8) | omrshr_UtActive[1000]), NULL);} \
	} while(0)
#else
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitNoop(thr)   /* tracepoint name: omrshr.1000 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitSuccess(thr, P1) do { /* tracepoint name: omrshr.1001 */ \
	if ((unsigned char) omrshr_UtActive[1001] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1001u << 8) | omrshr_UtActive[1001]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitSuccess(thr, P1)   /* tracepoint name: omrshr.1001 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitFailed(thr, P1) do { /* tracepoint name: omrshr.1002 */ \
	if ((unsigned char) omrshr_UtActive[1002] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1002u << 8) | omrshr_UtActive[1002]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_acquirePrivateEntry_ExitFailed(thr, P1)   /* tracepoint name: omrshr.1002 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_ExitNoBDM(thr) do { /* tracepoint name: omrshr.1005 */ \
	if ((unsigned char) omrshr_UtActive[1005] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1005u << 8) | omrshr_UtActive[1005]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_ExitNoBDM(thr)   /* tracepoint name: omrshr.1005 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_ExitFailedToRelocateUTFBlock(thr) do { /* tracepoint name: omrshr.1006 */ \
	if ((unsigned char) omrshr_UtActive[1006] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1006u << 8) | omrshr_UtActive[1006]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_ExitFailedToRelocateUTFBlock(thr)   /* tracepoint name: omrshr.1006 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_ShouldNeverHappen() do { /* tracepoint name: omrshr.1009 */ \
	if ((unsigned char) omrshr_UtActive[1009] != 0){ \
		if ((0 /* Fatal shared classes error */)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1009u << 8) | omrshr_UtActive[1009]), "\377\4\377", __FILE__, __LINE__, UT_STR(((0 /* Fatal shared classes error */)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1009 at %s:%d Trc_SHR_Assert_ShouldNeverHappen%s\n", __FILE__, __LINE__, UT_STR(((0 /* Fatal shared classes error */)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_ShouldNeverHappen()   /* tracepoint name: omrshr.1009 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_ShouldNotHaveLocalMutex(P1) do { /* tracepoint name: omrshr.1010 */ \
	if ((unsigned char) omrshr_UtActive[1010] != 0){ \
		if (((P1==NULL) || !omrthread_monitor_owned_by_self(P1))) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1010u << 8) | omrshr_UtActive[1010]), "\377\4\377", __FILE__, __LINE__, UT_STR((((P1==NULL) || !omrthread_monitor_owned_by_self(P1))))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1010 at %s:%d Trc_SHR_Assert_ShouldNotHaveLocalMutex%s\n", __FILE__, __LINE__, UT_STR((((P1==NULL) || !omrthread_monitor_owned_by_self(P1))))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_ShouldNotHaveLocalMutex(P1)   /* tracepoint name: omrshr.1010 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_ShouldHaveLocalMutex(P1) do { /* tracepoint name: omrshr.1011 */ \
	if ((unsigned char) omrshr_UtActive[1011] != 0){ \
		if (((P1==NULL) || omrthread_monitor_owned_by_self(P1))) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1011u << 8) | omrshr_UtActive[1011]), "\377\4\377", __FILE__, __LINE__, UT_STR((((P1==NULL) || omrthread_monitor_owned_by_self(P1))))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1011 at %s:%d Trc_SHR_Assert_ShouldHaveLocalMutex%s\n", __FILE__, __LINE__, UT_STR((((P1==NULL) || omrthread_monitor_owned_by_self(P1))))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_ShouldHaveLocalMutex(P1)   /* tracepoint name: omrshr.1011 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_True(P1) do { /* tracepoint name: omrshr.1012 */ \
	if ((unsigned char) omrshr_UtActive[1012] != 0){ \
		if ((P1)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1012u << 8) | omrshr_UtActive[1012]), "\377\4\377", __FILE__, __LINE__, UT_STR(((P1)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1012 at %s:%d Trc_SHR_Assert_True%s\n", __FILE__, __LINE__, UT_STR(((P1)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_True(P1)   /* tracepoint name: omrshr.1012 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_False(P1) do { /* tracepoint name: omrshr.1013 */ \
	if ((unsigned char) omrshr_UtActive[1013] != 0){ \
		if (!(P1)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1013u << 8) | omrshr_UtActive[1013]), "\377\4\377", __FILE__, __LINE__, UT_STR((!(P1)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1013 at %s:%d Trc_SHR_Assert_False%s\n", __FILE__, __LINE__, UT_STR((!(P1)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_False(P1)   /* tracepoint name: omrshr.1013 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_Equals(P1, P2) do { /* tracepoint name: omrshr.1014 */ \
	if ((unsigned char) omrshr_UtActive[1014] != 0){ \
		if ((P1 == P2)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1014u << 8) | omrshr_UtActive[1014]), "\377\4\377", __FILE__, __LINE__, UT_STR(((P1 == P2)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1014 at %s:%d Trc_SHR_Assert_Equals%s\n", __FILE__, __LINE__, UT_STR(((P1 == P2)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_Equals(P1, P2)   /* tracepoint name: omrshr.1014 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_NotEquals(P1, P2) do { /* tracepoint name: omrshr.1015 */ \
	if ((unsigned char) omrshr_UtActive[1015] != 0){ \
		if ((P1 != P2)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1015u << 8) | omrshr_UtActive[1015]), "\377\4\377", __FILE__, __LINE__, UT_STR(((P1 != P2)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1015 at %s:%d Trc_SHR_Assert_NotEquals%s\n", __FILE__, __LINE__, UT_STR(((P1 != P2)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_NotEquals(P1, P2)   /* tracepoint name: omrshr.1015 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_ValueEqualsAorB(P1, P2, P3) do { /* tracepoint name: omrshr.1016 */ \
	if ((unsigned char) omrshr_UtActive[1016] != 0){ \
		if (((P1 == P2) || (P1 == P3))) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1016u << 8) | omrshr_UtActive[1016]), "\377\4\377", __FILE__, __LINE__, UT_STR((((P1 == P2) || (P1 == P3))))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1016 at %s:%d Trc_SHR_Assert_ValueEqualsAorB%s\n", __FILE__, __LINE__, UT_STR((((P1 == P2) || (P1 == P3))))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_ValueEqualsAorB(P1, P2, P3)   /* tracepoint name: omrshr.1016 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initialize_Exit() do { /* tracepoint name: omrshr.1018 */ \
	if ((unsigned char) omrshr_UtActive[1018] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1018u << 8) | omrshr_UtActive[1018]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_initialize_Exit()   /* tracepoint name: omrshr.1018 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_cleanup_Entry(thr) do { /* tracepoint name: omrshr.1019 */ \
	if ((unsigned char) omrshr_UtActive[1019] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1019u << 8) | omrshr_UtActive[1019]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_cleanup_Entry(thr)   /* tracepoint name: omrshr.1019 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_cleanup_Exit(thr) do { /* tracepoint name: omrshr.1020 */ \
	if ((unsigned char) omrshr_UtActive[1020] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1020u << 8) | omrshr_UtActive[1020]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_cleanup_Exit(thr)   /* tracepoint name: omrshr.1020 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_reset_Entry(thr) do { /* tracepoint name: omrshr.1021 */ \
	if ((unsigned char) omrshr_UtActive[1021] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1021u << 8) | omrshr_UtActive[1021]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_reset_Entry(thr)   /* tracepoint name: omrshr.1021 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_reset_Exit(thr) do { /* tracepoint name: omrshr.1022 */ \
	if ((unsigned char) omrshr_UtActive[1022] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1022u << 8) | omrshr_UtActive[1022]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_reset_Exit(thr)   /* tracepoint name: omrshr.1022 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCorruptCache_Entry() do { /* tracepoint name: omrshr.1023 */ \
	if ((unsigned char) omrshr_UtActive[1023] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1023u << 8) | omrshr_UtActive[1023]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCorruptCache_Entry()   /* tracepoint name: omrshr.1023 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCorruptCache_Exit() do { /* tracepoint name: omrshr.1024 */ \
	if ((unsigned char) omrshr_UtActive[1024] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1024u << 8) | omrshr_UtActive[1024]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCorruptCache_Exit()   /* tracepoint name: omrshr.1024 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_incCacheUpdateCount_Event(P1) do { /* tracepoint name: omrshr.1025 */ \
	if ((unsigned char) omrshr_UtActive[1025] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1025u << 8) | omrshr_UtActive[1025]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_incCacheUpdateCount_Event(P1)   /* tracepoint name: omrshr.1025 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Entry(thr) do { /* tracepoint name: omrshr.1026 */ \
	if ((unsigned char) omrshr_UtActive[1026] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1026u << 8) | omrshr_UtActive[1026]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Entry(thr)   /* tracepoint name: omrshr.1026 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_prePageRounding(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1027 */ \
	if ((unsigned char) omrshr_UtActive[1027] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1027u << 8) | omrshr_UtActive[1027]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_prePageRounding(thr, P1, P2, P3)   /* tracepoint name: omrshr.1027 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_postPageRounding(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1028 */ \
	if ((unsigned char) omrshr_UtActive[1028] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1028u << 8) | omrshr_UtActive[1028]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_postPageRounding(thr, P1, P2, P3)   /* tracepoint name: omrshr.1028 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.1029 */ \
	if ((unsigned char) omrshr_UtActive[1029] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1029u << 8) | omrshr_UtActive[1029]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Exit(thr, P1, P2)   /* tracepoint name: omrshr.1029 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_notifyPagesRead_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1030 */ \
	if ((unsigned char) omrshr_UtActive[1030] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1030u << 8) | omrshr_UtActive[1030]), "\6\6\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_notifyPagesRead_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.1030 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_notifyPagesRead_Exit(P1, P2, P3) do { /* tracepoint name: omrshr.1031 */ \
	if ((unsigned char) omrshr_UtActive[1031] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1031u << 8) | omrshr_UtActive[1031]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_notifyPagesRead_Exit(P1, P2, P3)   /* tracepoint name: omrshr.1031 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_notifyPagesCommitted_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1032 */ \
	if ((unsigned char) omrshr_UtActive[1032] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1032u << 8) | omrshr_UtActive[1032]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_notifyPagesCommitted_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1032 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_notifyPagesCommitted_Exit() do { /* tracepoint name: omrshr.1033 */ \
	if ((unsigned char) omrshr_UtActive[1033] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1033u << 8) | omrshr_UtActive[1033]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_notifyPagesCommitted_Exit()   /* tracepoint name: omrshr.1033 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit2(thr) do { /* tracepoint name: omrshr.1036 */ \
	if ((unsigned char) omrshr_UtActive[1036] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1036u << 8) | omrshr_UtActive[1036]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit2(thr)   /* tracepoint name: omrshr.1036 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit3(thr) do { /* tracepoint name: omrshr.1037 */ \
	if ((unsigned char) omrshr_UtActive[1037] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1037u << 8) | omrshr_UtActive[1037]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit3(thr)   /* tracepoint name: omrshr.1037 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit4(thr) do { /* tracepoint name: omrshr.1038 */ \
	if ((unsigned char) omrshr_UtActive[1038] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1038u << 8) | omrshr_UtActive[1038]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit4(thr)   /* tracepoint name: omrshr.1038 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit5(thr, P1) do { /* tracepoint name: omrshr.1039 */ \
	if ((unsigned char) omrshr_UtActive[1039] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1039u << 8) | omrshr_UtActive[1039]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit5(thr, P1)   /* tracepoint name: omrshr.1039 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_next_Entry(thr, P1) do { /* tracepoint name: omrshr.1040 */ \
	if ((unsigned char) omrshr_UtActive[1040] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1040u << 8) | omrshr_UtActive[1040]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_next_Entry(thr, P1)   /* tracepoint name: omrshr.1040 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_next_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.1041 */ \
	if ((unsigned char) omrshr_UtActive[1041] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1041u << 8) | omrshr_UtActive[1041]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_next_Exit(thr, P1, P2)   /* tracepoint name: omrshr.1041 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initBlockData_Entry(P1, P2) do { /* tracepoint name: omrshr.1042 */ \
	if ((unsigned char) omrshr_UtActive[1042] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1042u << 8) | omrshr_UtActive[1042]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_initBlockData_Entry(P1, P2)   /* tracepoint name: omrshr.1042 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initBlockData_Exit() do { /* tracepoint name: omrshr.1043 */ \
	if ((unsigned char) omrshr_UtActive[1043] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1043u << 8) | omrshr_UtActive[1043]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_initBlockData_Exit()   /* tracepoint name: omrshr.1043 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_checkUpdates_Event_result(P1, P2) do { /* tracepoint name: omrshr.1044 */ \
	if ((unsigned char) omrshr_UtActive[1044] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1044u << 8) | omrshr_UtActive[1044]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_checkUpdates_Event_result(P1, P2)   /* tracepoint name: omrshr.1044 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doneReadUpdates_Event_result(P1, P2) do { /* tracepoint name: omrshr.1045 */ \
	if ((unsigned char) omrshr_UtActive[1045] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1045u << 8) | omrshr_UtActive[1045]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_doneReadUpdates_Event_result(P1, P2)   /* tracepoint name: omrshr.1045 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_nextEntry_Entry(thr) do { /* tracepoint name: omrshr.1046 */ \
	if ((unsigned char) omrshr_UtActive[1046] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1046u << 8) | omrshr_UtActive[1046]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_nextEntry_Entry(thr)   /* tracepoint name: omrshr.1046 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_nextEntry_Exit1(thr, P1, P2) do { /* tracepoint name: omrshr.1047 */ \
	if ((unsigned char) omrshr_UtActive[1047] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1047u << 8) | omrshr_UtActive[1047]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_nextEntry_Exit1(thr, P1, P2)   /* tracepoint name: omrshr.1047 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_nextEntry_Exit2(thr, P1) do { /* tracepoint name: omrshr.1048 */ \
	if ((unsigned char) omrshr_UtActive[1048] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1048u << 8) | omrshr_UtActive[1048]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_nextEntry_Exit2(thr, P1)   /* tracepoint name: omrshr.1048 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doLockCache_Entry(thr) do { /* tracepoint name: omrshr.1049 */ \
	if ((unsigned char) omrshr_UtActive[1049] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1049u << 8) | omrshr_UtActive[1049]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_doLockCache_Entry(thr)   /* tracepoint name: omrshr.1049 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doLockCache_EventWhackedToZero(thr) do { /* tracepoint name: omrshr.1050 */ \
	if ((unsigned char) omrshr_UtActive[1050] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1050u << 8) | omrshr_UtActive[1050]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_doLockCache_EventWhackedToZero(thr)   /* tracepoint name: omrshr.1050 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doLockCache_Exit(thr) do { /* tracepoint name: omrshr.1051 */ \
	if ((unsigned char) omrshr_UtActive[1051] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1051u << 8) | omrshr_UtActive[1051]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_doLockCache_Exit(thr)   /* tracepoint name: omrshr.1051 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doUnlockCache_Entry(thr) do { /* tracepoint name: omrshr.1052 */ \
	if ((unsigned char) omrshr_UtActive[1052] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1052u << 8) | omrshr_UtActive[1052]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_doUnlockCache_Entry(thr)   /* tracepoint name: omrshr.1052 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_doUnlockCache_Exit(thr) do { /* tracepoint name: omrshr.1053 */ \
	if ((unsigned char) omrshr_UtActive[1053] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1053u << 8) | omrshr_UtActive[1053]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_doUnlockCache_Exit(thr)   /* tracepoint name: omrshr.1053 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_incReaderCount_Entry(P1) do { /* tracepoint name: omrshr.1054 */ \
	if ((unsigned char) omrshr_UtActive[1054] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1054u << 8) | omrshr_UtActive[1054]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_incReaderCount_Entry(P1)   /* tracepoint name: omrshr.1054 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_incReaderCount_Exit(P1) do { /* tracepoint name: omrshr.1055 */ \
	if ((unsigned char) omrshr_UtActive[1055] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1055u << 8) | omrshr_UtActive[1055]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_incReaderCount_Exit(P1)   /* tracepoint name: omrshr.1055 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_decReaderCount_Entry(P1) do { /* tracepoint name: omrshr.1056 */ \
	if ((unsigned char) omrshr_UtActive[1056] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1056u << 8) | omrshr_UtActive[1056]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_decReaderCount_Entry(P1)   /* tracepoint name: omrshr.1056 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_decReaderCount_Exit(P1) do { /* tracepoint name: omrshr.1057 */ \
	if ((unsigned char) omrshr_UtActive[1057] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1057u << 8) | omrshr_UtActive[1057]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_decReaderCount_Exit(P1)   /* tracepoint name: omrshr.1057 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_deleteCache_Entry() do { /* tracepoint name: omrshr.1058 */ \
	if ((unsigned char) omrshr_UtActive[1058] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1058u << 8) | omrshr_UtActive[1058]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_deleteCache_Entry()   /* tracepoint name: omrshr.1058 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_deleteCache_Exit() do { /* tracepoint name: omrshr.1059 */ \
	if ((unsigned char) omrshr_UtActive[1059] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1059u << 8) | omrshr_UtActive[1059]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_deleteCache_Exit()   /* tracepoint name: omrshr.1059 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1060 */ \
	if ((unsigned char) omrshr_UtActive[1060] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1060u << 8) | omrshr_UtActive[1060]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1060 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_EventNewItem(thr, P1) do { /* tracepoint name: omrshr.1061 */ \
	if ((unsigned char) omrshr_UtActive[1061] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1061u << 8) | omrshr_UtActive[1061]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_EventNewItem(thr, P1)   /* tracepoint name: omrshr.1061 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_EventSegmentBufSet(thr, P1) do { /* tracepoint name: omrshr.1062 */ \
	if ((unsigned char) omrshr_UtActive[1062] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1062u << 8) | omrshr_UtActive[1062]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_EventSegmentBufSet(thr, P1)   /* tracepoint name: omrshr.1062 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_EventReadWriteBufSet(thr, P1) do { /* tracepoint name: omrshr.1063 */ \
	if ((unsigned char) omrshr_UtActive[1063] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1063u << 8) | omrshr_UtActive[1063]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_EventReadWriteBufSet(thr, P1)   /* tracepoint name: omrshr.1063 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_commitUpdate_Exit(thr) do { /* tracepoint name: omrshr.1067 */ \
	if ((unsigned char) omrshr_UtActive[1067] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1067u << 8) | omrshr_UtActive[1067]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_commitUpdate_Exit(thr)   /* tracepoint name: omrshr.1067 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_markStale_Event(thr, P1) do { /* tracepoint name: omrshr.1068 */ \
	if ((unsigned char) omrshr_UtActive[1068] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1068u << 8) | omrshr_UtActive[1068]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_markStale_Event(thr, P1)   /* tracepoint name: omrshr.1068 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_findStart_Event(thr, P1) do { /* tracepoint name: omrshr.1069 */ \
	if ((unsigned char) omrshr_UtActive[1069] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1069u << 8) | omrshr_UtActive[1069]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_findStart_Event(thr, P1)   /* tracepoint name: omrshr.1069 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setInternCacheHeaderFields_Entry() do { /* tracepoint name: omrshr.1070 */ \
	if ((unsigned char) omrshr_UtActive[1070] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1070u << 8) | omrshr_UtActive[1070]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setInternCacheHeaderFields_Entry()   /* tracepoint name: omrshr.1070 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setInternCacheHeaderFields_Exit(P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1071 */ \
	if ((unsigned char) omrshr_UtActive[1071] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1071u << 8) | omrshr_UtActive[1071]), "\6\6\6\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CC_setInternCacheHeaderFields_Exit(P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1071 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_Entry(thr) do { /* tracepoint name: omrshr.1072 */ \
	if ((unsigned char) omrshr_UtActive[1072] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1072u << 8) | omrshr_UtActive[1072]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_Entry(thr)   /* tracepoint name: omrshr.1072 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadWriteAreaMutex_Entry(thr) do { /* tracepoint name: omrshr.1076 */ \
	if ((unsigned char) omrshr_UtActive[1076] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1076u << 8) | omrshr_UtActive[1076]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadWriteAreaMutex_Entry(thr)   /* tracepoint name: omrshr.1076 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Entry(P1) do { /* tracepoint name: omrshr.1078 */ \
	if ((unsigned char) omrshr_UtActive[1078] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1078u << 8) | omrshr_UtActive[1078]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Entry(P1)   /* tracepoint name: omrshr.1078 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Exit() do { /* tracepoint name: omrshr.1079 */ \
	if ((unsigned char) omrshr_UtActive[1079] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1079u << 8) | omrshr_UtActive[1079]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Exit()   /* tracepoint name: omrshr.1079 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Entry(P1) do { /* tracepoint name: omrshr.1080 */ \
	if ((unsigned char) omrshr_UtActive[1080] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1080u << 8) | omrshr_UtActive[1080]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Entry(P1)   /* tracepoint name: omrshr.1080 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Exit() do { /* tracepoint name: omrshr.1081 */ \
	if ((unsigned char) omrshr_UtActive[1081] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1081u << 8) | omrshr_UtActive[1081]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Exit()   /* tracepoint name: omrshr.1081 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_Entry() do { /* tracepoint name: omrshr.1082 */ \
	if ((unsigned char) omrshr_UtActive[1082] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1082u << 8) | omrshr_UtActive[1082]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_Entry()   /* tracepoint name: omrshr.1082 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_wrongCreateFlags() do { /* tracepoint name: omrshr.1083 */ \
	if ((unsigned char) omrshr_UtActive[1083] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1083u << 8) | omrshr_UtActive[1083]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_wrongCreateFlags()   /* tracepoint name: omrshr.1083 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_nomem_cacheName() do { /* tracepoint name: omrshr.1084 */ \
	if ((unsigned char) omrshr_UtActive[1084] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1084u << 8) | omrshr_UtActive[1084]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_nomem_cacheName()   /* tracepoint name: omrshr.1084 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_nomem_cachePathName() do { /* tracepoint name: omrshr.1085 */ \
	if ((unsigned char) omrshr_UtActive[1085] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1085u << 8) | omrshr_UtActive[1085]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_nomem_cachePathName()   /* tracepoint name: omrshr.1085 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_copied_cachePathName(P1, P2) do { /* tracepoint name: omrshr.1086 */ \
	if ((unsigned char) omrshr_UtActive[1086] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1086u << 8) | omrshr_UtActive[1086]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_copied_cachePathName(P1, P2)   /* tracepoint name: omrshr.1086 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_Exit() do { /* tracepoint name: omrshr.1087 */ \
	if ((unsigned char) omrshr_UtActive[1087] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1087u << 8) | omrshr_UtActive[1087]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_Exit()   /* tracepoint name: omrshr.1087 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_commonStartupFailure() do { /* tracepoint name: omrshr.1088 */ \
	if ((unsigned char) omrshr_UtActive[1088] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1088u << 8) | omrshr_UtActive[1088]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_commonStartupFailure()   /* tracepoint name: omrshr.1088 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_commonStartupSuccess() do { /* tracepoint name: omrshr.1089 */ \
	if ((unsigned char) omrshr_UtActive[1089] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1089u << 8) | omrshr_UtActive[1089]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_commonStartupSuccess()   /* tracepoint name: omrshr.1089 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_commonStartupFailure() do { /* tracepoint name: omrshr.1090 */ \
	if ((unsigned char) omrshr_UtActive[1090] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1090u << 8) | omrshr_UtActive[1090]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_commonStartupFailure()   /* tracepoint name: omrshr.1090 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_commonStartupSuccess() do { /* tracepoint name: omrshr.1091 */ \
	if ((unsigned char) omrshr_UtActive[1091] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1091u << 8) | omrshr_UtActive[1091]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_commonStartupSuccess()   /* tracepoint name: omrshr.1091 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_nameAllocateFailure() do { /* tracepoint name: omrshr.1092 */ \
	if ((unsigned char) omrshr_UtActive[1092] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1092u << 8) | omrshr_UtActive[1092]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_nameAllocateFailure()   /* tracepoint name: omrshr.1092 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Event6(thr) do { /* tracepoint name: omrshr.1093 */ \
	if ((unsigned char) omrshr_UtActive[1093] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1093u << 8) | omrshr_UtActive[1093]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Event6(thr)   /* tracepoint name: omrshr.1093 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Event7(thr) do { /* tracepoint name: omrshr.1094 */ \
	if ((unsigned char) omrshr_UtActive[1094] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1094u << 8) | omrshr_UtActive[1094]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Event7(thr)   /* tracepoint name: omrshr.1094 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_differentBuildID() do { /* tracepoint name: omrshr.1095 */ \
	if ((unsigned char) omrshr_UtActive[1095] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1095u << 8) | omrshr_UtActive[1095]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_differentBuildID()   /* tracepoint name: omrshr.1095 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_printSharedCache_Entry() do { /* tracepoint name: omrshr.1096 */ \
	if ((unsigned char) omrshr_UtActive[1096] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1096u << 8) | omrshr_UtActive[1096]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_printSharedCache_Entry()   /* tracepoint name: omrshr.1096 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_printSharedCache_Exit() do { /* tracepoint name: omrshr.1097 */ \
	if ((unsigned char) omrshr_UtActive[1097] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1097u << 8) | omrshr_UtActive[1097]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_printSharedCache_Exit()   /* tracepoint name: omrshr.1097 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSharedCache_Entry() do { /* tracepoint name: omrshr.1098 */ \
	if ((unsigned char) omrshr_UtActive[1098] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1098u << 8) | omrshr_UtActive[1098]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSharedCache_Entry()   /* tracepoint name: omrshr.1098 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSharedCache_ExitError() do { /* tracepoint name: omrshr.1099 */ \
	if ((unsigned char) omrshr_UtActive[1099] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1099u << 8) | omrshr_UtActive[1099]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSharedCache_ExitError()   /* tracepoint name: omrshr.1099 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSharedCache_Exit() do { /* tracepoint name: omrshr.1100 */ \
	if ((unsigned char) omrshr_UtActive[1100] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1100u << 8) | omrshr_UtActive[1100]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSharedCache_Exit()   /* tracepoint name: omrshr.1100 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteExpiredSharedCache_Entry() do { /* tracepoint name: omrshr.1101 */ \
	if ((unsigned char) omrshr_UtActive[1101] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1101u << 8) | omrshr_UtActive[1101]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteExpiredSharedCache_Entry()   /* tracepoint name: omrshr.1101 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteExpiredSharedCache_StillAttached() do { /* tracepoint name: omrshr.1102 */ \
	if ((unsigned char) omrshr_UtActive[1102] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1102u << 8) | omrshr_UtActive[1102]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteExpiredSharedCache_StillAttached()   /* tracepoint name: omrshr.1102 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteExpiredSharedCache_Exit() do { /* tracepoint name: omrshr.1103 */ \
	if ((unsigned char) omrshr_UtActive[1103] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1103u << 8) | omrshr_UtActive[1103]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteExpiredSharedCache_Exit()   /* tracepoint name: omrshr.1103 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_getCacheList_Entry() do { /* tracepoint name: omrshr.1104 */ \
	if ((unsigned char) omrshr_UtActive[1104] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1104u << 8) | omrshr_UtActive[1104]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_getCacheList_Entry()   /* tracepoint name: omrshr.1104 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_getCacheList_Exit() do { /* tracepoint name: omrshr.1105 */ \
	if ((unsigned char) omrshr_UtActive[1105] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1105u << 8) | omrshr_UtActive[1105]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_getCacheList_Exit()   /* tracepoint name: omrshr.1105 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_findIncompatibleCachesForName_Entry(P1) do { /* tracepoint name: omrshr.1106 */ \
	if ((unsigned char) omrshr_UtActive[1106] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1106u << 8) | omrshr_UtActive[1106]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_findIncompatibleCachesForName_Entry(P1)   /* tracepoint name: omrshr.1106 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_findIncompatibleCachesForName_Exit() do { /* tracepoint name: omrshr.1107 */ \
	if ((unsigned char) omrshr_UtActive[1107] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1107u << 8) | omrshr_UtActive[1107]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_findIncompatibleCachesForName_Exit()   /* tracepoint name: omrshr.1107 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_list_caches_Entry(P1) do { /* tracepoint name: omrshr.1108 */ \
	if ((unsigned char) omrshr_UtActive[1108] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1108u << 8) | omrshr_UtActive[1108]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_list_caches_Entry(P1)   /* tracepoint name: omrshr.1108 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_list_caches_noCaches() do { /* tracepoint name: omrshr.1109 */ \
	if ((unsigned char) omrshr_UtActive[1109] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1109u << 8) | omrshr_UtActive[1109]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_list_caches_noCaches()   /* tracepoint name: omrshr.1109 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_list_caches_Exit() do { /* tracepoint name: omrshr.1110 */ \
	if ((unsigned char) omrshr_UtActive[1110] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1110u << 8) | omrshr_UtActive[1110]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_list_caches_Exit()   /* tracepoint name: omrshr.1110 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_Entry(P1, P2) do { /* tracepoint name: omrshr.1111 */ \
	if ((unsigned char) omrshr_UtActive[1111] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1111u << 8) | omrshr_UtActive[1111]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_Entry(P1, P2)   /* tracepoint name: omrshr.1111 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_noCaches() do { /* tracepoint name: omrshr.1112 */ \
	if ((unsigned char) omrshr_UtActive[1112] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1112u << 8) | omrshr_UtActive[1112]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_noCaches()   /* tracepoint name: omrshr.1112 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_Exit() do { /* tracepoint name: omrshr.1113 */ \
	if ((unsigned char) omrshr_UtActive[1113] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1113u << 8) | omrshr_UtActive[1113]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_expire_cache_Exit()   /* tracepoint name: omrshr.1113 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_cache_Entry(P1) do { /* tracepoint name: omrshr.1114 */ \
	if ((unsigned char) omrshr_UtActive[1114] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1114u << 8) | omrshr_UtActive[1114]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_cache_Entry(P1)   /* tracepoint name: omrshr.1114 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_cache_noCaches() do { /* tracepoint name: omrshr.1115 */ \
	if ((unsigned char) omrshr_UtActive[1115] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1115u << 8) | omrshr_UtActive[1115]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_cache_noCaches()   /* tracepoint name: omrshr.1115 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_cache_Exit() do { /* tracepoint name: omrshr.1116 */ \
	if ((unsigned char) omrshr_UtActive[1116] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1116u << 8) | omrshr_UtActive[1116]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_cache_Exit()   /* tracepoint name: omrshr.1116 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_cache_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1117 */ \
	if ((unsigned char) omrshr_UtActive[1117] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1117u << 8) | omrshr_UtActive[1117]), "\6\377\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_cache_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.1117 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_cache_allocFailed() do { /* tracepoint name: omrshr.1118 */ \
	if ((unsigned char) omrshr_UtActive[1118] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1118u << 8) | omrshr_UtActive[1118]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_cache_allocFailed()   /* tracepoint name: omrshr.1118 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_cache_Exit(P1) do { /* tracepoint name: omrshr.1119 */ \
	if ((unsigned char) omrshr_UtActive[1119] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1119u << 8) | omrshr_UtActive[1119]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_cache_Exit(P1)   /* tracepoint name: omrshr.1119 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_stat_cache_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1120 */ \
	if ((unsigned char) omrshr_UtActive[1120] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1120u << 8) | omrshr_UtActive[1120]), "\6\377\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_stat_cache_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1120 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_stat_cache_Exit(P1) do { /* tracepoint name: omrshr.1121 */ \
	if ((unsigned char) omrshr_UtActive[1121] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1121u << 8) | omrshr_UtActive[1121]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_stat_cache_Exit(P1)   /* tracepoint name: omrshr.1121 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_report_utility_incompatible_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1122 */ \
	if ((unsigned char) omrshr_UtActive[1122] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1122u << 8) | omrshr_UtActive[1122]), "\6\377\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_report_utility_incompatible_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1122 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_report_utility_incompatible_Exit(P1) do { /* tracepoint name: omrshr.1123 */ \
	if ((unsigned char) omrshr_UtActive[1123] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1123u << 8) | omrshr_UtActive[1123]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_report_utility_incompatible_Exit(P1)   /* tracepoint name: omrshr.1123 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheVersionAndGen_Entry(P1, P2) do { /* tracepoint name: omrshr.1124 */ \
	if ((unsigned char) omrshr_UtActive[1124] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1124u << 8) | omrshr_UtActive[1124]), "\377\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheVersionAndGen_Entry(P1, P2)   /* tracepoint name: omrshr.1124 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheVersionAndGen_Exit(P1) do { /* tracepoint name: omrshr.1125 */ \
	if ((unsigned char) omrshr_UtActive[1125] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1125u << 8) | omrshr_UtActive[1125]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheVersionAndGen_Exit(P1)   /* tracepoint name: omrshr.1125 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_removeCacheVersionAndGen_Entry(P1, P2) do { /* tracepoint name: omrshr.1126 */ \
	if ((unsigned char) omrshr_UtActive[1126] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1126u << 8) | omrshr_UtActive[1126]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_removeCacheVersionAndGen_Entry(P1, P2)   /* tracepoint name: omrshr.1126 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_removeCacheVersionAndGen_overflow() do { /* tracepoint name: omrshr.1127 */ \
	if ((unsigned char) omrshr_UtActive[1127] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1127u << 8) | omrshr_UtActive[1127]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_removeCacheVersionAndGen_overflow()   /* tracepoint name: omrshr.1127 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_removeCacheVersionAndGen_Exit() do { /* tracepoint name: omrshr.1128 */ \
	if ((unsigned char) omrshr_UtActive[1128] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1128u << 8) | omrshr_UtActive[1128]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_removeCacheVersionAndGen_Exit()   /* tracepoint name: omrshr.1128 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_Entry() do { /* tracepoint name: omrshr.1129 */ \
	if ((unsigned char) omrshr_UtActive[1129] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1129u << 8) | omrshr_UtActive[1129]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_Entry()   /* tracepoint name: omrshr.1129 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_noBaseDir() do { /* tracepoint name: omrshr.1132 */ \
	if ((unsigned char) omrshr_UtActive[1132] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1132u << 8) | omrshr_UtActive[1132]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_noBaseDir()   /* tracepoint name: omrshr.1132 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_Exit() do { /* tracepoint name: omrshr.1133 */ \
	if ((unsigned char) omrshr_UtActive[1133] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1133u << 8) | omrshr_UtActive[1133]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_Exit()   /* tracepoint name: omrshr.1133 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCachePathName_Entry(P1) do { /* tracepoint name: omrshr.1134 */ \
	if ((unsigned char) omrshr_UtActive[1134] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1134u << 8) | omrshr_UtActive[1134]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCachePathName_Entry(P1)   /* tracepoint name: omrshr.1134 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCachePathName_getValuesFromShcFilePrefixFailed() do { /* tracepoint name: omrshr.1135 */ \
	if ((unsigned char) omrshr_UtActive[1135] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1135u << 8) | omrshr_UtActive[1135]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCachePathName_getValuesFromShcFilePrefixFailed()   /* tracepoint name: omrshr.1135 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCachePathName_getCacheDirFailed() do { /* tracepoint name: omrshr.1136 */ \
	if ((unsigned char) omrshr_UtActive[1136] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1136u << 8) | omrshr_UtActive[1136]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCachePathName_getCacheDirFailed()   /* tracepoint name: omrshr.1136 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCachePathName_Exit() do { /* tracepoint name: omrshr.1137 */ \
	if ((unsigned char) omrshr_UtActive[1137] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1137u << 8) | omrshr_UtActive[1137]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCachePathName_Exit()   /* tracepoint name: omrshr.1137 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_statCache_Entry(P1) do { /* tracepoint name: omrshr.1138 */ \
	if ((unsigned char) omrshr_UtActive[1138] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1138u << 8) | omrshr_UtActive[1138]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_statCache_Entry(P1)   /* tracepoint name: omrshr.1138 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_statCache_getCachePathNameFailed() do { /* tracepoint name: omrshr.1139 */ \
	if ((unsigned char) omrshr_UtActive[1139] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1139u << 8) | omrshr_UtActive[1139]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_statCache_getCachePathNameFailed()   /* tracepoint name: omrshr.1139 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_statCache_cacheFound() do { /* tracepoint name: omrshr.1140 */ \
	if ((unsigned char) omrshr_UtActive[1140] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1140u << 8) | omrshr_UtActive[1140]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_statCache_cacheFound()   /* tracepoint name: omrshr.1140 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_statCache_cacheNotFound() do { /* tracepoint name: omrshr.1141 */ \
	if ((unsigned char) omrshr_UtActive[1141] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1141u << 8) | omrshr_UtActive[1141]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_statCache_cacheNotFound()   /* tracepoint name: omrshr.1141 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonCleanup_Entry() do { /* tracepoint name: omrshr.1142 */ \
	if ((unsigned char) omrshr_UtActive[1142] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1142u << 8) | omrshr_UtActive[1142]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonCleanup_Entry()   /* tracepoint name: omrshr.1142 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonCleanup_Exit() do { /* tracepoint name: omrshr.1143 */ \
	if ((unsigned char) omrshr_UtActive[1143] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1143u << 8) | omrshr_UtActive[1143]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonCleanup_Exit()   /* tracepoint name: omrshr.1143 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Exit2() do { /* tracepoint name: omrshr.1144 */ \
	if ((unsigned char) omrshr_UtActive[1144] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1144u << 8) | omrshr_UtActive[1144]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Exit2()   /* tracepoint name: omrshr.1144 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Exit3() do { /* tracepoint name: omrshr.1145 */ \
	if ((unsigned char) omrshr_UtActive[1145] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1145u << 8) | omrshr_UtActive[1145]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Exit3()   /* tracepoint name: omrshr.1145 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getAllCacheStatistics_Exit4() do { /* tracepoint name: omrshr.1146 */ \
	if ((unsigned char) omrshr_UtActive[1146] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1146u << 8) | omrshr_UtActive[1146]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getAllCacheStatistics_Exit4()   /* tracepoint name: omrshr.1146 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_Entry() do { /* tracepoint name: omrshr.1147 */ \
	if ((unsigned char) omrshr_UtActive[1147] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1147u << 8) | omrshr_UtActive[1147]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_Entry()   /* tracepoint name: omrshr.1147 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_NullResult() do { /* tracepoint name: omrshr.1148 */ \
	if ((unsigned char) omrshr_UtActive[1148] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1148u << 8) | omrshr_UtActive[1148]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_NullResult()   /* tracepoint name: omrshr.1148 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_StatFailure() do { /* tracepoint name: omrshr.1149 */ \
	if ((unsigned char) omrshr_UtActive[1149] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1149u << 8) | omrshr_UtActive[1149]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_StatFailure()   /* tracepoint name: omrshr.1149 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_stattingMmap() do { /* tracepoint name: omrshr.1150 */ \
	if ((unsigned char) omrshr_UtActive[1150] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1150u << 8) | omrshr_UtActive[1150]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_stattingMmap()   /* tracepoint name: omrshr.1150 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_stattingSysv() do { /* tracepoint name: omrshr.1151 */ \
	if ((unsigned char) omrshr_UtActive[1151] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1151u << 8) | omrshr_UtActive[1151]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_stattingSysv()   /* tracepoint name: omrshr.1151 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_Exit(P1) do { /* tracepoint name: omrshr.1152 */ \
	if ((unsigned char) omrshr_UtActive[1152] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1152u << 8) | omrshr_UtActive[1152]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_Exit(P1)   /* tracepoint name: omrshr.1152 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1153 */ \
	if ((unsigned char) omrshr_UtActive[1153] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1153u << 8) | omrshr_UtActive[1153]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1153 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_differentGeneration() do { /* tracepoint name: omrshr.1154 */ \
	if ((unsigned char) omrshr_UtActive[1154] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1154u << 8) | omrshr_UtActive[1154]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_differentGeneration()   /* tracepoint name: omrshr.1154 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_wrongVersion() do { /* tracepoint name: omrshr.1155 */ \
	if ((unsigned char) omrshr_UtActive[1155] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1155u << 8) | omrshr_UtActive[1155]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_wrongVersion()   /* tracepoint name: omrshr.1155 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_wrongDataLength() do { /* tracepoint name: omrshr.1156 */ \
	if ((unsigned char) omrshr_UtActive[1156] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1156u << 8) | omrshr_UtActive[1156]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_wrongDataLength()   /* tracepoint name: omrshr.1156 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_wrongDataStartValue() do { /* tracepoint name: omrshr.1157 */ \
	if ((unsigned char) omrshr_UtActive[1157] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1157u << 8) | omrshr_UtActive[1157]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_wrongDataStartValue()   /* tracepoint name: omrshr.1157 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_wrongBuildID() do { /* tracepoint name: omrshr.1158 */ \
	if ((unsigned char) omrshr_UtActive[1158] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1158u << 8) | omrshr_UtActive[1158]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_wrongBuildID()   /* tracepoint name: omrshr.1158 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_Exit() do { /* tracepoint name: omrshr.1159 */ \
	if ((unsigned char) omrshr_UtActive[1159] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1159u << 8) | omrshr_UtActive[1159]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_Exit()   /* tracepoint name: omrshr.1159 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findfirst_Entry() do { /* tracepoint name: omrshr.1172 */ \
	if ((unsigned char) omrshr_UtActive[1172] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1172u << 8) | omrshr_UtActive[1172]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findfirst_Entry()   /* tracepoint name: omrshr.1172 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findfirst_Exit(P1) do { /* tracepoint name: omrshr.1173 */ \
	if ((unsigned char) omrshr_UtActive[1173] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1173u << 8) | omrshr_UtActive[1173]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findfirst_Exit(P1)   /* tracepoint name: omrshr.1173 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findnext_Entry(P1) do { /* tracepoint name: omrshr.1174 */ \
	if ((unsigned char) omrshr_UtActive[1174] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1174u << 8) | omrshr_UtActive[1174]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findnext_Entry(P1)   /* tracepoint name: omrshr.1174 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findnext_Exit(P1) do { /* tracepoint name: omrshr.1175 */ \
	if ((unsigned char) omrshr_UtActive[1175] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1175u << 8) | omrshr_UtActive[1175]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findnext_Exit(P1)   /* tracepoint name: omrshr.1175 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findclose_Entry() do { /* tracepoint name: omrshr.1176 */ \
	if ((unsigned char) omrshr_UtActive[1176] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1176u << 8) | omrshr_UtActive[1176]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findclose_Entry()   /* tracepoint name: omrshr.1176 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_findclose_Exit() do { /* tracepoint name: omrshr.1177 */ \
	if ((unsigned char) omrshr_UtActive[1177] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1177u << 8) | omrshr_UtActive[1177]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_findclose_Exit()   /* tracepoint name: omrshr.1177 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_sanityWalkROMClassSegment_Entry(thr) do { /* tracepoint name: omrshr.1178 */ \
	if ((unsigned char) omrshr_UtActive[1178] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1178u << 8) | omrshr_UtActive[1178]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_sanityWalkROMClassSegment_Entry(thr)   /* tracepoint name: omrshr.1178 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_sanityWalkROMClassSegment_ExitBad(thr, P1, P2) do { /* tracepoint name: omrshr.1179 */ \
	if ((unsigned char) omrshr_UtActive[1179] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1179u << 8) | omrshr_UtActive[1179]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_sanityWalkROMClassSegment_ExitBad(thr, P1, P2)   /* tracepoint name: omrshr.1179 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_sanityWalkROMClassSegment_ExitOK(thr) do { /* tracepoint name: omrshr.1180 */ \
	if ((unsigned char) omrshr_UtActive[1180] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1180u << 8) | omrshr_UtActive[1180]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_sanityWalkROMClassSegment_ExitOK(thr)   /* tracepoint name: omrshr.1180 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_ExitWrongGen() do { /* tracepoint name: omrshr.1181 */ \
	if ((unsigned char) omrshr_UtActive[1181] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1181u << 8) | omrshr_UtActive[1181]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_ExitWrongGen()   /* tracepoint name: omrshr.1181 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_initOSCacheHeader_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1182 */ \
	if ((unsigned char) omrshr_UtActive[1182] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1182u << 8) | omrshr_UtActive[1182]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_initOSCacheHeader_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1182 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_initOSCacheHeader_Exit() do { /* tracepoint name: omrshr.1183 */ \
	if ((unsigned char) omrshr_UtActive[1183] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1183u << 8) | omrshr_UtActive[1183]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_initOSCacheHeader_Exit()   /* tracepoint name: omrshr.1183 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Event_OpenReadOnly() do { /* tracepoint name: omrshr.1184 */ \
	if ((unsigned char) omrshr_UtActive[1184] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1184u << 8) | omrshr_UtActive[1184]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Event_OpenReadOnly()   /* tracepoint name: omrshr.1184 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_ExitReadOnly() do { /* tracepoint name: omrshr.1185 */ \
	if ((unsigned char) omrshr_UtActive[1185] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1185u << 8) | omrshr_UtActive[1185]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireHeaderWriteLock_ExitReadOnly()   /* tracepoint name: omrshr.1185 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_ExitReadOnly() do { /* tracepoint name: omrshr.1186 */ \
	if ((unsigned char) omrshr_UtActive[1186] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1186u << 8) | omrshr_UtActive[1186]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_releaseHeaderWriteLock_ExitReadOnly()   /* tracepoint name: omrshr.1186 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_cacheNotInitialized() do { /* tracepoint name: omrshr.1187 */ \
	if ((unsigned char) omrshr_UtActive[1187] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1187u << 8) | omrshr_UtActive[1187]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_cacheNotInitialized()   /* tracepoint name: omrshr.1187 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_runningReadOnlyAndWrongLength() do { /* tracepoint name: omrshr.1188 */ \
	if ((unsigned char) omrshr_UtActive[1188] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1188u << 8) | omrshr_UtActive[1188]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_runningReadOnlyAndWrongLength()   /* tracepoint name: omrshr.1188 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_ReadOnly() do { /* tracepoint name: omrshr.1189 */ \
	if ((unsigned char) omrshr_UtActive[1189] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1189u << 8) | omrshr_UtActive[1189]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastAttachedTime_ReadOnly()   /* tracepoint name: omrshr.1189 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_ReadOnly() do { /* tracepoint name: omrshr.1190 */ \
	if ((unsigned char) omrshr_UtActive[1190] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1190u << 8) | omrshr_UtActive[1190]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_updateLastDetachedTime_ReadOnly()   /* tracepoint name: omrshr.1190 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterWriteMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1191 */ \
	if ((unsigned char) omrshr_UtActive[1191] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1191u << 8) | omrshr_UtActive[1191]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_enterWriteMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1191 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitWriteMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1192 */ \
	if ((unsigned char) omrshr_UtActive[1192] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1192u << 8) | omrshr_UtActive[1192]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_exitWriteMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1192 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1193 */ \
	if ((unsigned char) omrshr_UtActive[1193] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1193u << 8) | omrshr_UtActive[1193]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1193 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1194 */ \
	if ((unsigned char) omrshr_UtActive[1194] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1194u << 8) | omrshr_UtActive[1194]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1194 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1195 */ \
	if ((unsigned char) omrshr_UtActive[1195] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1195u << 8) | omrshr_UtActive[1195]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1195 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadWriteAreaMutex_ExitReadOnly(thr) do { /* tracepoint name: omrshr.1196 */ \
	if ((unsigned char) omrshr_UtActive[1196] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1196u << 8) | omrshr_UtActive[1196]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadWriteAreaMutex_ExitReadOnly(thr)   /* tracepoint name: omrshr.1196 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_ExitStaleClasspath(thr, P1) do { /* tracepoint name: omrshr.1197 */ \
	if ((unsigned char) omrshr_UtActive[1197] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1197u << 8) | omrshr_UtActive[1197]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_ExitStaleClasspath(thr, P1)   /* tracepoint name: omrshr.1197 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClass_ExitStaleClasspath(thr) do { /* tracepoint name: omrshr.1198 */ \
	if ((unsigned char) omrshr_UtActive[1198] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1198u << 8) | omrshr_UtActive[1198]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClass_ExitStaleClasspath(thr)   /* tracepoint name: omrshr.1198 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1199 */ \
	if ((unsigned char) omrshr_UtActive[1199] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1199u << 8) | omrshr_UtActive[1199]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.1199 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_ExitNoop(thr) do { /* tracepoint name: omrshr.1200 */ \
	if ((unsigned char) omrshr_UtActive[1200] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1200u << 8) | omrshr_UtActive[1200]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_ExitNoop(thr)   /* tracepoint name: omrshr.1200 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_FlagsEvent(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1201 */ \
	if ((unsigned char) omrshr_UtActive[1201] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1201u << 8) | omrshr_UtActive[1201]), "\6\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_FlagsEvent(thr, P1, P2, P3)   /* tracepoint name: omrshr.1201 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_Exit(thr) do { /* tracepoint name: omrshr.1202 */ \
	if ((unsigned char) omrshr_UtActive[1202] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1202u << 8) | omrshr_UtActive[1202]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_notifyClasspathEntryStateChange_Exit(thr)   /* tracepoint name: omrshr.1202 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit6(thr) do { /* tracepoint name: omrshr.1203 */ \
	if ((unsigned char) omrshr_UtActive[1203] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1203u << 8) | omrshr_UtActive[1203]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit6(thr)   /* tracepoint name: omrshr.1203 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_acquireHeaderLockFailed() do { /* tracepoint name: omrshr.1204 */ \
	if ((unsigned char) omrshr_UtActive[1204] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1204u << 8) | omrshr_UtActive[1204]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_acquireHeaderLockFailed()   /* tracepoint name: omrshr.1204 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectMetadataArea_Entry() do { /* tracepoint name: omrshr.1206 */ \
	if ((unsigned char) omrshr_UtActive[1206] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1206u << 8) | omrshr_UtActive[1206]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_protectMetadataArea_Entry()   /* tracepoint name: omrshr.1206 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectMetadataArea_Exit(P1) do { /* tracepoint name: omrshr.1207 */ \
	if ((unsigned char) omrshr_UtActive[1207] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1207u << 8) | omrshr_UtActive[1207]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectMetadataArea_Exit(P1)   /* tracepoint name: omrshr.1207 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectMetadataArea_Entry() do { /* tracepoint name: omrshr.1208 */ \
	if ((unsigned char) omrshr_UtActive[1208] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1208u << 8) | omrshr_UtActive[1208]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectMetadataArea_Entry()   /* tracepoint name: omrshr.1208 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectMetadataArea_Exit(P1) do { /* tracepoint name: omrshr.1209 */ \
	if ((unsigned char) omrshr_UtActive[1209] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1209u << 8) | omrshr_UtActive[1209]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectMetadataArea_Exit(P1)   /* tracepoint name: omrshr.1209 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getCacheCRC_Entry() do { /* tracepoint name: omrshr.1210 */ \
	if ((unsigned char) omrshr_UtActive[1210] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1210u << 8) | omrshr_UtActive[1210]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_getCacheCRC_Entry()   /* tracepoint name: omrshr.1210 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getCacheCRC_Exit(P1, P2) do { /* tracepoint name: omrshr.1211 */ \
	if ((unsigned char) omrshr_UtActive[1211] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1211u << 8) | omrshr_UtActive[1211]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_getCacheCRC_Exit(P1, P2)   /* tracepoint name: omrshr.1211 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit7(thr) do { /* tracepoint name: omrshr.1212 */ \
	if ((unsigned char) omrshr_UtActive[1212] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1212u << 8) | omrshr_UtActive[1212]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit7(thr)   /* tracepoint name: omrshr.1212 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_cacheTooSmall() do { /* tracepoint name: omrshr.1213 */ \
	if ((unsigned char) omrshr_UtActive[1213] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1213u << 8) | omrshr_UtActive[1213]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_cacheTooSmall()   /* tracepoint name: omrshr.1213 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_FutureGen() do { /* tracepoint name: omrshr.1214 */ \
	if ((unsigned char) omrshr_UtActive[1214] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1214u << 8) | omrshr_UtActive[1214]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_FutureGen()   /* tracepoint name: omrshr.1214 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getCachedUTFString_entry(thr, P1, P2) do { /* tracepoint name: omrshr.1215 */ \
	if ((unsigned char) omrshr_UtActive[1215] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1215u << 8) | omrshr_UtActive[1215]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_getCachedUTFString_entry(thr, P1, P2)   /* tracepoint name: omrshr.1215 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getCachedUTFString_exit1(thr) do { /* tracepoint name: omrshr.1216 */ \
	if ((unsigned char) omrshr_UtActive[1216] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1216u << 8) | omrshr_UtActive[1216]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_getCachedUTFString_exit1(thr)   /* tracepoint name: omrshr.1216 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getCachedUTFString_exit2(thr, P1) do { /* tracepoint name: omrshr.1217 */ \
	if ((unsigned char) omrshr_UtActive[1217] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1217u << 8) | omrshr_UtActive[1217]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_getCachedUTFString_exit2(thr, P1)   /* tracepoint name: omrshr.1217 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_badPadding() do { /* tracepoint name: omrshr.1218 */ \
	if ((unsigned char) omrshr_UtActive[1218] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1218u << 8) | omrshr_UtActive[1218]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_badPadding()   /* tracepoint name: omrshr.1218 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_OSCacheHeaderBad(P1) do { /* tracepoint name: omrshr.1219 */ \
	if ((unsigned char) omrshr_UtActive[1219] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1219u << 8) | omrshr_UtActive[1219]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_isCacheHeaderValid_OSCacheHeaderBad(P1)   /* tracepoint name: omrshr.1219 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_existsCachedClassForName_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1220 */ \
	if ((unsigned char) omrshr_UtActive[1220] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1220u << 8) | omrshr_UtActive[1220]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_existsCachedClassForName_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1220 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_existsCachedClassForName_Exit(thr, P1) do { /* tracepoint name: omrshr.1221 */ \
	if ((unsigned char) omrshr_UtActive[1221] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1221u << 8) | omrshr_UtActive[1221]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_existsCachedClassForName_Exit(thr, P1)   /* tracepoint name: omrshr.1221 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_quickRelocateInvariants_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1222 */ \
	if ((unsigned char) omrshr_UtActive[1222] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1222u << 8) | omrshr_UtActive[1222]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_quickRelocateInvariants_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1222 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_quickRelocateInvariants_Exit(thr) do { /* tracepoint name: omrshr.1223 */ \
	if ((unsigned char) omrshr_UtActive[1223] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1223u << 8) | omrshr_UtActive[1223]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_quickRelocateInvariants_Exit(thr)   /* tracepoint name: omrshr.1223 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNull4(thr) do { /* tracepoint name: omrshr.1224 */ \
	if ((unsigned char) omrshr_UtActive[1224] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1224u << 8) | omrshr_UtActive[1224]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNull4(thr)   /* tracepoint name: omrshr.1224 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitNoRelocData(thr) do { /* tracepoint name: omrshr.1225 */ \
	if ((unsigned char) omrshr_UtActive[1225] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1225u << 8) | omrshr_UtActive[1225]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitNoRelocData(thr)   /* tracepoint name: omrshr.1225 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getCacheAreaCRC_Entry(P1, P2) do { /* tracepoint name: omrshr.1226 */ \
	if ((unsigned char) omrshr_UtActive[1226] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1226u << 8) | omrshr_UtActive[1226]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_getCacheAreaCRC_Entry(P1, P2)   /* tracepoint name: omrshr.1226 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getCacheAreaCRC_Exit(P1, P2) do { /* tracepoint name: omrshr.1227 */ \
	if ((unsigned char) omrshr_UtActive[1227] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1227u << 8) | omrshr_UtActive[1227]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_getCacheAreaCRC_Exit(P1, P2)   /* tracepoint name: omrshr.1227 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Pre1(P1, P2, P3) do { /* tracepoint name: omrshr.1228 */ \
	if ((unsigned char) omrshr_UtActive[1228] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1228u << 8) | omrshr_UtActive[1228]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Pre1(P1, P2, P3)   /* tracepoint name: omrshr.1228 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Post1(P1, P2, P3) do { /* tracepoint name: omrshr.1229 */ \
	if ((unsigned char) omrshr_UtActive[1229] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1229u << 8) | omrshr_UtActive[1229]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Post1(P1, P2, P3)   /* tracepoint name: omrshr.1229 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Pre2(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1230 */ \
	if ((unsigned char) omrshr_UtActive[1230] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1230u << 8) | omrshr_UtActive[1230]), "\6\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Pre2(P1, P2, P3, P4)   /* tracepoint name: omrshr.1230 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Post2(P1, P2) do { /* tracepoint name: omrshr.1231 */ \
	if ((unsigned char) omrshr_UtActive[1231] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1231u << 8) | omrshr_UtActive[1231]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_Debug_Post2(P1, P2)   /* tracepoint name: omrshr.1231 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Pre1(P1, P2, P3) do { /* tracepoint name: omrshr.1232 */ \
	if ((unsigned char) omrshr_UtActive[1232] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1232u << 8) | omrshr_UtActive[1232]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Pre1(P1, P2, P3)   /* tracepoint name: omrshr.1232 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Post1(P1, P2, P3) do { /* tracepoint name: omrshr.1233 */ \
	if ((unsigned char) omrshr_UtActive[1233] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1233u << 8) | omrshr_UtActive[1233]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Post1(P1, P2, P3)   /* tracepoint name: omrshr.1233 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Pre2(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1234 */ \
	if ((unsigned char) omrshr_UtActive[1234] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1234u << 8) | omrshr_UtActive[1234]), "\6\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Pre2(P1, P2, P3, P4)   /* tracepoint name: omrshr.1234 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Post2(P1, P2) do { /* tracepoint name: omrshr.1235 */ \
	if ((unsigned char) omrshr_UtActive[1235] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1235u << 8) | omrshr_UtActive[1235]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_Debug_Post2(P1, P2)   /* tracepoint name: omrshr.1235 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_Entry() do { /* tracepoint name: omrshr.1236 */ \
	if ((unsigned char) omrshr_UtActive[1236] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1236u << 8) | omrshr_UtActive[1236]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_Entry()   /* tracepoint name: omrshr.1236 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_gettingLock(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1237 */ \
	if ((unsigned char) omrshr_UtActive[1237] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1237u << 8) | omrshr_UtActive[1237]), "\6\4\10\10", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_gettingLock(P1, P2, P3, P4)   /* tracepoint name: omrshr.1237 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_badLock() do { /* tracepoint name: omrshr.1238 */ \
	if ((unsigned char) omrshr_UtActive[1238] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1238u << 8) | omrshr_UtActive[1238]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_badLock()   /* tracepoint name: omrshr.1238 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_goodLock() do { /* tracepoint name: omrshr.1239 */ \
	if ((unsigned char) omrshr_UtActive[1239] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1239u << 8) | omrshr_UtActive[1239]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_goodLock()   /* tracepoint name: omrshr.1239 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_Exit(P1) do { /* tracepoint name: omrshr.1240 */ \
	if ((unsigned char) omrshr_UtActive[1240] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1240u << 8) | omrshr_UtActive[1240]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_tryAcquireHeaderWriteLock_Exit(P1)   /* tracepoint name: omrshr.1240 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_ExitErrorCreatingPath() do { /* tracepoint name: omrshr.1241 */ \
	if ((unsigned char) omrshr_UtActive[1241] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1241u << 8) | omrshr_UtActive[1241]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_ExitErrorCreatingPath()   /* tracepoint name: omrshr.1241 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_EventFailedStore(thr, P1) do { /* tracepoint name: omrshr.1242 */ \
	if ((unsigned char) omrshr_UtActive[1242] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1242u << 8) | omrshr_UtActive[1242]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_EventFailedStore(thr, P1)   /* tracepoint name: omrshr.1242 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startup_Exit5(thr, P1) do { /* tracepoint name: omrshr.1243 */ \
	if ((unsigned char) omrshr_UtActive[1243] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1243u << 8) | omrshr_UtActive[1243]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_startup_Exit5(thr, P1)   /* tracepoint name: omrshr.1243 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_resetCorruptState_Entry(thr) do { /* tracepoint name: omrshr.1244 */ \
	if ((unsigned char) omrshr_UtActive[1244] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1244u << 8) | omrshr_UtActive[1244]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_resetCorruptState_Entry(thr)   /* tracepoint name: omrshr.1244 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_resetCorruptState_Exit(thr) do { /* tracepoint name: omrshr.1245 */ \
	if ((unsigned char) omrshr_UtActive[1245] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1245u << 8) | omrshr_UtActive[1245]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_resetCorruptState_Exit(thr)   /* tracepoint name: omrshr.1245 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeROMClassResource_Exit5(thr) do { /* tracepoint name: omrshr.1256 */ \
	if ((unsigned char) omrshr_UtActive[1256] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1256u << 8) | omrshr_UtActive[1256]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeROMClassResource_Exit5(thr)   /* tracepoint name: omrshr.1256 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_Exit3(thr) do { /* tracepoint name: omrshr.1257 */ \
	if ((unsigned char) omrshr_UtActive[1257] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1257u << 8) | omrshr_UtActive[1257]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_Exit3(thr)   /* tracepoint name: omrshr.1257 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_shutDown_Entry(thr, P1) do { /* tracepoint name: omrshr.1258 */ \
	if ((unsigned char) omrshr_UtActive[1258] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1258u << 8) | omrshr_UtActive[1258]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_M_shutDown_Entry(thr, P1)   /* tracepoint name: omrshr.1258 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_shutDown_Exit(thr) do { /* tracepoint name: omrshr.1259 */ \
	if ((unsigned char) omrshr_UtActive[1259] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1259u << 8) | omrshr_UtActive[1259]), NULL);} \
	} while(0)
#else
#define Trc_SHR_M_shutDown_Exit(thr)   /* tracepoint name: omrshr.1259 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_detectedNetworkCache() do { /* tracepoint name: omrshr.1266 */ \
	if ((unsigned char) omrshr_UtActive[1266] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1266u << 8) | omrshr_UtActive[1266]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_detectedNetworkCache()   /* tracepoint name: omrshr.1266 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_destroy_Exit2(P1) do { /* tracepoint name: omrshr.1267 */ \
	if ((unsigned char) omrshr_UtActive[1267] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1267u << 8) | omrshr_UtActive[1267]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_destroy_Exit2(P1)   /* tracepoint name: omrshr.1267 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_deleteCache_Exit2(P1) do { /* tracepoint name: omrshr.1268 */ \
	if ((unsigned char) omrshr_UtActive[1268] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1268u << 8) | omrshr_UtActive[1268]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_deleteCache_Exit2(P1)   /* tracepoint name: omrshr.1268 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewSegment_Entry(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1269 */ \
	if ((unsigned char) omrshr_UtActive[1269] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1269u << 8) | omrshr_UtActive[1269]), "\4\6\6\6\6\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewSegment_Entry(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1269 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewSegment_Exit(thr, P1) do { /* tracepoint name: omrshr.1270 */ \
	if ((unsigned char) omrshr_UtActive[1270] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1270u << 8) | omrshr_UtActive[1270]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewSegment_Exit(thr, P1)   /* tracepoint name: omrshr.1270 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_hasTimestampChanged_ExitError(thr) do { /* tracepoint name: omrshr.1271 */ \
	if ((unsigned char) omrshr_UtActive[1271] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1271u << 8) | omrshr_UtActive[1271]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_hasTimestampChanged_ExitError(thr)   /* tracepoint name: omrshr.1271 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_Update_Exit3(thr) do { /* tracepoint name: omrshr.1272 */ \
	if ((unsigned char) omrshr_UtActive[1272] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1272u << 8) | omrshr_UtActive[1272]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_Update_Exit3(thr)   /* tracepoint name: omrshr.1272 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_Update_Exit4(thr) do { /* tracepoint name: omrshr.1273 */ \
	if ((unsigned char) omrshr_UtActive[1273] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1273u << 8) | omrshr_UtActive[1273]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_Update_Exit4(thr)   /* tracepoint name: omrshr.1273 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit4(thr) do { /* tracepoint name: omrshr.1274 */ \
	if ((unsigned char) omrshr_UtActive[1274] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1274u << 8) | omrshr_UtActive[1274]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_localValidate_CheckAndTimestampManually_Exit4(thr)   /* tracepoint name: omrshr.1274 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitError2(thr) do { /* tracepoint name: omrshr.1275 */ \
	if ((unsigned char) omrshr_UtActive[1275] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1275u << 8) | omrshr_UtActive[1275]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitError2(thr)   /* tracepoint name: omrshr.1275 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_ExitFailedAllocWriteMutexTLS(thr, P1) do { /* tracepoint name: omrshr.1276 */ \
	if ((unsigned char) omrshr_UtActive[1276] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1276u << 8) | omrshr_UtActive[1276]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_ExitFailedAllocWriteMutexTLS(thr, P1)   /* tracepoint name: omrshr.1276 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterWriteMutex_ExitError(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1277 */ \
	if ((unsigned char) omrshr_UtActive[1277] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1277u << 8) | omrshr_UtActive[1277]), "\6\4\377\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_enterWriteMutex_ExitError(P1, P2, P3, P4)   /* tracepoint name: omrshr.1277 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitError(thr, P1) do { /* tracepoint name: omrshr.1278 */ \
	if ((unsigned char) omrshr_UtActive[1278] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1278u << 8) | omrshr_UtActive[1278]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitError(thr, P1)   /* tracepoint name: omrshr.1278 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLockDeadlockMsg(P1) do { /* tracepoint name: omrshr.1279 */ \
	if ((unsigned char) omrshr_UtActive[1279] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1279u << 8) | omrshr_UtActive[1279]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLockDeadlockMsg(P1)   /* tracepoint name: omrshr.1279 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_errorTakingReadWriteMonitor() do { /* tracepoint name: omrshr.1281 */ \
	if ((unsigned char) omrshr_UtActive[1281] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1281u << 8) | omrshr_UtActive[1281]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_errorTakingReadWriteMonitor()   /* tracepoint name: omrshr.1281 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_acquireWriteLock_errorTakingWriteMonitor() do { /* tracepoint name: omrshr.1282 */ \
	if ((unsigned char) omrshr_UtActive[1282] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1282u << 8) | omrshr_UtActive[1282]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_acquireWriteLock_errorTakingWriteMonitor()   /* tracepoint name: omrshr.1282 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_failedPoolIntegrity(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1283 */ \
	if ((unsigned char) omrshr_UtActive[1283] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1283u << 8) | omrshr_UtActive[1283]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_INIT_failedPoolIntegrity(P1, P2, P3, P4)   /* tracepoint name: omrshr.1283 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_TrueTreeVerify(P1) do { /* tracepoint name: omrshr.1284 */ \
	if ((unsigned char) omrshr_UtActive[1284] != 0){ \
		if ((P1)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1284u << 8) | omrshr_UtActive[1284]), "\377\4\377", __FILE__, __LINE__, UT_STR(((P1)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1284 at %s:%d Trc_SHR_Assert_TrueTreeVerify%s\n", __FILE__, __LINE__, UT_STR(((P1)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_TrueTreeVerify(P1)   /* tracepoint name: omrshr.1284 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_ConfigNull(thr) do { /* tracepoint name: omrshr.1285 */ \
	if ((unsigned char) omrshr_UtActive[1285] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1285u << 8) | omrshr_UtActive[1285]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_ConfigNull(thr)   /* tracepoint name: omrshr.1285 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_BadRunTimeFlags_EventObsolete(thr, P1) do { /* tracepoint name: omrshr.1286 */ \
	if ((unsigned char) omrshr_UtActive[1286] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1286u << 8) | omrshr_UtActive[1286]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_BadRunTimeFlags_EventObsolete(thr, P1)   /* tracepoint name: omrshr.1286 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ManagerNotInStartedState_Exception(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1287 */ \
	if ((unsigned char) omrshr_UtActive[1287] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1287u << 8) | omrshr_UtActive[1287]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ManagerNotInStartedState_Exception(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1287 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ManagerNotInStartedState(thr) do { /* tracepoint name: omrshr.1288 */ \
	if ((unsigned char) omrshr_UtActive[1288] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1288u << 8) | omrshr_UtActive[1288]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ManagerNotInStartedState(thr)   /* tracepoint name: omrshr.1288 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitNotFound1_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1289 */ \
	if ((unsigned char) omrshr_UtActive[1289] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1289u << 8) | omrshr_UtActive[1289]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitNotFound1_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1289 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_TimestampMismatch_Event(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1290 */ \
	if ((unsigned char) omrshr_UtActive[1290] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1290u << 8) | omrshr_UtActive[1290]), "\10\10\12\377\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_TimestampMismatch_Event(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1290 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_TimestampChanged_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1291 */ \
	if ((unsigned char) omrshr_UtActive[1291] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1291u << 8) | omrshr_UtActive[1291]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_TimestampChanged_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1291 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_FoundShadowClass_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1292 */ \
	if ((unsigned char) omrshr_UtActive[1292] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1292u << 8) | omrshr_UtActive[1292]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_FoundShadowClass_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1292 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitSuccess_Event(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1293 */ \
	if ((unsigned char) omrshr_UtActive[1293] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1293u << 8) | omrshr_UtActive[1293]), "\6\4\6\12\377\4\4", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitSuccess_Event(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1293 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitFoundOrphan_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1294 */ \
	if ((unsigned char) omrshr_UtActive[1294] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1294u << 8) | omrshr_UtActive[1294]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitFoundOrphan_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1294 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitTValidateFoundStale_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1295 */ \
	if ((unsigned char) omrshr_UtActive[1295] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1295u << 8) | omrshr_UtActive[1295]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitTValidateFoundStale_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1295 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_NoROMClassManager_Exception(thr, P1, P2) do { /* tracepoint name: omrshr.1296 */ \
	if ((unsigned char) omrshr_UtActive[1296] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1296u << 8) | omrshr_UtActive[1296]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_NoROMClassManager_Exception(thr, P1, P2)   /* tracepoint name: omrshr.1296 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Exit_Found_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1297 */ \
	if ((unsigned char) omrshr_UtActive[1297] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1297u << 8) | omrshr_UtActive[1297]), "\377\6\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Exit_Found_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1297 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Exit_Null_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1298 */ \
	if ((unsigned char) omrshr_UtActive[1298] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1298u << 8) | omrshr_UtActive[1298]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Exit_Null_Event(thr, P1, P2)   /* tracepoint name: omrshr.1298 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitSameInCache_Exception(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1299 */ \
	if ((unsigned char) omrshr_UtActive[1299] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1299u << 8) | omrshr_UtActive[1299]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitSameInCache_Exception(thr, P1, P2, P3)   /* tracepoint name: omrshr.1299 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitNotSameInCache_Exception(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1300 */ \
	if ((unsigned char) omrshr_UtActive[1300] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1300u << 8) | omrshr_UtActive[1300]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitNotSameInCache_Exception(thr, P1, P2, P3)   /* tracepoint name: omrshr.1300 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitFailedBefore_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1301 */ \
	if ((unsigned char) omrshr_UtActive[1301] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1301u << 8) | omrshr_UtActive[1301]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitFailedBefore_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1301 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitStaleItem_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1302 */ \
	if ((unsigned char) omrshr_UtActive[1302] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1302u << 8) | omrshr_UtActive[1302]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitStaleItem_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1302 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitError2_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1303 */ \
	if ((unsigned char) omrshr_UtActive[1303] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1303u << 8) | omrshr_UtActive[1303]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitError2_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1303 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitError_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1304 */ \
	if ((unsigned char) omrshr_UtActive[1304] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1304u << 8) | omrshr_UtActive[1304]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitError_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1304 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ManagerInNotStartedState_Exception(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1305 */ \
	if ((unsigned char) omrshr_UtActive[1305] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1305u << 8) | omrshr_UtActive[1305]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ManagerInNotStartedState_Exception(thr, P1, P2, P3)   /* tracepoint name: omrshr.1305 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_ExitNotConfirmed_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1306 */ \
	if ((unsigned char) omrshr_UtActive[1306] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1306u << 8) | omrshr_UtActive[1306]), "\4\4\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_ExitNotConfirmed_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1306 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Event_AfterWriteHash_WithStats(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1309 */ \
	if ((unsigned char) omrshr_UtActive[1309] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1309u << 8) | omrshr_UtActive[1309]), "\6\4\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Event_AfterWriteHash_WithStats(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1309 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Event_WaitingWriteHash_WithTime(thr, P1, P2) do { /* tracepoint name: omrshr.1310 */ \
	if ((unsigned char) omrshr_UtActive[1310] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1310u << 8) | omrshr_UtActive[1310]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Event_WaitingWriteHash_WithTime(thr, P1, P2)   /* tracepoint name: omrshr.1310 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_newInstance_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1313 */ \
	if ((unsigned char) omrshr_UtActive[1313] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1313u << 8) | omrshr_UtActive[1313]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_newInstance_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1313 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_FoundOrphan(thr, P1) do { /* tracepoint name: omrshr.1315 */ \
	if ((unsigned char) omrshr_UtActive[1315] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1315u << 8) | omrshr_UtActive[1315]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_FoundOrphan(thr, P1)   /* tracepoint name: omrshr.1315 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitSuccess(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1316 */ \
	if ((unsigned char) omrshr_UtActive[1316] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1316u << 8) | omrshr_UtActive[1316]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitSuccess(thr, P1, P2, P3)   /* tracepoint name: omrshr.1316 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_locateROMClass_ExitFoundOrphan(thr) do { /* tracepoint name: omrshr.1317 */ \
	if ((unsigned char) omrshr_UtActive[1317] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1317u << 8) | omrshr_UtActive[1317]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_locateROMClass_ExitFoundOrphan(thr)   /* tracepoint name: omrshr.1317 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_validate_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1319 */ \
	if ((unsigned char) omrshr_UtActive[1319] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1319u << 8) | omrshr_UtActive[1319]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_validate_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.1319 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_CRASH6_commitUpdate_Exit(thr, P1) do { /* tracepoint name: omrshr.1321 */ \
	if ((unsigned char) omrshr_UtActive[1321] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1321u << 8) | omrshr_UtActive[1321]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_CRASH6_commitUpdate_Exit(thr, P1)   /* tracepoint name: omrshr.1321 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1322 */ \
	if ((unsigned char) omrshr_UtActive[1322] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1322u << 8) | omrshr_UtActive[1322]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1322 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Event_PeekForWriteHash(thr, P1) do { /* tracepoint name: omrshr.1325 */ \
	if ((unsigned char) omrshr_UtActive[1325] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1325u << 8) | omrshr_UtActive[1325]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Event_PeekForWriteHash(thr, P1)   /* tracepoint name: omrshr.1325 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Exit_Found(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1326 */ \
	if ((unsigned char) omrshr_UtActive[1326] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1326u << 8) | omrshr_UtActive[1326]), "\377\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Exit_Found(thr, P1, P2, P3)   /* tracepoint name: omrshr.1326 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Exit_NotFound(thr, P1) do { /* tracepoint name: omrshr.1327 */ \
	if ((unsigned char) omrshr_UtActive[1327] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1327u << 8) | omrshr_UtActive[1327]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Exit_NotFound(thr, P1)   /* tracepoint name: omrshr.1327 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_Exit_Null(thr) do { /* tracepoint name: omrshr.1328 */ \
	if ((unsigned char) omrshr_UtActive[1328] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1328u << 8) | omrshr_UtActive[1328]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_Exit_Null(thr)   /* tracepoint name: omrshr.1328 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localHashTableCreate_Entry(thr, P1) do { /* tracepoint name: omrshr.1335 */ \
	if ((unsigned char) omrshr_UtActive[1335] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1335u << 8) | omrshr_UtActive[1335]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localHashTableCreate_Entry(thr, P1)   /* tracepoint name: omrshr.1335 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_localHashTableCreate_Exit(thr, P1) do { /* tracepoint name: omrshr.1336 */ \
	if ((unsigned char) omrshr_UtActive[1336] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1336u << 8) | omrshr_UtActive[1336]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CMI_localHashTableCreate_Exit(thr, P1)   /* tracepoint name: omrshr.1336 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CPI_initialize_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1338 */ \
	if ((unsigned char) omrshr_UtActive[1338] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1338u << 8) | omrshr_UtActive[1338]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CPI_initialize_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1338 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_BadRunTimeFlags_Event(thr, P1) do { /* tracepoint name: omrshr.1346 */ \
	if ((unsigned char) omrshr_UtActive[1346] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1346u << 8) | omrshr_UtActive[1346]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_BadRunTimeFlags_Event(thr, P1)   /* tracepoint name: omrshr.1346 */
#endif

#if UT_TRACE_OVERHEAD >= 9
#define Trc_SHR_BDMI_primeHashtables_addingHint(thr, P1, P2) do { /* tracepoint name: omrshr.1349 */ \
	if ((unsigned char) omrshr_UtActive[1349] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1349u << 8) | omrshr_UtActive[1349]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_BDMI_primeHashtables_addingHint(thr, P1, P2)   /* tracepoint name: omrshr.1349 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1350 */ \
	if ((unsigned char) omrshr_UtActive[1350] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1350u << 8) | omrshr_UtActive[1350]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_BDMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1350 */
#endif

#if UT_TRACE_OVERHEAD >= 9
#define Trc_SHR_CMI_primeHashtables_addingHint(thr, P1, P2) do { /* tracepoint name: omrshr.1351 */ \
	if ((unsigned char) omrshr_UtActive[1351] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1351u << 8) | omrshr_UtActive[1351]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CMI_primeHashtables_addingHint(thr, P1, P2)   /* tracepoint name: omrshr.1351 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1352 */ \
	if ((unsigned char) omrshr_UtActive[1352] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1352u << 8) | omrshr_UtActive[1352]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1352 */
#endif

#if UT_TRACE_OVERHEAD >= 9
#define Trc_SHR_RMI_primeHashtables_addingHint(thr, P1, P2) do { /* tracepoint name: omrshr.1353 */ \
	if ((unsigned char) omrshr_UtActive[1353] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1353u << 8) | omrshr_UtActive[1353]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_primeHashtables_addingHint(thr, P1, P2)   /* tracepoint name: omrshr.1353 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1354 */ \
	if ((unsigned char) omrshr_UtActive[1354] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1354u << 8) | omrshr_UtActive[1354]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1354 */
#endif

#if UT_TRACE_OVERHEAD >= 9
#define Trc_SHR_RRM_primeHashtables_addingHint(thr, P1, P2) do { /* tracepoint name: omrshr.1355 */ \
	if ((unsigned char) omrshr_UtActive[1355] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1355u << 8) | omrshr_UtActive[1355]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RRM_primeHashtables_addingHint(thr, P1, P2)   /* tracepoint name: omrshr.1355 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_primeHashtables_failedToPrimeHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1356 */ \
	if ((unsigned char) omrshr_UtActive[1356] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1356u << 8) | omrshr_UtActive[1356]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RRM_primeHashtables_failedToPrimeHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1356 */
#endif

#if UT_TRACE_OVERHEAD >= 9
#define Trc_SHR_SMI_primeHashtables_addingHint(thr, P1, P2) do { /* tracepoint name: omrshr.1357 */ \
	if ((unsigned char) omrshr_UtActive[1357] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1357u << 8) | omrshr_UtActive[1357]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_SMI_primeHashtables_addingHint(thr, P1, P2)   /* tracepoint name: omrshr.1357 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_SMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1358 */ \
	if ((unsigned char) omrshr_UtActive[1358] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1358u << 8) | omrshr_UtActive[1358]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_SMI_primeHashtables_failedToPrimeHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1358 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit8(thr) do { /* tracepoint name: omrshr.1359 */ \
	if ((unsigned char) omrshr_UtActive[1359] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1359u << 8) | omrshr_UtActive[1359]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit8(thr)   /* tracepoint name: omrshr.1359 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewCachelet_Entry(thr) do { /* tracepoint name: omrshr.1360 */ \
	if ((unsigned char) omrshr_UtActive[1360] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1360u << 8) | omrshr_UtActive[1360]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewCachelet_Entry(thr)   /* tracepoint name: omrshr.1360 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewCachelet_Exit(thr, P1) do { /* tracepoint name: omrshr.1361 */ \
	if ((unsigned char) omrshr_UtActive[1361] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1361u << 8) | omrshr_UtActive[1361]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewCachelet_Exit(thr, P1)   /* tracepoint name: omrshr.1361 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewChainedCache_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1362 */ \
	if ((unsigned char) omrshr_UtActive[1362] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1362u << 8) | omrshr_UtActive[1362]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewChainedCache_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1362 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_createNewChainedCache_Exit(thr, P1) do { /* tracepoint name: omrshr.1363 */ \
	if ((unsigned char) omrshr_UtActive[1363] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1363u << 8) | omrshr_UtActive[1363]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_createNewChainedCache_Exit(thr, P1)   /* tracepoint name: omrshr.1363 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_classpathNotInNewSupercache(thr) do { /* tracepoint name: omrshr.1364 */ \
	if ((unsigned char) omrshr_UtActive[1364] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1364u << 8) | omrshr_UtActive[1364]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_classpathNotInNewSupercache(thr)   /* tracepoint name: omrshr.1364 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_writeROMClassToCache_failedToReStoreClasspath(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1365 */ \
	if ((unsigned char) omrshr_UtActive[1365] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1365u << 8) | omrshr_UtActive[1365]), "\6\4\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_writeROMClassToCache_failedToReStoreClasspath(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1365 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addROMClassToCache_ExitFull(thr) do { /* tracepoint name: omrshr.1366 */ \
	if ((unsigned char) omrshr_UtActive[1366] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1366u << 8) | omrshr_UtActive[1366]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addROMClassToCache_ExitFull(thr)   /* tracepoint name: omrshr.1366 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_compareROMClasses_NoCachelet(thr, P1) do { /* tracepoint name: omrshr.1367 */ \
	if ((unsigned char) omrshr_UtActive[1367] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1367u << 8) | omrshr_UtActive[1367]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_RMI_compareROMClasses_NoCachelet(thr, P1)   /* tracepoint name: omrshr.1367 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookSerializeSharedCache_entry() do { /* tracepoint name: omrshr.1368 */ \
	if ((unsigned char) omrshr_UtActive[1368] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1368u << 8) | omrshr_UtActive[1368]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookSerializeSharedCache_entry()   /* tracepoint name: omrshr.1368 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookSerializeSharedCache_exit() do { /* tracepoint name: omrshr.1369 */ \
	if ((unsigned char) omrshr_UtActive[1369] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1369u << 8) | omrshr_UtActive[1369]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookSerializeSharedCache_exit()   /* tracepoint name: omrshr.1369 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_Entry(P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1370 */ \
	if ((unsigned char) omrshr_UtActive[1370] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1370u << 8) | omrshr_UtActive[1370]), "\377\377\6\6\6\6\4", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_Entry(P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1370 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_commonStartupFailure() do { /* tracepoint name: omrshr.1371 */ \
	if ((unsigned char) omrshr_UtActive[1371] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1371u << 8) | omrshr_UtActive[1371]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_commonStartupFailure()   /* tracepoint name: omrshr.1371 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_commonStartupSuccess() do { /* tracepoint name: omrshr.1372 */ \
	if ((unsigned char) omrshr_UtActive[1372] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1372u << 8) | omrshr_UtActive[1372]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_commonStartupSuccess()   /* tracepoint name: omrshr.1372 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_detectedNetworkCache() do { /* tracepoint name: omrshr.1373 */ \
	if ((unsigned char) omrshr_UtActive[1373] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1373u << 8) | omrshr_UtActive[1373]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_detectedNetworkCache()   /* tracepoint name: omrshr.1373 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_badfileopen(P1) do { /* tracepoint name: omrshr.1374 */ \
	if ((unsigned char) omrshr_UtActive[1374] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1374u << 8) | omrshr_UtActive[1374]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_badfileopen(P1)   /* tracepoint name: omrshr.1374 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_goodfileopen(P1, P2) do { /* tracepoint name: omrshr.1375 */ \
	if ((unsigned char) omrshr_UtActive[1375] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1375u << 8) | omrshr_UtActive[1375]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_goodfileopen(P1, P2)   /* tracepoint name: omrshr.1375 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_failed_mutex_init(P1) do { /* tracepoint name: omrshr.1376 */ \
	if ((unsigned char) omrshr_UtActive[1376] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1376u << 8) | omrshr_UtActive[1376]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_failed_mutex_init(P1)   /* tracepoint name: omrshr.1376 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_initialized_mutexes() do { /* tracepoint name: omrshr.1377 */ \
	if ((unsigned char) omrshr_UtActive[1377] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1377u << 8) | omrshr_UtActive[1377]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_initialized_mutexes()   /* tracepoint name: omrshr.1377 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_badAcquireHeaderWriteLock() do { /* tracepoint name: omrshr.1378 */ \
	if ((unsigned char) omrshr_UtActive[1378] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1378u << 8) | omrshr_UtActive[1378]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_badAcquireHeaderWriteLock()   /* tracepoint name: omrshr.1378 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_goodAcquireHeaderWriteLock() do { /* tracepoint name: omrshr.1379 */ \
	if ((unsigned char) omrshr_UtActive[1379] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1379u << 8) | omrshr_UtActive[1379]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_goodAcquireHeaderWriteLock()   /* tracepoint name: omrshr.1379 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_cacheNotInUse() do { /* tracepoint name: omrshr.1380 */ \
	if ((unsigned char) omrshr_UtActive[1380] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1380u << 8) | omrshr_UtActive[1380]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_cacheNotInUse()   /* tracepoint name: omrshr.1380 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_cacheInUse() do { /* tracepoint name: omrshr.1381 */ \
	if ((unsigned char) omrshr_UtActive[1381] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1381u << 8) | omrshr_UtActive[1381]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_cacheInUse()   /* tracepoint name: omrshr.1381 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_fileOpened() do { /* tracepoint name: omrshr.1382 */ \
	if ((unsigned char) omrshr_UtActive[1382] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1382u << 8) | omrshr_UtActive[1382]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_fileOpened()   /* tracepoint name: omrshr.1382 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_cacheTooSmall() do { /* tracepoint name: omrshr.1383 */ \
	if ((unsigned char) omrshr_UtActive[1383] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1383u << 8) | omrshr_UtActive[1383]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_cacheTooSmall()   /* tracepoint name: omrshr.1383 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_badReleaseAttachReadLock() do { /* tracepoint name: omrshr.1384 */ \
	if ((unsigned char) omrshr_UtActive[1384] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1384u << 8) | omrshr_UtActive[1384]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_badReleaseAttachReadLock()   /* tracepoint name: omrshr.1384 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_goodReleaseAttachReadLock() do { /* tracepoint name: omrshr.1385 */ \
	if ((unsigned char) omrshr_UtActive[1385] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1385u << 8) | omrshr_UtActive[1385]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_goodReleaseAttachReadLock()   /* tracepoint name: omrshr.1385 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_badReleaseHeaderWriteLock() do { /* tracepoint name: omrshr.1386 */ \
	if ((unsigned char) omrshr_UtActive[1386] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1386u << 8) | omrshr_UtActive[1386]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_badReleaseHeaderWriteLock()   /* tracepoint name: omrshr.1386 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_goodReleaseHeaderWriteLock() do { /* tracepoint name: omrshr.1387 */ \
	if ((unsigned char) omrshr_UtActive[1387] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1387u << 8) | omrshr_UtActive[1387]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_goodReleaseHeaderWriteLock()   /* tracepoint name: omrshr.1387 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_closefilefailed() do { /* tracepoint name: omrshr.1388 */ \
	if ((unsigned char) omrshr_UtActive[1388] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1388u << 8) | omrshr_UtActive[1388]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_closefilefailed()   /* tracepoint name: omrshr.1388 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_cacheNotInitialized() do { /* tracepoint name: omrshr.1389 */ \
	if ((unsigned char) omrshr_UtActive[1389] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1389u << 8) | omrshr_UtActive[1389]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_cacheNotInitialized()   /* tracepoint name: omrshr.1389 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_allocation_failed(P1) do { /* tracepoint name: omrshr.1390 */ \
	if ((unsigned char) omrshr_UtActive[1390] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1390u << 8) | omrshr_UtActive[1390]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_allocation_failed(P1)   /* tracepoint name: omrshr.1390 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_initialized() do { /* tracepoint name: omrshr.1392 */ \
	if ((unsigned char) omrshr_UtActive[1392] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1392u << 8) | omrshr_UtActive[1392]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_initialized()   /* tracepoint name: omrshr.1392 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_Exit() do { /* tracepoint name: omrshr.1393 */ \
	if ((unsigned char) omrshr_UtActive[1393] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1393u << 8) | omrshr_UtActive[1393]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_Exit()   /* tracepoint name: omrshr.1393 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_attach_corruptCacheHeader() do { /* tracepoint name: omrshr.1395 */ \
	if ((unsigned char) omrshr_UtActive[1395] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1395u << 8) | omrshr_UtActive[1395]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_attach_corruptCacheHeader()   /* tracepoint name: omrshr.1395 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_attach_differentBuildID() do { /* tracepoint name: omrshr.1396 */ \
	if ((unsigned char) omrshr_UtActive[1396] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1396u << 8) | omrshr_UtActive[1396]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_attach_differentBuildID()   /* tracepoint name: omrshr.1396 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_attach_invalidCacheHeader() do { /* tracepoint name: omrshr.1397 */ \
	if ((unsigned char) omrshr_UtActive[1397] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1397u << 8) | omrshr_UtActive[1397]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_attach_invalidCacheHeader()   /* tracepoint name: omrshr.1397 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_attach_validCacheHeader() do { /* tracepoint name: omrshr.1398 */ \
	if ((unsigned char) omrshr_UtActive[1398] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1398u << 8) | omrshr_UtActive[1398]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_attach_validCacheHeader()   /* tracepoint name: omrshr.1398 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startupHintCachelets_Entry(thr, P1) do { /* tracepoint name: omrshr.1399 */ \
	if ((unsigned char) omrshr_UtActive[1399] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1399u << 8) | omrshr_UtActive[1399]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_startupHintCachelets_Entry(thr, P1)   /* tracepoint name: omrshr.1399 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startupHintCachelets_Exit(thr, P1) do { /* tracepoint name: omrshr.1400 */ \
	if ((unsigned char) omrshr_UtActive[1400] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1400u << 8) | omrshr_UtActive[1400]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_M_startupHintCachelets_Exit(thr, P1)   /* tracepoint name: omrshr.1400 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startupHintCachelets_startingCacheletForHint(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1401 */ \
	if ((unsigned char) omrshr_UtActive[1401] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1401u << 8) | omrshr_UtActive[1401]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_M_startupHintCachelets_startingCacheletForHint(thr, P1, P2, P3)   /* tracepoint name: omrshr.1401 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startupHintCachelets_startupCacheletFailed(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1402 */ \
	if ((unsigned char) omrshr_UtActive[1402] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1402u << 8) | omrshr_UtActive[1402]), "\4\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_M_startupHintCachelets_startupCacheletFailed(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1402 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_M_startupHintCachelets_lockStartupMonitorFailed(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1403 */ \
	if ((unsigned char) omrshr_UtActive[1403] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1403u << 8) | omrshr_UtActive[1403]), "\4\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_M_startupHintCachelets_lockStartupMonitorFailed(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1403 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_rrmTableLookup_lockStartupMonitorFailed(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1404 */ \
	if ((unsigned char) omrshr_UtActive[1404] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1404u << 8) | omrshr_UtActive[1404]), "\4\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_RRM_rrmTableLookup_lockStartupMonitorFailed(thr, P1, P2, P3)   /* tracepoint name: omrshr.1404 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_newInstanceNested_allocStartupMonitorFailed(P1) do { /* tracepoint name: omrshr.1405 */ \
	if ((unsigned char) omrshr_UtActive[1405] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1405u << 8) | omrshr_UtActive[1405]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_newInstanceNested_allocStartupMonitorFailed(P1)   /* tracepoint name: omrshr.1405 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_initCachelet(thr, P1, P2) do { /* tracepoint name: omrshr.1406 */ \
	if ((unsigned char) omrshr_UtActive[1406] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1406u << 8) | omrshr_UtActive[1406]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_initCachelet(thr, P1, P2)   /* tracepoint name: omrshr.1406 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCache_initCacheletFailed(thr, P1) do { /* tracepoint name: omrshr.1407 */ \
	if ((unsigned char) omrshr_UtActive[1407] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1407u << 8) | omrshr_UtActive[1407]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_readCache_initCacheletFailed(thr, P1)   /* tracepoint name: omrshr.1407 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCacheletSegments_noSegments(thr, P1, P2) do { /* tracepoint name: omrshr.1408 */ \
	if ((unsigned char) omrshr_UtActive[1408] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1408u << 8) | omrshr_UtActive[1408]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_readCacheletSegments_noSegments(thr, P1, P2)   /* tracepoint name: omrshr.1408 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCacheletSegments_addedSegments(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1409 */ \
	if ((unsigned char) omrshr_UtActive[1409] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1409u << 8) | omrshr_UtActive[1409]), "\6\6\4\6\6\6\6", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_CM_readCacheletSegments_addedSegments(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1409 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCacheletSegments_addSegmentFailed(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.1410 */ \
	if ((unsigned char) omrshr_UtActive[1410] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1410u << 8) | omrshr_UtActive[1410]), "\6\6\4\6\6", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CM_readCacheletSegments_addSegmentFailed(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.1410 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMSegmentList_addFirstSegmentFailed(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1411 */ \
	if ((unsigned char) omrshr_UtActive[1411] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1411u << 8) | omrshr_UtActive[1411]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMSegmentList_addFirstSegmentFailed(thr, P1, P2, P3)   /* tracepoint name: omrshr.1411 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMSegmentList_addSegmentFailed(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1412 */ \
	if ((unsigned char) omrshr_UtActive[1412] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1412u << 8) | omrshr_UtActive[1412]), "\6\6\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMSegmentList_addSegmentFailed(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1412 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8) do { /* tracepoint name: omrshr.1413 */ \
	if ((unsigned char) omrshr_UtActive[1413] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1413u << 8) | omrshr_UtActive[1413]), "\4\12\377\4\4\4\4\4", P1, P2, P3, P4, P5, P6, P7, P8);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8)   /* tracepoint name: omrshr.1413 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_CPMan_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1414 */ \
	if ((unsigned char) omrshr_UtActive[1414] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1414u << 8) | omrshr_UtActive[1414]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_CPMan_Event(thr, P1, P2)   /* tracepoint name: omrshr.1414 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_CPMStale_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1415 */ \
	if ((unsigned char) omrshr_UtActive[1415] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1415u << 8) | omrshr_UtActive[1415]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_CPMStale_Event(thr, P1, P2)   /* tracepoint name: omrshr.1415 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_Retval_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1416 */ \
	if ((unsigned char) omrshr_UtActive[1416] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1416u << 8) | omrshr_UtActive[1416]), "\6\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_Retval_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1416 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_WillAllocOrphan_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1417 */ \
	if ((unsigned char) omrshr_UtActive[1417] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1417u << 8) | omrshr_UtActive[1417]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_WillAllocOrphan_Event(thr, P1, P2)   /* tracepoint name: omrshr.1417 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_WillROMClass_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1418 */ \
	if ((unsigned char) omrshr_UtActive[1418] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1418u << 8) | omrshr_UtActive[1418]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_WillROMClass_Event(thr, P1, P2)   /* tracepoint name: omrshr.1418 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_WillScpopedROMClass_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1419 */ \
	if ((unsigned char) omrshr_UtActive[1419] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1419u << 8) | omrshr_UtActive[1419]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_WillScpopedROMClass_Event(thr, P1, P2)   /* tracepoint name: omrshr.1419 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClassOnly_Exit(thr) do { /* tracepoint name: omrshr.1420 */ \
	if ((unsigned char) omrshr_UtActive[1420] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1420u << 8) | omrshr_UtActive[1420]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClassOnly_Exit(thr)   /* tracepoint name: omrshr.1420 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_Entry(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1421 */ \
	if ((unsigned char) omrshr_UtActive[1421] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1421u << 8) | omrshr_UtActive[1421]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_Entry(thr, P1, P2, P3)   /* tracepoint name: omrshr.1421 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_Flags_Event(thr) do { /* tracepoint name: omrshr.1422 */ \
	if ((unsigned char) omrshr_UtActive[1422] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1422u << 8) | omrshr_UtActive[1422]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_Flags_Event(thr)   /* tracepoint name: omrshr.1422 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_getCacheArea_Failed_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1423 */ \
	if ((unsigned char) omrshr_UtActive[1423] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1423u << 8) | omrshr_UtActive[1423]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_getCacheArea_Failed_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1423 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_Full_Event(thr) do { /* tracepoint name: omrshr.1424 */ \
	if ((unsigned char) omrshr_UtActive[1424] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1424u << 8) | omrshr_UtActive[1424]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_Full_Event(thr)   /* tracepoint name: omrshr.1424 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_Retval_Event(thr, P1) do { /* tracepoint name: omrshr.1425 */ \
	if ((unsigned char) omrshr_UtActive[1425] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1425u << 8) | omrshr_UtActive[1425]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_Retval_Event(thr, P1)   /* tracepoint name: omrshr.1425 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateFromCache_Exit(thr) do { /* tracepoint name: omrshr.1426 */ \
	if ((unsigned char) omrshr_UtActive[1426] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1426u << 8) | omrshr_UtActive[1426]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateFromCache_Exit(thr)   /* tracepoint name: omrshr.1426 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findNextROMClass_Entry(thr) do { /* tracepoint name: omrshr.1427 */ \
	if ((unsigned char) omrshr_UtActive[1427] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1427u << 8) | omrshr_UtActive[1427]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findNextROMClass_Entry(thr)   /* tracepoint name: omrshr.1427 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findNextROMClass_Retval_Event(thr, P1) do { /* tracepoint name: omrshr.1428 */ \
	if ((unsigned char) omrshr_UtActive[1428] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1428u << 8) | omrshr_UtActive[1428]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findNextROMClass_Retval_Event(thr, P1)   /* tracepoint name: omrshr.1428 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findNextROMClass_Exit(thr) do { /* tracepoint name: omrshr.1429 */ \
	if ((unsigned char) omrshr_UtActive[1429] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1429u << 8) | omrshr_UtActive[1429]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findNextROMClass_Exit(thr)   /* tracepoint name: omrshr.1429 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_Entry(thr) do { /* tracepoint name: omrshr.1430 */ \
	if ((unsigned char) omrshr_UtActive[1430] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1430u << 8) | omrshr_UtActive[1430]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_Entry(thr)   /* tracepoint name: omrshr.1430 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_NotStarted_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1431 */ \
	if ((unsigned char) omrshr_UtActive[1431] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1431u << 8) | omrshr_UtActive[1431]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_NotStarted_Event(thr, P1, P2)   /* tracepoint name: omrshr.1431 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_FirstElem_Event(thr) do { /* tracepoint name: omrshr.1432 */ \
	if ((unsigned char) omrshr_UtActive[1432] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1432u << 8) | omrshr_UtActive[1432]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_FirstElem_Event(thr)   /* tracepoint name: omrshr.1432 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_NextElem_Event(thr) do { /* tracepoint name: omrshr.1433 */ \
	if ((unsigned char) omrshr_UtActive[1433] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1433u << 8) | omrshr_UtActive[1433]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_NextElem_Event(thr)   /* tracepoint name: omrshr.1433 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_NoMore_Event(thr) do { /* tracepoint name: omrshr.1434 */ \
	if ((unsigned char) omrshr_UtActive[1434] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1434u << 8) | omrshr_UtActive[1434]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_NoMore_Event(thr)   /* tracepoint name: omrshr.1434 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_NoElems_Event(thr) do { /* tracepoint name: omrshr.1435 */ \
	if ((unsigned char) omrshr_UtActive[1435] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1435u << 8) | omrshr_UtActive[1435]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_NoElems_Event(thr)   /* tracepoint name: omrshr.1435 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_FoundOrphan_Event(thr) do { /* tracepoint name: omrshr.1436 */ \
	if ((unsigned char) omrshr_UtActive[1436] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1436u << 8) | omrshr_UtActive[1436]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_FoundOrphan_Event(thr)   /* tracepoint name: omrshr.1436 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_FoundClass_Event(thr) do { /* tracepoint name: omrshr.1437 */ \
	if ((unsigned char) omrshr_UtActive[1437] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1437u << 8) | omrshr_UtActive[1437]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_FoundClass_Event(thr)   /* tracepoint name: omrshr.1437 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_MatchPrev_Event(thr) do { /* tracepoint name: omrshr.1438 */ \
	if ((unsigned char) omrshr_UtActive[1438] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1438u << 8) | omrshr_UtActive[1438]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_MatchPrev_Event(thr)   /* tracepoint name: omrshr.1438 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RMI_findNextROMClass_Exit(thr) do { /* tracepoint name: omrshr.1439 */ \
	if ((unsigned char) omrshr_UtActive[1439] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1439u << 8) | omrshr_UtActive[1439]), NULL);} \
	} while(0)
#else
#define Trc_SHR_RMI_findNextROMClass_Exit(thr)   /* tracepoint name: omrshr.1439 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) do { /* tracepoint name: omrshr.1440 */ \
	if ((unsigned char) omrshr_UtActive[1440] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1440u << 8) | omrshr_UtActive[1440]), "\4\4\4\4\4\4\12\377\4\4", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10)   /* tracepoint name: omrshr.1440 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_NonNullPartition_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1441 */ \
	if ((unsigned char) omrshr_UtActive[1441] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1441u << 8) | omrshr_UtActive[1441]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_NonNullPartition_Event(thr, P1, P2)   /* tracepoint name: omrshr.1441 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_tobj_Event(thr) do { /* tracepoint name: omrshr.1442 */ \
	if ((unsigned char) omrshr_UtActive[1442] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1442u << 8) | omrshr_UtActive[1442]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_tobj_Event(thr)   /* tracepoint name: omrshr.1442 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_RCMNotStarted_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1443 */ \
	if ((unsigned char) omrshr_UtActive[1443] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1443u << 8) | omrshr_UtActive[1443]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_RCMNotStarted_Event(thr, P1, P2)   /* tracepoint name: omrshr.1443 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_CPIndex_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1444 */ \
	if ((unsigned char) omrshr_UtActive[1444] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1444u << 8) | omrshr_UtActive[1444]), "\4\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_CPIndex_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1444 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Loadtype_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1445 */ \
	if ((unsigned char) omrshr_UtActive[1445] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1445u << 8) | omrshr_UtActive[1445]), "\4\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Loadtype_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1445 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_NotInit_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1446 */ \
	if ((unsigned char) omrshr_UtActive[1446] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1446u << 8) | omrshr_UtActive[1446]), "\10\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_NotInit_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1446 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_DisallowNull_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1448 */ \
	if ((unsigned char) omrshr_UtActive[1448] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1448u << 8) | omrshr_UtActive[1448]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_DisallowNull_Event(thr, P1, P2)   /* tracepoint name: omrshr.1448 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_StoreFilt_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1449 */ \
	if ((unsigned char) omrshr_UtActive[1449] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1449u << 8) | omrshr_UtActive[1449]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_StoreFilt_Event(thr, P1, P2)   /* tracepoint name: omrshr.1449 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_SegMutex_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1450 */ \
	if ((unsigned char) omrshr_UtActive[1450] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1450u << 8) | omrshr_UtActive[1450]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_SegMutex_Event(thr, P1, P2)   /* tracepoint name: omrshr.1450 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_WriteLock_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1451 */ \
	if ((unsigned char) omrshr_UtActive[1451] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1451u << 8) | omrshr_UtActive[1451]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_WriteLock_Event(thr, P1, P2)   /* tracepoint name: omrshr.1451 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_CPIsStale_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1452 */ \
	if ((unsigned char) omrshr_UtActive[1452] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1452u << 8) | omrshr_UtActive[1452]), "\4\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_CPIsStale_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1452 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_updateCPInfo_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1453 */ \
	if ((unsigned char) omrshr_UtActive[1453] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1453u << 8) | omrshr_UtActive[1453]), "\4\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_updateCPInfo_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1453 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Exit(thr) do { /* tracepoint name: omrshr.1454 */ \
	if ((unsigned char) omrshr_UtActive[1454] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1454u << 8) | omrshr_UtActive[1454]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_Exit(thr)   /* tracepoint name: omrshr.1454 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_Entry(thr, P1) do { /* tracepoint name: omrshr.1455 */ \
	if ((unsigned char) omrshr_UtActive[1455] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1455u << 8) | omrshr_UtActive[1455]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_Entry(thr, P1)   /* tracepoint name: omrshr.1455 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_isOnlyStarted_Event(thr) do { /* tracepoint name: omrshr.1456 */ \
	if ((unsigned char) omrshr_UtActive[1456] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1456u << 8) | omrshr_UtActive[1456]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_isOnlyStarted_Event(thr)   /* tracepoint name: omrshr.1456 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NotStarted_Event(thr, P1) do { /* tracepoint name: omrshr.1457 */ \
	if ((unsigned char) omrshr_UtActive[1457] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1457u << 8) | omrshr_UtActive[1457]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NotStarted_Event(thr, P1)   /* tracepoint name: omrshr.1457 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitWriteMutex_Event(thr) do { /* tracepoint name: omrshr.1458 */ \
	if ((unsigned char) omrshr_UtActive[1458] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1458u << 8) | omrshr_UtActive[1458]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitWriteMutex_Event(thr)   /* tracepoint name: omrshr.1458 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitSTMutex_Event(thr) do { /* tracepoint name: omrshr.1459 */ \
	if ((unsigned char) omrshr_UtActive[1459] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1459u << 8) | omrshr_UtActive[1459]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitSTMutex_Event(thr)   /* tracepoint name: omrshr.1459 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitSegMutex_Event(thr) do { /* tracepoint name: omrshr.1460 */ \
	if ((unsigned char) omrshr_UtActive[1460] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1460u << 8) | omrshr_UtActive[1460]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_ExitSegMutex_Event(thr)   /* tracepoint name: omrshr.1460 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoWork_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1461 */ \
	if ((unsigned char) omrshr_UtActive[1461] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1461u << 8) | omrshr_UtActive[1461]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoWork_Event(thr, P1, P2)   /* tracepoint name: omrshr.1461 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_StoreModifed_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1462 */ \
	if ((unsigned char) omrshr_UtActive[1462] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1462u << 8) | omrshr_UtActive[1462]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_StoreModifed_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1462 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoNewMetaDataForModBytes_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1463 */ \
	if ((unsigned char) omrshr_UtActive[1463] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1463u << 8) | omrshr_UtActive[1463]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoNewMetaDataForModBytes_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1463 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoNewMetaDataNoCPInfo_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1464 */ \
	if ((unsigned char) omrshr_UtActive[1464] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1464u << 8) | omrshr_UtActive[1464]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_NoNewMetaDataNoCPInfo_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1464 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_StoredData_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1465 */ \
	if ((unsigned char) omrshr_UtActive[1465] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1465u << 8) | omrshr_UtActive[1465]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_StoredData_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1465 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_Exit(thr) do { /* tracepoint name: omrshr.1466 */ \
	if ((unsigned char) omrshr_UtActive[1466] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1466u << 8) | omrshr_UtActive[1466]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_stop_Exit(thr)   /* tracepoint name: omrshr.1466 */
#endif

#if UT_TRACE_OVERHEAD >= 3
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_Entry(thr) do { /* tracepoint name: omrshr.1467 */ \
	if ((unsigned char) omrshr_UtActive[1467] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1467u << 8) | omrshr_UtActive[1467]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_Entry(thr)   /* tracepoint name: omrshr.1467 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_NotStarted_Event(thr, P1) do { /* tracepoint name: omrshr.1468 */ \
	if ((unsigned char) omrshr_UtActive[1468] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1468u << 8) | omrshr_UtActive[1468]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_NotStarted_Event(thr, P1)   /* tracepoint name: omrshr.1468 */
#endif

#if UT_TRACE_OVERHEAD >= 3
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_Exit(thr) do { /* tracepoint name: omrshr.1469 */ \
	if ((unsigned char) omrshr_UtActive[1469] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1469u << 8) | omrshr_UtActive[1469]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_nextSharedClassForCompare_Exit(thr)   /* tracepoint name: omrshr.1469 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_Entry(thr) do { /* tracepoint name: omrshr.1482 */ \
	if ((unsigned char) omrshr_UtActive[1482] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1482u << 8) | omrshr_UtActive[1482]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_Entry(thr)   /* tracepoint name: omrshr.1482 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotStarted_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1483 */ \
	if ((unsigned char) omrshr_UtActive[1483] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1483u << 8) | omrshr_UtActive[1483]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotStarted_Event(thr, P1, P2)   /* tracepoint name: omrshr.1483 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_DblAlign_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1484 */ \
	if ((unsigned char) omrshr_UtActive[1484] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1484u << 8) | omrshr_UtActive[1484]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_DblAlign_Event(thr, P1, P2)   /* tracepoint name: omrshr.1484 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotCalled1_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1485 */ \
	if ((unsigned char) omrshr_UtActive[1485] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1485u << 8) | omrshr_UtActive[1485]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotCalled1_Event(thr, P1, P2)   /* tracepoint name: omrshr.1485 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotCalled2_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1486 */ \
	if ((unsigned char) omrshr_UtActive[1486] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1486u << 8) | omrshr_UtActive[1486]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_NotCalled2_Event(thr, P1, P2)   /* tracepoint name: omrshr.1486 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_Update_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1487 */ \
	if ((unsigned char) omrshr_UtActive[1487] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1487u << 8) | omrshr_UtActive[1487]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_Update_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1487 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_updateSharedClassSize_Exit(thr) do { /* tracepoint name: omrshr.1488 */ \
	if ((unsigned char) omrshr_UtActive[1488] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1488u << 8) | omrshr_UtActive[1488]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_updateSharedClassSize_Exit(thr)   /* tracepoint name: omrshr.1488 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_Entry(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1489 */ \
	if ((unsigned char) omrshr_UtActive[1489] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1489u << 8) | omrshr_UtActive[1489]), "\4\4\4\4\4\12\377", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_Entry(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1489 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_CacheIsReadonly_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1490 */ \
	if ((unsigned char) omrshr_UtActive[1490] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1490u << 8) | omrshr_UtActive[1490]), "\12\377\10", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_CacheIsReadonly_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1490 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_NotInCache_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1491 */ \
	if ((unsigned char) omrshr_UtActive[1491] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1491u << 8) | omrshr_UtActive[1491]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_NotInCache_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1491 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ModifiedByteCodes_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1492 */ \
	if ((unsigned char) omrshr_UtActive[1492] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1492u << 8) | omrshr_UtActive[1492]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ModifiedByteCodes_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1492 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_StartFailed_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1493 */ \
	if ((unsigned char) omrshr_UtActive[1493] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1493u << 8) | omrshr_UtActive[1493]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_StartFailed_Event(thr, P1, P2)   /* tracepoint name: omrshr.1493 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_StopFailed_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1494 */ \
	if ((unsigned char) omrshr_UtActive[1494] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1494u << 8) | omrshr_UtActive[1494]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_StopFailed_Event(thr, P1, P2)   /* tracepoint name: omrshr.1494 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitStore(thr, P1, P2) do { /* tracepoint name: omrshr.1495 */ \
	if ((unsigned char) omrshr_UtActive[1495] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1495u << 8) | omrshr_UtActive[1495]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitStore(thr, P1, P2)   /* tracepoint name: omrshr.1495 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitNoStore(thr, P1, P2) do { /* tracepoint name: omrshr.1496 */ \
	if ((unsigned char) omrshr_UtActive[1496] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1496u << 8) | omrshr_UtActive[1496]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitNoStore(thr, P1, P2)   /* tracepoint name: omrshr.1496 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitError(thr, P1, P2) do { /* tracepoint name: omrshr.1497 */ \
	if ((unsigned char) omrshr_UtActive[1497] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1497u << 8) | omrshr_UtActive[1497]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_jclUpdateROMClassMetaData_ExitError(thr, P1, P2)   /* tracepoint name: omrshr.1497 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markItemStaleCheckMutex_Entry(thr, P1) do { /* tracepoint name: omrshr.1498 */ \
	if ((unsigned char) omrshr_UtActive[1498] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1498u << 8) | omrshr_UtActive[1498]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_markItemStaleCheckMutex_Entry(thr, P1)   /* tracepoint name: omrshr.1498 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markItemStaleCheckMutex_Failed(thr, P1) do { /* tracepoint name: omrshr.1499 */ \
	if ((unsigned char) omrshr_UtActive[1499] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1499u << 8) | omrshr_UtActive[1499]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_markItemStaleCheckMutex_Failed(thr, P1)   /* tracepoint name: omrshr.1499 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_markItemStaleCheckMutex_Exit(thr, P1) do { /* tracepoint name: omrshr.1500 */ \
	if ((unsigned char) omrshr_UtActive[1500] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1500u << 8) | omrshr_UtActive[1500]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_markItemStaleCheckMutex_Exit(thr, P1)   /* tracepoint name: omrshr.1500 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClass_FailedMutex(thr, P1, P2) do { /* tracepoint name: omrshr.1501 */ \
	if ((unsigned char) omrshr_UtActive[1501] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1501u << 8) | omrshr_UtActive[1501]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClass_FailedMutex(thr, P1, P2)   /* tracepoint name: omrshr.1501 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_ExitFailedMutex(thr, P1) do { /* tracepoint name: omrshr.1503 */ \
	if ((unsigned char) omrshr_UtActive[1503] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1503u << 8) | omrshr_UtActive[1503]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_ExitFailedMutex(thr, P1)   /* tracepoint name: omrshr.1503 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getCachedUTFString_FailedMutex(thr, P1, P2) do { /* tracepoint name: omrshr.1504 */ \
	if ((unsigned char) omrshr_UtActive[1504] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1504u << 8) | omrshr_UtActive[1504]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_getCachedUTFString_FailedMutex(thr, P1, P2)   /* tracepoint name: omrshr.1504 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findSharedData_ExitFailedMutex(thr, P1, P2) do { /* tracepoint name: omrshr.1505 */ \
	if ((unsigned char) omrshr_UtActive[1505] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1505u << 8) | omrshr_UtActive[1505]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findSharedData_ExitFailedMutex(thr, P1, P2)   /* tracepoint name: omrshr.1505 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_createClasspath(thr, P1, P2) do { /* tracepoint name: omrshr.1506 */ \
	if ((unsigned char) omrshr_UtActive[1506] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1506u << 8) | omrshr_UtActive[1506]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_createClasspath(thr, P1, P2)   /* tracepoint name: omrshr.1506 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event1(thr, P1, P2) do { /* tracepoint name: omrshr.1507 */ \
	if ((unsigned char) omrshr_UtActive[1507] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1507u << 8) | omrshr_UtActive[1507]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event1(thr, P1, P2)   /* tracepoint name: omrshr.1507 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event2(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.1508 */ \
	if ((unsigned char) omrshr_UtActive[1508] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1508u << 8) | omrshr_UtActive[1508]), "\4\10\6\4\4", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event2(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.1508 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event3(thr, P1, P2) do { /* tracepoint name: omrshr.1509 */ \
	if ((unsigned char) omrshr_UtActive[1509] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1509u << 8) | omrshr_UtActive[1509]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookStoreSharedClass_failed_Event3(thr, P1, P2)   /* tracepoint name: omrshr.1509 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8) do { /* tracepoint name: omrshr.1510 */ \
	if ((unsigned char) omrshr_UtActive[1510] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1510u << 8) | omrshr_UtActive[1510]), "\4\4\4\4\4\4\12\377", P1, P2, P3, P4, P5, P6, P7, P8);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_Entry(thr, P1, P2, P3, P4, P5, P6, P7, P8)   /* tracepoint name: omrshr.1510 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_Event_SetMaxTime(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1511 */ \
	if ((unsigned char) omrshr_UtActive[1511] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1511u << 8) | omrshr_UtActive[1511]), "\377\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_Event_SetMaxTime(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1511 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_StoreFail_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1512 */ \
	if ((unsigned char) omrshr_UtActive[1512] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1512u << 8) | omrshr_UtActive[1512]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_StoreFail_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1512 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_NothingStored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1513 */ \
	if ((unsigned char) omrshr_UtActive[1513] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1513u << 8) | omrshr_UtActive[1513]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_NothingStored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1513 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_Stored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1514 */ \
	if ((unsigned char) omrshr_UtActive[1514] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1514u << 8) | omrshr_UtActive[1514]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_Stored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1514 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_Error_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1515 */ \
	if ((unsigned char) omrshr_UtActive[1515] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1515u << 8) | omrshr_UtActive[1515]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_Error_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1515 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitROMClass_Exit(thr) do { /* tracepoint name: omrshr.1516 */ \
	if ((unsigned char) omrshr_UtActive[1516] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1516u << 8) | omrshr_UtActive[1516]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_commitROMClass_Exit(thr)   /* tracepoint name: omrshr.1516 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_Entry(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.1517 */ \
	if ((unsigned char) omrshr_UtActive[1517] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1517u << 8) | omrshr_UtActive[1517]), "\4\4\4\12\377", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_Entry(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.1517 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_Event_SetMaxTime(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1518 */ \
	if ((unsigned char) omrshr_UtActive[1518] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1518u << 8) | omrshr_UtActive[1518]), "\377\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_Event_SetMaxTime(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1518 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_StoreFail_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1519 */ \
	if ((unsigned char) omrshr_UtActive[1519] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1519u << 8) | omrshr_UtActive[1519]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_StoreFail_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1519 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_NothingStored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1520 */ \
	if ((unsigned char) omrshr_UtActive[1520] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1520u << 8) | omrshr_UtActive[1520]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_NothingStored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1520 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_Stored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1521 */ \
	if ((unsigned char) omrshr_UtActive[1521] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1521u << 8) | omrshr_UtActive[1521]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_Stored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1521 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_Error_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1522 */ \
	if ((unsigned char) omrshr_UtActive[1522] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1522u << 8) | omrshr_UtActive[1522]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_Error_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1522 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitOrphanROMClass_Exit(thr) do { /* tracepoint name: omrshr.1523 */ \
	if ((unsigned char) omrshr_UtActive[1523] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1523u << 8) | omrshr_UtActive[1523]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_commitOrphanROMClass_Exit(thr)   /* tracepoint name: omrshr.1523 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Entry(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1524 */ \
	if ((unsigned char) omrshr_UtActive[1524] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1524u << 8) | omrshr_UtActive[1524]), "\4\4\4\4\4\12\377", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Entry(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1524 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_FoundDuplicate(thr, P1, P2) do { /* tracepoint name: omrshr.1525 */ \
	if ((unsigned char) omrshr_UtActive[1525] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1525u << 8) | omrshr_UtActive[1525]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_FoundDuplicate(thr, P1, P2)   /* tracepoint name: omrshr.1525 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Event_SetMaxTime(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1526 */ \
	if ((unsigned char) omrshr_UtActive[1526] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1526u << 8) | omrshr_UtActive[1526]), "\377\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Event_SetMaxTime(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1526 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_CPMan_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1527 */ \
	if ((unsigned char) omrshr_UtActive[1527] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1527u << 8) | omrshr_UtActive[1527]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_CPMan_Event(thr, P1, P2)   /* tracepoint name: omrshr.1527 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_CPMStale_Event(thr) do { /* tracepoint name: omrshr.1528 */ \
	if ((unsigned char) omrshr_UtActive[1528] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1528u << 8) | omrshr_UtActive[1528]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_CPMStale_Event(thr)   /* tracepoint name: omrshr.1528 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Area_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1529 */ \
	if ((unsigned char) omrshr_UtActive[1529] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1529u << 8) | omrshr_UtActive[1529]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Area_Event(thr, P1, P2)   /* tracepoint name: omrshr.1529 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Full_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1530 */ \
	if ((unsigned char) omrshr_UtActive[1530] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1530u << 8) | omrshr_UtActive[1530]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Full_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1530 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Existing_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1531 */ \
	if ((unsigned char) omrshr_UtActive[1531] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1531u << 8) | omrshr_UtActive[1531]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Existing_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1531 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_NothingStored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1532 */ \
	if ((unsigned char) omrshr_UtActive[1532] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1532u << 8) | omrshr_UtActive[1532]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_NothingStored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1532 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Stored_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1533 */ \
	if ((unsigned char) omrshr_UtActive[1533] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1533u << 8) | omrshr_UtActive[1533]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Stored_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1533 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Error_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1534 */ \
	if ((unsigned char) omrshr_UtActive[1534] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1534u << 8) | omrshr_UtActive[1534]), "\12\377\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Error_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1534 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Exit(thr) do { /* tracepoint name: omrshr.1535 */ \
	if ((unsigned char) omrshr_UtActive[1535] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1535u << 8) | omrshr_UtActive[1535]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Exit(thr)   /* tracepoint name: omrshr.1535 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getCachedUTFString_exit3(thr) do { /* tracepoint name: omrshr.1536 */ \
	if ((unsigned char) omrshr_UtActive[1536] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1536u << 8) | omrshr_UtActive[1536]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_getCachedUTFString_exit3(thr)   /* tracepoint name: omrshr.1536 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_Entry(thr) do { /* tracepoint name: omrshr.1537 */ \
	if ((unsigned char) omrshr_UtActive[1537] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1537u << 8) | omrshr_UtActive[1537]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_Entry(thr)   /* tracepoint name: omrshr.1537 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_tobj_Event(thr) do { /* tracepoint name: omrshr.1538 */ \
	if ((unsigned char) omrshr_UtActive[1538] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1538u << 8) | omrshr_UtActive[1538]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_tobj_Event(thr)   /* tracepoint name: omrshr.1538 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_NotInit_Event(thr, P1) do { /* tracepoint name: omrshr.1539 */ \
	if ((unsigned char) omrshr_UtActive[1539] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1539u << 8) | omrshr_UtActive[1539]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_NotInit_Event(thr, P1)   /* tracepoint name: omrshr.1539 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_DenyUpdates_Event(thr, P1) do { /* tracepoint name: omrshr.1540 */ \
	if ((unsigned char) omrshr_UtActive[1540] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1540u << 8) | omrshr_UtActive[1540]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_DenyUpdates_Event(thr, P1)   /* tracepoint name: omrshr.1540 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_STLock_Event(thr, P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.1541 */ \
	if ((unsigned char) omrshr_UtActive[1541] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1541u << 8) | omrshr_UtActive[1541]), "\10\4\4\4\4", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_STLock_Event(thr, P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.1541 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_NoStringTable(thr) do { /* tracepoint name: omrshr.1542 */ \
	if ((unsigned char) omrshr_UtActive[1542] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1542u << 8) | omrshr_UtActive[1542]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_NoStringTable(thr)   /* tracepoint name: omrshr.1542 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_Exit(thr) do { /* tracepoint name: omrshr.1543 */ \
	if ((unsigned char) omrshr_UtActive[1543] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1543u << 8) | omrshr_UtActive[1543]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_Exit(thr)   /* tracepoint name: omrshr.1543 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_Entry(thr, P1) do { /* tracepoint name: omrshr.1544 */ \
	if ((unsigned char) omrshr_UtActive[1544] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1544u << 8) | omrshr_UtActive[1544]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_Entry(thr, P1)   /* tracepoint name: omrshr.1544 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_NotStarted_Event(thr) do { /* tracepoint name: omrshr.1545 */ \
	if ((unsigned char) omrshr_UtActive[1545] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1545u << 8) | omrshr_UtActive[1545]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_NotStarted_Event(thr)   /* tracepoint name: omrshr.1545 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitSTMutex_Event(thr) do { /* tracepoint name: omrshr.1546 */ \
	if ((unsigned char) omrshr_UtActive[1546] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1546u << 8) | omrshr_UtActive[1546]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitSTMutex_Event(thr)   /* tracepoint name: omrshr.1546 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_Exit(thr) do { /* tracepoint name: omrshr.1547 */ \
	if ((unsigned char) omrshr_UtActive[1547] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1547u << 8) | omrshr_UtActive[1547]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_Exit(thr)   /* tracepoint name: omrshr.1547 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startClassTransactionEntry() do { /* tracepoint name: omrshr.1548 */ \
	if ((unsigned char) omrshr_UtActive[1548] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1548u << 8) | omrshr_UtActive[1548]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startClassTransactionEntry()   /* tracepoint name: omrshr.1548 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startClassTransaction_enterWriteMutex_Event() do { /* tracepoint name: omrshr.1549 */ \
	if ((unsigned char) omrshr_UtActive[1549] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1549u << 8) | omrshr_UtActive[1549]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startClassTransaction_enterWriteMutex_Event()   /* tracepoint name: omrshr.1549 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startClassTransaction_runEntryPointChecks_Event() do { /* tracepoint name: omrshr.1550 */ \
	if ((unsigned char) omrshr_UtActive[1550] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1550u << 8) | omrshr_UtActive[1550]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startClassTransaction_runEntryPointChecks_Event()   /* tracepoint name: omrshr.1550 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_startClassTransaction_Exit() do { /* tracepoint name: omrshr.1551 */ \
	if ((unsigned char) omrshr_UtActive[1551] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1551u << 8) | omrshr_UtActive[1551]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_startClassTransaction_Exit()   /* tracepoint name: omrshr.1551 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_Assert_mustHaveVMAccess(P1) do { /* tracepoint name: omrshr.1552 */ \
	if ((unsigned char) omrshr_UtActive[1552] != 0){ \
		if ((P1)->publicFlags & J9_PUBLIC_FLAGS_VM_ACCESS) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1552u << 8) | omrshr_UtActive[1552]), "\377\4\377", __FILE__, __LINE__, UT_STR(((P1)->publicFlags & J9_PUBLIC_FLAGS_VM_ACCESS))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1552 at %s:%d Trc_SHR_API_Assert_mustHaveVMAccess%s\n", __FILE__, __LINE__, UT_STR(((P1)->publicFlags & J9_PUBLIC_FLAGS_VM_ACCESS))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_API_Assert_mustHaveVMAccess(P1)   /* tracepoint name: omrshr.1552 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Assert_StringTableReset() do { /* tracepoint name: omrshr.1553 */ \
	if ((unsigned char) omrshr_UtActive[1553] != 0){ \
		if ((0)) { /* assertion satisfied */ } else { \
			if (omrshr_UtModuleInfo.intf != NULL) { \
				omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, (UT_SPECIAL_ASSERTION | (1553u << 8) | omrshr_UtActive[1553]), "\377\4\377", __FILE__, __LINE__, UT_STR(((0)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** omrshr.1553 at %s:%d Trc_SHR_Assert_StringTableReset%s\n", __FILE__, __LINE__, UT_STR(((0)))); \
			} \
		}} \
	} while(0)
#else
#define Trc_SHR_Assert_StringTableReset()   /* tracepoint name: omrshr.1553 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_enterWriteLockFailed() do { /* tracepoint name: omrshr.1554 */ \
	if ((unsigned char) omrshr_UtActive[1554] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1554u << 8) | omrshr_UtActive[1554]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_enterWriteLockFailed()   /* tracepoint name: omrshr.1554 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_enterReadWriteLockFailed() do { /* tracepoint name: omrshr.1555 */ \
	if ((unsigned char) omrshr_UtActive[1555] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1555u << 8) | omrshr_UtActive[1555]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_enterReadWriteLockFailed()   /* tracepoint name: omrshr.1555 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_EventRebuildCacheData2(thr, P1, P2) do { /* tracepoint name: omrshr.1556 */ \
	if ((unsigned char) omrshr_UtActive[1556] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1556u << 8) | omrshr_UtActive[1556]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_EventRebuildCacheData2(thr, P1, P2)   /* tracepoint name: omrshr.1556 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_EventRebuildLocalData2(thr, P1, P2) do { /* tracepoint name: omrshr.1557 */ \
	if ((unsigned char) omrshr_UtActive[1557] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1557u << 8) | omrshr_UtActive[1557]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_EventRebuildLocalData2(thr, P1, P2)   /* tracepoint name: omrshr.1557 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setInternCacheHeaderFields_ExitV2(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1558 */ \
	if ((unsigned char) omrshr_UtActive[1558] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1558u << 8) | omrshr_UtActive[1558]), "\6\6\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_setInternCacheHeaderFields_ExitV2(P1, P2, P3, P4)   /* tracepoint name: omrshr.1558 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_failedSimplePoolIntegrity(P1, P2) do { /* tracepoint name: omrshr.1559 */ \
	if ((unsigned char) omrshr_UtActive[1559] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1559u << 8) | omrshr_UtActive[1559]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_failedSimplePoolIntegrity(P1, P2)   /* tracepoint name: omrshr.1559 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_getValuesFromShcFilePrefix_Failed_Exit() do { /* tracepoint name: omrshr.1560 */ \
	if ((unsigned char) omrshr_UtActive[1560] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1560u << 8) | omrshr_UtActive[1560]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_getValuesFromShcFilePrefix_Failed_Exit()   /* tracepoint name: omrshr.1560 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_badModLevel_Exit(P1) do { /* tracepoint name: omrshr.1561 */ \
	if ((unsigned char) omrshr_UtActive[1561] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1561u << 8) | omrshr_UtActive[1561]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_badModLevel_Exit(P1)   /* tracepoint name: omrshr.1561 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_NewerJVMFile_Exit(P1) do { /* tracepoint name: omrshr.1562 */ \
	if ((unsigned char) omrshr_UtActive[1562] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1562u << 8) | omrshr_UtActive[1562]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_NewerJVMFile_Exit(P1)   /* tracepoint name: omrshr.1562 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_NotOk_Event(thr) do { /* tracepoint name: omrshr.1564 */ \
	if ((unsigned char) omrshr_UtActive[1564] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1564u << 8) | omrshr_UtActive[1564]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_NotOk_Event(thr)   /* tracepoint name: omrshr.1564 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_ReadOnly_Event(thr) do { /* tracepoint name: omrshr.1565 */ \
	if ((unsigned char) omrshr_UtActive[1565] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1565u << 8) | omrshr_UtActive[1565]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_ReadOnly_Event(thr)   /* tracepoint name: omrshr.1565 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_Full_Event(thr) do { /* tracepoint name: omrshr.1566 */ \
	if ((unsigned char) omrshr_UtActive[1566] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1566u << 8) | omrshr_UtActive[1566]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_Full_Event(thr)   /* tracepoint name: omrshr.1566 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_NotStarted_Event(thr) do { /* tracepoint name: omrshr.1567 */ \
	if ((unsigned char) omrshr_UtActive[1567] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1567u << 8) | omrshr_UtActive[1567]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_NotStarted_Event(thr)   /* tracepoint name: omrshr.1567 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_ZeroRomClassSize_Event(thr, P1, P2) do { /* tracepoint name: omrshr.1568 */ \
	if ((unsigned char) omrshr_UtActive[1568] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1568u << 8) | omrshr_UtActive[1568]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_ZeroRomClassSize_Event(thr, P1, P2)   /* tracepoint name: omrshr.1568 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_DblAlign_Event(thr) do { /* tracepoint name: omrshr.1571 */ \
	if ((unsigned char) omrshr_UtActive[1571] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1571u << 8) | omrshr_UtActive[1571]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_DblAlign_Event(thr)   /* tracepoint name: omrshr.1571 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_NoCacheMap_Event(thr) do { /* tracepoint name: omrshr.1572 */ \
	if ((unsigned char) omrshr_UtActive[1572] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1572u << 8) | omrshr_UtActive[1572]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_NoCacheMap_Event(thr)   /* tracepoint name: omrshr.1572 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_CalledTwice1_Event(thr) do { /* tracepoint name: omrshr.1573 */ \
	if ((unsigned char) omrshr_UtActive[1573] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1573u << 8) | omrshr_UtActive[1573]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_CalledTwice1_Event(thr)   /* tracepoint name: omrshr.1573 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_CalledTwice2_Event(thr) do { /* tracepoint name: omrshr.1574 */ \
	if ((unsigned char) omrshr_UtActive[1574] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1574u << 8) | omrshr_UtActive[1574]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_CalledTwice2_Event(thr)   /* tracepoint name: omrshr.1574 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_FailedToAllocRomclass_Event(thr) do { /* tracepoint name: omrshr.1575 */ \
	if ((unsigned char) omrshr_UtActive[1575] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1575u << 8) | omrshr_UtActive[1575]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_FailedToAllocRomclass_Event(thr)   /* tracepoint name: omrshr.1575 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_AllocRomclass_Event(thr, P1) do { /* tracepoint name: omrshr.1576 */ \
	if ((unsigned char) omrshr_UtActive[1576] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1576u << 8) | omrshr_UtActive[1576]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_AllocRomclass_Event(thr, P1)   /* tracepoint name: omrshr.1576 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_Exit(thr, P1) do { /* tracepoint name: omrshr.1577 */ \
	if ((unsigned char) omrshr_UtActive[1577] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1577u << 8) | omrshr_UtActive[1577]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_Exit(thr, P1)   /* tracepoint name: omrshr.1577 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_STLock_Event(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1578 */ \
	if ((unsigned char) omrshr_UtActive[1578] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1578u << 8) | omrshr_UtActive[1578]), "\10\4\4\4\4\12\377", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_STLock_Event(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1578 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_CreateDebugAreaSize(thr, P1) do { /* tracepoint name: omrshr.1579 */ \
	if ((unsigned char) omrshr_UtActive[1579] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1579u << 8) | omrshr_UtActive[1579]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_CreateDebugAreaSize(thr, P1)   /* tracepoint name: omrshr.1579 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Event_DebugDataInit(thr) do { /* tracepoint name: omrshr.1580 */ \
	if ((unsigned char) omrshr_UtActive[1580] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1580u << 8) | omrshr_UtActive[1580]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Event_DebugDataInit(thr)   /* tracepoint name: omrshr.1580 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_Init_Entry(thr, P1) do { /* tracepoint name: omrshr.1581 */ \
	if ((unsigned char) omrshr_UtActive[1581] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1581u << 8) | omrshr_UtActive[1581]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_Init_Entry(thr, P1)   /* tracepoint name: omrshr.1581 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_Init_Exit(thr, P1) do { /* tracepoint name: omrshr.1582 */ \
	if ((unsigned char) omrshr_UtActive[1582] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1582u << 8) | omrshr_UtActive[1582]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_Init_Exit(thr, P1)   /* tracepoint name: omrshr.1582 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_Entry(thr) do { /* tracepoint name: omrshr.1583 */ \
	if ((unsigned char) omrshr_UtActive[1583] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1583u << 8) | omrshr_UtActive[1583]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_Entry(thr)   /* tracepoint name: omrshr.1583 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_FreeSpaceSizeCorrupt(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1584 */ \
	if ((unsigned char) omrshr_UtActive[1584] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1584u << 8) | omrshr_UtActive[1584]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_FreeSpaceSizeCorrupt(thr, P1, P2, P3)   /* tracepoint name: omrshr.1584 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_AreaSizeCorrupt(thr, P1, P2) do { /* tracepoint name: omrshr.1585 */ \
	if ((unsigned char) omrshr_UtActive[1585] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1585u << 8) | omrshr_UtActive[1585]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_AreaSizeCorrupt(thr, P1, P2)   /* tracepoint name: omrshr.1585 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_FreeSpaceCorrupt(thr, P1, P2) do { /* tracepoint name: omrshr.1586 */ \
	if ((unsigned char) omrshr_UtActive[1586] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1586u << 8) | omrshr_UtActive[1586]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_FreeSpaceCorrupt(thr, P1, P2)   /* tracepoint name: omrshr.1586 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_LNTCorrupt(thr, P1, P2) do { /* tracepoint name: omrshr.1587 */ \
	if ((unsigned char) omrshr_UtActive[1587] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1587u << 8) | omrshr_UtActive[1587]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_LNTCorrupt(thr, P1, P2)   /* tracepoint name: omrshr.1587 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_LVTCorrupt(thr, P1, P2) do { /* tracepoint name: omrshr.1588 */ \
	if ((unsigned char) omrshr_UtActive[1588] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1588u << 8) | omrshr_UtActive[1588]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_LVTCorrupt(thr, P1, P2)   /* tracepoint name: omrshr.1588 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_BadSizesForCommitCorrupt(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1589 */ \
	if ((unsigned char) omrshr_UtActive[1589] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1589u << 8) | omrshr_UtActive[1589]), "\6\6\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_BadSizesForCommitCorrupt(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1589 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isOk_Exit(thr, P1) do { /* tracepoint name: omrshr.1590 */ \
	if ((unsigned char) omrshr_UtActive[1590] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1590u << 8) | omrshr_UtActive[1590]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isOk_Exit(thr, P1)   /* tracepoint name: omrshr.1590 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Enter(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1591 */ \
	if ((unsigned char) omrshr_UtActive[1591] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1591u << 8) | omrshr_UtActive[1591]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Enter(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1591 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_NotEnoughFreeSpace(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1592 */ \
	if ((unsigned char) omrshr_UtActive[1592] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1592u << 8) | omrshr_UtActive[1592]), "\12\377\10\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_NotEnoughFreeSpace(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1592 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_FailedToAllocLineNumberTable(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1593 */ \
	if ((unsigned char) omrshr_UtActive[1593] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1593u << 8) | omrshr_UtActive[1593]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_FailedToAllocLineNumberTable(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1593 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_FailedToAllocLocalVariableTable(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1594 */ \
	if ((unsigned char) omrshr_UtActive[1594] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1594u << 8) | omrshr_UtActive[1594]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Event_FailedToAllocLocalVariableTable(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1594 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Exit(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1595 */ \
	if ((unsigned char) omrshr_UtActive[1595] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1595u << 8) | omrshr_UtActive[1595]), "\12\377\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_allocateClassDebugData_Exit(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1595 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_rollbackClassDebugData_Enter(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1596 */ \
	if ((unsigned char) omrshr_UtActive[1596] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1596u << 8) | omrshr_UtActive[1596]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_rollbackClassDebugData_Enter(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1596 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_rollbackClassDebugData_Exit(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1597 */ \
	if ((unsigned char) omrshr_UtActive[1597] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1597u << 8) | omrshr_UtActive[1597]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_rollbackClassDebugData_Exit(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1597 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_Entry(P1) do { /* tracepoint name: omrshr.1598 */ \
	if ((unsigned char) omrshr_UtActive[1598] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1598u << 8) | omrshr_UtActive[1598]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_Entry(P1)   /* tracepoint name: omrshr.1598 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_TrueExit(P1, P2) do { /* tracepoint name: omrshr.1599 */ \
	if ((unsigned char) omrshr_UtActive[1599] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1599u << 8) | omrshr_UtActive[1599]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_TrueExit(P1, P2)   /* tracepoint name: omrshr.1599 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_FalseExit(P1, P2) do { /* tracepoint name: omrshr.1600 */ \
	if ((unsigned char) omrshr_UtActive[1600] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1600u << 8) | omrshr_UtActive[1600]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_isEnoughFreeSpace_FalseExit(P1, P2)   /* tracepoint name: omrshr.1600 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_Entry(P1) do { /* tracepoint name: omrshr.1601 */ \
	if ((unsigned char) omrshr_UtActive[1601] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1601u << 8) | omrshr_UtActive[1601]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_Entry(P1)   /* tracepoint name: omrshr.1601 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_NotOk_Event() do { /* tracepoint name: omrshr.1602 */ \
	if ((unsigned char) omrshr_UtActive[1602] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1602u << 8) | omrshr_UtActive[1602]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_NotOk_Event()   /* tracepoint name: omrshr.1602 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_Exit(P1) do { /* tracepoint name: omrshr.1603 */ \
	if ((unsigned char) omrshr_UtActive[1603] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1603u << 8) | omrshr_UtActive[1603]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLineNumberTable_Exit(P1)   /* tracepoint name: omrshr.1603 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_Entry(P1) do { /* tracepoint name: omrshr.1604 */ \
	if ((unsigned char) omrshr_UtActive[1604] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1604u << 8) | omrshr_UtActive[1604]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_Entry(P1)   /* tracepoint name: omrshr.1604 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_NotOk_Event() do { /* tracepoint name: omrshr.1605 */ \
	if ((unsigned char) omrshr_UtActive[1605] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1605u << 8) | omrshr_UtActive[1605]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_NotOk_Event()   /* tracepoint name: omrshr.1605 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_Exit(P1) do { /* tracepoint name: omrshr.1606 */ \
	if ((unsigned char) omrshr_UtActive[1606] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1606u << 8) | omrshr_UtActive[1606]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getNextLocalVariableTable_Exit(P1)   /* tracepoint name: omrshr.1606 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLineNumberTable_Entry(P1) do { /* tracepoint name: omrshr.1607 */ \
	if ((unsigned char) omrshr_UtActive[1607] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1607u << 8) | omrshr_UtActive[1607]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLineNumberTable_Entry(P1)   /* tracepoint name: omrshr.1607 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLineNumberTable_NotOk_Event() do { /* tracepoint name: omrshr.1608 */ \
	if ((unsigned char) omrshr_UtActive[1608] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1608u << 8) | omrshr_UtActive[1608]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLineNumberTable_NotOk_Event()   /* tracepoint name: omrshr.1608 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLineNumberTable_Exit(P1) do { /* tracepoint name: omrshr.1609 */ \
	if ((unsigned char) omrshr_UtActive[1609] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1609u << 8) | omrshr_UtActive[1609]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLineNumberTable_Exit(P1)   /* tracepoint name: omrshr.1609 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_Entry(P1) do { /* tracepoint name: omrshr.1610 */ \
	if ((unsigned char) omrshr_UtActive[1610] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1610u << 8) | omrshr_UtActive[1610]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_Entry(P1)   /* tracepoint name: omrshr.1610 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_NotOk_Event() do { /* tracepoint name: omrshr.1611 */ \
	if ((unsigned char) omrshr_UtActive[1611] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1611u << 8) | omrshr_UtActive[1611]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_NotOk_Event()   /* tracepoint name: omrshr.1611 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_Exit(P1) do { /* tracepoint name: omrshr.1612 */ \
	if ((unsigned char) omrshr_UtActive[1612] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1612u << 8) | omrshr_UtActive[1612]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitLocalVariableTable_Exit(P1)   /* tracepoint name: omrshr.1612 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitClassDebugData_Enter(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1613 */ \
	if ((unsigned char) omrshr_UtActive[1613] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1613u << 8) | omrshr_UtActive[1613]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitClassDebugData_Enter(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1613 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitClassDebugData_LineNumberTable_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1614 */ \
	if ((unsigned char) omrshr_UtActive[1614] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1614u << 8) | omrshr_UtActive[1614]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitClassDebugData_LineNumberTable_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1614 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitClassDebugData_LocalVariableTable_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1615 */ \
	if ((unsigned char) omrshr_UtActive[1615] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1615u << 8) | omrshr_UtActive[1615]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitClassDebugData_LocalVariableTable_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1615 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_NothingToCommit_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1616 */ \
	if ((unsigned char) omrshr_UtActive[1616] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1616u << 8) | omrshr_UtActive[1616]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_NothingToCommit_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1616 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_commitClassDebugData_Exit(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1617 */ \
	if ((unsigned char) omrshr_UtActive[1617] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1617u << 8) | omrshr_UtActive[1617]), "\12\377\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_commitClassDebugData_Exit(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1617 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getDebugDataSize_Entry() do { /* tracepoint name: omrshr.1618 */ \
	if ((unsigned char) omrshr_UtActive[1618] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1618u << 8) | omrshr_UtActive[1618]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getDebugDataSize_Entry()   /* tracepoint name: omrshr.1618 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getDebugDataSize_NotOk_Exit() do { /* tracepoint name: omrshr.1619 */ \
	if ((unsigned char) omrshr_UtActive[1619] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1619u << 8) | omrshr_UtActive[1619]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getDebugDataSize_NotOk_Exit()   /* tracepoint name: omrshr.1619 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getDebugDataSize_Exit(P1) do { /* tracepoint name: omrshr.1620 */ \
	if ((unsigned char) omrshr_UtActive[1620] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1620u << 8) | omrshr_UtActive[1620]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getDebugDataSize_Exit(P1)   /* tracepoint name: omrshr.1620 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_Entry() do { /* tracepoint name: omrshr.1621 */ \
	if ((unsigned char) omrshr_UtActive[1621] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1621u << 8) | omrshr_UtActive[1621]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_Entry()   /* tracepoint name: omrshr.1621 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_NotOk_Exit() do { /* tracepoint name: omrshr.1622 */ \
	if ((unsigned char) omrshr_UtActive[1622] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1622u << 8) | omrshr_UtActive[1622]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_NotOk_Exit()   /* tracepoint name: omrshr.1622 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_Exit(P1) do { /* tracepoint name: omrshr.1623 */ \
	if ((unsigned char) omrshr_UtActive[1623] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1623u << 8) | omrshr_UtActive[1623]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getFreeDebugSpaceBytes_Exit(P1)   /* tracepoint name: omrshr.1623 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_Entry() do { /* tracepoint name: omrshr.1624 */ \
	if ((unsigned char) omrshr_UtActive[1624] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1624u << 8) | omrshr_UtActive[1624]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_Entry()   /* tracepoint name: omrshr.1624 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_NotOk_Exit() do { /* tracepoint name: omrshr.1625 */ \
	if ((unsigned char) omrshr_UtActive[1625] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1625u << 8) | omrshr_UtActive[1625]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_NotOk_Exit()   /* tracepoint name: omrshr.1625 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_Exit(P1) do { /* tracepoint name: omrshr.1626 */ \
	if ((unsigned char) omrshr_UtActive[1626] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1626u << 8) | omrshr_UtActive[1626]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLineNumberTableBytes_Exit(P1)   /* tracepoint name: omrshr.1626 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_Entry() do { /* tracepoint name: omrshr.1627 */ \
	if ((unsigned char) omrshr_UtActive[1627] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1627u << 8) | omrshr_UtActive[1627]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_Entry()   /* tracepoint name: omrshr.1627 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_NotOk_Event() do { /* tracepoint name: omrshr.1628 */ \
	if ((unsigned char) omrshr_UtActive[1628] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1628u << 8) | omrshr_UtActive[1628]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_NotOk_Event()   /* tracepoint name: omrshr.1628 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_Exit(P1) do { /* tracepoint name: omrshr.1629 */ \
	if ((unsigned char) omrshr_UtActive[1629] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1629u << 8) | omrshr_UtActive[1629]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getLocalVariableTableBytes_Exit(P1)   /* tracepoint name: omrshr.1629 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getDebugAreaStartAddress_Event(P1) do { /* tracepoint name: omrshr.1630 */ \
	if ((unsigned char) omrshr_UtActive[1630] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1630u << 8) | omrshr_UtActive[1630]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getDebugAreaStartAddress_Event(P1)   /* tracepoint name: omrshr.1630 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getDebugAreaEndAddress_Event(P1) do { /* tracepoint name: omrshr.1631 */ \
	if ((unsigned char) omrshr_UtActive[1631] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1631u << 8) | omrshr_UtActive[1631]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getDebugAreaEndAddress_Event(P1)   /* tracepoint name: omrshr.1631 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_Entry(P1, P2) do { /* tracepoint name: omrshr.1632 */ \
	if ((unsigned char) omrshr_UtActive[1632] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1632u << 8) | omrshr_UtActive[1632]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_Entry(P1, P2)   /* tracepoint name: omrshr.1632 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_NullCacheHdr_Event() do { /* tracepoint name: omrshr.1633 */ \
	if ((unsigned char) omrshr_UtActive[1633] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1633u << 8) | omrshr_UtActive[1633]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_NullCacheHdr_Event()   /* tracepoint name: omrshr.1633 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_AlreadyInit_Event(P1) do { /* tracepoint name: omrshr.1634 */ \
	if ((unsigned char) omrshr_UtActive[1634] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1634u << 8) | omrshr_UtActive[1634]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_AlreadyInit_Event(P1)   /* tracepoint name: omrshr.1634 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_Exit(P1) do { /* tracepoint name: omrshr.1635 */ \
	if ((unsigned char) omrshr_UtActive[1635] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1635u << 8) | omrshr_UtActive[1635]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_HeaderInitForDebug_Exit(P1)   /* tracepoint name: omrshr.1635 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_getRecommendedPercentage_Event(P1) do { /* tracepoint name: omrshr.1636 */ \
	if ((unsigned char) omrshr_UtActive[1636] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1636u << 8) | omrshr_UtActive[1636]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_getRecommendedPercentage_Event(P1)   /* tracepoint name: omrshr.1636 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_recommendedDebugAreaSize_Event(P1) do { /* tracepoint name: omrshr.1637 */ \
	if ((unsigned char) omrshr_UtActive[1637] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1637u << 8) | omrshr_UtActive[1637]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_recommendedDebugAreaSize_Event(P1)   /* tracepoint name: omrshr.1637 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exception_DebugAreNotOk(thr) do { /* tracepoint name: omrshr.1638 */ \
	if ((unsigned char) omrshr_UtActive[1638] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1638u << 8) | omrshr_UtActive[1638]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exception_DebugAreNotOk(thr)   /* tracepoint name: omrshr.1638 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_failedSimplePoolConsistency() do { /* tracepoint name: omrshr.1639 */ \
	if ((unsigned char) omrshr_UtActive[1639] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1639u << 8) | omrshr_UtActive[1639]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_failedSimplePoolConsistency()   /* tracepoint name: omrshr.1639 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_verifyStringTableElement_utf8Corrupt(P1, P2, P3) do { /* tracepoint name: omrshr.1640 */ \
	if ((unsigned char) omrshr_UtActive[1640] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1640u << 8) | omrshr_UtActive[1640]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_verifyStringTableElement_utf8Corrupt(P1, P2, P3)   /* tracepoint name: omrshr.1640 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_verifyStringTableElement_childCorrupt(P1, P2, P3) do { /* tracepoint name: omrshr.1641 */ \
	if ((unsigned char) omrshr_UtActive[1641] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1641u << 8) | omrshr_UtActive[1641]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_verifyStringTableElement_childCorrupt(P1, P2, P3)   /* tracepoint name: omrshr.1641 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_verifyStringTableElement_lruCorrupt(P1, P2, P3) do { /* tracepoint name: omrshr.1642 */ \
	if ((unsigned char) omrshr_UtActive[1642] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1642u << 8) | omrshr_UtActive[1642]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_verifyStringTableElement_lruCorrupt(P1, P2, P3)   /* tracepoint name: omrshr.1642 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_verifyStringTableElement_flagsCorrupt(P1, P2, P3) do { /* tracepoint name: omrshr.1643 */ \
	if ((unsigned char) omrshr_UtActive[1643] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1643u << 8) | omrshr_UtActive[1643]), "\4\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_verifyStringTableElement_flagsCorrupt(P1, P2, P3)   /* tracepoint name: omrshr.1643 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClass_FailedToAllocDebugAttributes_Event(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1645 */ \
	if ((unsigned char) omrshr_UtActive[1645] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1645u << 8) | omrshr_UtActive[1645]), "\12\377\4\6\4\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClass_FailedToAllocDebugAttributes_Event(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1645 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClass_AllocatedDebugAttributes_Event(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1646 */ \
	if ((unsigned char) omrshr_UtActive[1646] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1646u << 8) | omrshr_UtActive[1646]), "\12\377\4\6\4\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClass_AllocatedDebugAttributes_Event(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1646 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClass_FailedToRomClassRollbackDebug_Event(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1647 */ \
	if ((unsigned char) omrshr_UtActive[1647] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1647u << 8) | omrshr_UtActive[1647]), "\12\377\4\6\4\6", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClass_FailedToRomClassRollbackDebug_Event(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1647 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initializeWithCommonInfo_Exit() do { /* tracepoint name: omrshr.1650 */ \
	if ((unsigned char) omrshr_UtActive[1650] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1650u << 8) | omrshr_UtActive[1650]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_initializeWithCommonInfo_Exit()   /* tracepoint name: omrshr.1650 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitCntr(thr, P1, P2) do { /* tracepoint name: omrshr.1651 */ \
	if ((unsigned char) omrshr_UtActive[1651] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1651u << 8) | omrshr_UtActive[1651]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_enterReadWriteAreaMutex_ExitCntr(thr, P1, P2)   /* tracepoint name: omrshr.1651 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_exitReadWriteAreaMutex_ExitCntr(thr, P1, P2) do { /* tracepoint name: omrshr.1652 */ \
	if ((unsigned char) omrshr_UtActive[1652] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1652u << 8) | omrshr_UtActive[1652]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_exitReadWriteAreaMutex_ExitCntr(thr, P1, P2)   /* tracepoint name: omrshr.1652 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_SysVCacheFileTypeHelper_Event(P1, P2) do { /* tracepoint name: omrshr.1653 */ \
	if ((unsigned char) omrshr_UtActive[1653] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1653u << 8) | omrshr_UtActive[1653]), "\10\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_SysVCacheFileTypeHelper_Event(P1, P2)   /* tracepoint name: omrshr.1653 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_OpenSysVSemaphoreHelper_Enter() do { /* tracepoint name: omrshr.1654 */ \
	if ((unsigned char) omrshr_UtActive[1654] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1654u << 8) | omrshr_UtActive[1654]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_OpenSysVSemaphoreHelper_Enter()   /* tracepoint name: omrshr.1654 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_OpenSysVSemaphoreHelper_Exit(P1) do { /* tracepoint name: omrshr.1655 */ \
	if ((unsigned char) omrshr_UtActive[1655] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1655u << 8) | omrshr_UtActive[1655]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_OpenSysVSemaphoreHelper_Exit(P1)   /* tracepoint name: omrshr.1655 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_DestroySysVSemHelper_Enter() do { /* tracepoint name: omrshr.1656 */ \
	if ((unsigned char) omrshr_UtActive[1656] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1656u << 8) | omrshr_UtActive[1656]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_DestroySysVSemHelper_Enter()   /* tracepoint name: omrshr.1656 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_DestroySysVSemHelper_Exit(P1) do { /* tracepoint name: omrshr.1657 */ \
	if ((unsigned char) omrshr_UtActive[1657] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1657u << 8) | omrshr_UtActive[1657]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_DestroySysVSemHelper_Exit(P1)   /* tracepoint name: omrshr.1657 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_OpenSysVMemoryHelper_Enter() do { /* tracepoint name: omrshr.1658 */ \
	if ((unsigned char) omrshr_UtActive[1658] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1658u << 8) | omrshr_UtActive[1658]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_OpenSysVMemoryHelper_Enter()   /* tracepoint name: omrshr.1658 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_OpenSysVMemoryHelper_Exit(P1) do { /* tracepoint name: omrshr.1659 */ \
	if ((unsigned char) omrshr_UtActive[1659] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1659u << 8) | omrshr_UtActive[1659]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_OpenSysVMemoryHelper_Exit(P1)   /* tracepoint name: omrshr.1659 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_StatSysVMemoryHelper_Enter() do { /* tracepoint name: omrshr.1660 */ \
	if ((unsigned char) omrshr_UtActive[1660] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1660u << 8) | omrshr_UtActive[1660]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_StatSysVMemoryHelper_Enter()   /* tracepoint name: omrshr.1660 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_StatSysVMemoryHelper_Exit(P1) do { /* tracepoint name: omrshr.1661 */ \
	if ((unsigned char) omrshr_UtActive[1661] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1661u << 8) | omrshr_UtActive[1661]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_StatSysVMemoryHelper_Exit(P1)   /* tracepoint name: omrshr.1661 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_DestroySysVMemoryHelper_Enter() do { /* tracepoint name: omrshr.1662 */ \
	if ((unsigned char) omrshr_UtActive[1662] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1662u << 8) | omrshr_UtActive[1662]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_DestroySysVMemoryHelper_Enter()   /* tracepoint name: omrshr.1662 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_DestroySysVMemoryHelper_Exit(P1) do { /* tracepoint name: omrshr.1663 */ \
	if ((unsigned char) omrshr_UtActive[1663] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1663u << 8) | omrshr_UtActive[1663]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_DestroySysVMemoryHelper_Exit(P1)   /* tracepoint name: omrshr.1663 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_Entry(P1) do { /* tracepoint name: omrshr.1664 */ \
	if ((unsigned char) omrshr_UtActive[1664] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1664u << 8) | omrshr_UtActive[1664]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_Entry(P1)   /* tracepoint name: omrshr.1664 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_removeCacheVersionAndGenFailed() do { /* tracepoint name: omrshr.1665 */ \
	if ((unsigned char) omrshr_UtActive[1665] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1665u << 8) | omrshr_UtActive[1665]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_removeCacheVersionAndGenFailed()   /* tracepoint name: omrshr.1665 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_cacheStatFailed() do { /* tracepoint name: omrshr.1666 */ \
	if ((unsigned char) omrshr_UtActive[1666] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1666u << 8) | omrshr_UtActive[1666]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_cacheStatFailed()   /* tracepoint name: omrshr.1666 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_Exit() do { /* tracepoint name: omrshr.1667 */ \
	if ((unsigned char) omrshr_UtActive[1667] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1667u << 8) | omrshr_UtActive[1667]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_Exit()   /* tracepoint name: omrshr.1667 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_j9shmem_createDir_failed() do { /* tracepoint name: omrshr.1668 */ \
	if ((unsigned char) omrshr_UtActive[1668] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1668u << 8) | omrshr_UtActive[1668]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_j9shmem_createDir_failed()   /* tracepoint name: omrshr.1668 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_NoCoreMmapDisablePersistence() do { /* tracepoint name: omrshr.1669 */ \
	if ((unsigned char) omrshr_UtActive[1669] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1669u << 8) | omrshr_UtActive[1669]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_NoCoreMmapDisablePersistence()   /* tracepoint name: omrshr.1669 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_testBadBuildID() do { /* tracepoint name: omrshr.1670 */ \
	if ((unsigned char) omrshr_UtActive[1670] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1670u << 8) | omrshr_UtActive[1670]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_testBadBuildID()   /* tracepoint name: omrshr.1670 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initialize_Entry1(P1, P2, P3, P4, P5) do { /* tracepoint name: omrshr.1671 */ \
	if ((unsigned char) omrshr_UtActive[1671] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1671u << 8) | omrshr_UtActive[1671]), "\6\6\377\4\6", P1, P2, P3, P4, P5);} \
	} while(0)
#else
#define Trc_SHR_CC_initialize_Entry1(P1, P2, P3, P4, P5)   /* tracepoint name: omrshr.1671 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_createCacheDir_Entry(P1, P2) do { /* tracepoint name: omrshr.1672 */ \
	if ((unsigned char) omrshr_UtActive[1672] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1672u << 8) | omrshr_UtActive[1672]), "\377\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_createCacheDir_Entry(P1, P2)   /* tracepoint name: omrshr.1672 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_createCacheDir_Exit() do { /* tracepoint name: omrshr.1673 */ \
	if ((unsigned char) omrshr_UtActive[1673] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1673u << 8) | omrshr_UtActive[1673]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_createCacheDir_Exit()   /* tracepoint name: omrshr.1673 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_nomem_cacheDirName() do { /* tracepoint name: omrshr.1674 */ \
	if ((unsigned char) omrshr_UtActive[1674] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1674u << 8) | omrshr_UtActive[1674]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_nomem_cacheDirName()   /* tracepoint name: omrshr.1674 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_getCacheDir_fail() do { /* tracepoint name: omrshr.1675 */ \
	if ((unsigned char) omrshr_UtActive[1675] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1675u << 8) | omrshr_UtActive[1675]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_getCacheDir_fail()   /* tracepoint name: omrshr.1675 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_commonStartup_createCacheDir_fail() do { /* tracepoint name: omrshr.1676 */ \
	if ((unsigned char) omrshr_UtActive[1676] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1676u << 8) | omrshr_UtActive[1676]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_commonStartup_createCacheDir_fail()   /* tracepoint name: omrshr.1676 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_Failed_Exit() do { /* tracepoint name: omrshr.1677 */ \
	if ((unsigned char) omrshr_UtActive[1677] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1677u << 8) | omrshr_UtActive[1677]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_Failed_Exit()   /* tracepoint name: omrshr.1677 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_newInstanceForStats_Entry(P1) do { /* tracepoint name: omrshr.1678 */ \
	if ((unsigned char) omrshr_UtActive[1678] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1678u << 8) | omrshr_UtActive[1678]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_newInstanceForStats_Entry(P1)   /* tracepoint name: omrshr.1678 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_newInstanceForStats_Exit() do { /* tracepoint name: omrshr.1679 */ \
	if ((unsigned char) omrshr_UtActive[1679] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1679u << 8) | omrshr_UtActive[1679]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_newInstanceForStats_Exit()   /* tracepoint name: omrshr.1679 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_cache_getCacheDirFailed() do { /* tracepoint name: omrshr.1680 */ \
	if ((unsigned char) omrshr_UtActive[1680] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1680u << 8) | omrshr_UtActive[1680]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_cache_getCacheDirFailed()   /* tracepoint name: omrshr.1680 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_RRM_find_Entry_V2(thr, P1) do { /* tracepoint name: omrshr.1681 */ \
	if ((unsigned char) omrshr_UtActive[1681] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1681u << 8) | omrshr_UtActive[1681]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_RRM_find_Entry_V2(thr, P1)   /* tracepoint name: omrshr.1681 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_newInstance_Entry(P1, P2) do { /* tracepoint name: omrshr.1682 */ \
	if ((unsigned char) omrshr_UtActive[1682] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1682u << 8) | omrshr_UtActive[1682]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ADMI_newInstance_Entry(P1, P2)   /* tracepoint name: omrshr.1682 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_newInstance_Exit(P1) do { /* tracepoint name: omrshr.1683 */ \
	if ((unsigned char) omrshr_UtActive[1683] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1683u << 8) | omrshr_UtActive[1683]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ADMI_newInstance_Exit(P1)   /* tracepoint name: omrshr.1683 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_initialize_Entry() do { /* tracepoint name: omrshr.1684 */ \
	if ((unsigned char) omrshr_UtActive[1684] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1684u << 8) | omrshr_UtActive[1684]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ADMI_initialize_Entry()   /* tracepoint name: omrshr.1684 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_initialize_Exit() do { /* tracepoint name: omrshr.1685 */ \
	if ((unsigned char) omrshr_UtActive[1685] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1685u << 8) | omrshr_UtActive[1685]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ADMI_initialize_Exit()   /* tracepoint name: omrshr.1685 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_storeNew_Entry(thr, P1) do { /* tracepoint name: omrshr.1686 */ \
	if ((unsigned char) omrshr_UtActive[1686] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1686u << 8) | omrshr_UtActive[1686]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ADMI_storeNew_Entry(thr, P1)   /* tracepoint name: omrshr.1686 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_storeNew_ExitTrue(thr) do { /* tracepoint name: omrshr.1687 */ \
	if ((unsigned char) omrshr_UtActive[1687] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1687u << 8) | omrshr_UtActive[1687]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ADMI_storeNew_ExitTrue(thr)   /* tracepoint name: omrshr.1687 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_storeNew_ExitFalse(thr) do { /* tracepoint name: omrshr.1688 */ \
	if ((unsigned char) omrshr_UtActive[1688] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1688u << 8) | omrshr_UtActive[1688]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ADMI_storeNew_ExitFalse(thr)   /* tracepoint name: omrshr.1688 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_sharedStringInternTableCreated(P1) do { /* tracepoint name: omrshr.1689 */ \
	if ((unsigned char) omrshr_UtActive[1689] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1689u << 8) | omrshr_UtActive[1689]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_sharedStringInternTableCreated(P1)   /* tracepoint name: omrshr.1689 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_sharedStringInternTableIsNotCreated() do { /* tracepoint name: omrshr.1690 */ \
	if ((unsigned char) omrshr_UtActive[1690] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1690u << 8) | omrshr_UtActive[1690]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_sharedStringInternTableIsNotCreated()   /* tracepoint name: omrshr.1690 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_errorHandler_Entry_V2(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1691 */ \
	if ((unsigned char) omrshr_UtActive[1691] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1691u << 8) | omrshr_UtActive[1691]), "\4\4\4\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_errorHandler_Entry_V2(P1, P2, P3, P4)   /* tracepoint name: omrshr.1691 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_commitUpdate_Entry2(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1692 */ \
	if ((unsigned char) omrshr_UtActive[1692] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1692u << 8) | omrshr_UtActive[1692]), "\6\4\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CC_commitUpdate_Entry2(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1692 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_rollbackUpdate_Event2(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.1693 */ \
	if ((unsigned char) omrshr_UtActive[1693] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1693u << 8) | omrshr_UtActive[1693]), "\6\4\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CC_rollbackUpdate_Event2(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.1693 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_Exit2(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1694 */ \
	if ((unsigned char) omrshr_UtActive[1694] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1694u << 8) | omrshr_UtActive[1694]), "\6\6\4\4\4\4\4", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_Exit2(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1694 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_startup_callinginit2(P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1696 */ \
	if ((unsigned char) omrshr_UtActive[1696] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1696u << 8) | omrshr_UtActive[1696]), "\6\6\6\6\6\6\6", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_startup_callinginit2(P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1696 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCorruptCacheWithContext_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1697 */ \
	if ((unsigned char) omrshr_UtActive[1697] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1697u << 8) | omrshr_UtActive[1697]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_setCorruptCacheWithContext_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1697 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCorruptCacheWithContext_Exit() do { /* tracepoint name: omrshr.1698 */ \
	if ((unsigned char) omrshr_UtActive[1698] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1698u << 8) | omrshr_UtActive[1698]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCorruptCacheWithContext_Exit()   /* tracepoint name: omrshr.1698 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Init_UnprotectForWin32_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1708 */ \
	if ((unsigned char) omrshr_UtActive[1708] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1708u << 8) | omrshr_UtActive[1708]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Init_UnprotectForWin32_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1708 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_entry(thr) do { /* tracepoint name: omrshr.1709 */ \
	if ((unsigned char) omrshr_UtActive[1709] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1709u << 8) | omrshr_UtActive[1709]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_entry(thr)   /* tracepoint name: omrshr.1709 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit_TypeUnknown(thr, P1) do { /* tracepoint name: omrshr.1710 */ \
	if ((unsigned char) omrshr_UtActive[1710] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1710u << 8) | omrshr_UtActive[1710]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit_TypeUnknown(thr, P1)   /* tracepoint name: omrshr.1710 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit_SccN(thr) do { /* tracepoint name: omrshr.1711 */ \
	if ((unsigned char) omrshr_UtActive[1711] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1711u << 8) | omrshr_UtActive[1711]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit_SccN(thr)   /* tracepoint name: omrshr.1711 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit_localRTF(thr, P1) do { /* tracepoint name: omrshr.1712 */ \
	if ((unsigned char) omrshr_UtActive[1712] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1712u << 8) | omrshr_UtActive[1712]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit_localRTF(thr, P1)   /* tracepoint name: omrshr.1712 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit_CacheFull(thr) do { /* tracepoint name: omrshr.1713 */ \
	if ((unsigned char) omrshr_UtActive[1713] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1713u << 8) | omrshr_UtActive[1713]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit_CacheFull(thr)   /* tracepoint name: omrshr.1713 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit_FlagErr(thr, P1) do { /* tracepoint name: omrshr.1714 */ \
	if ((unsigned char) omrshr_UtActive[1714] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1714u << 8) | omrshr_UtActive[1714]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit_FlagErr(thr, P1)   /* tracepoint name: omrshr.1714 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findAttachedData_entry(thr) do { /* tracepoint name: omrshr.1716 */ \
	if ((unsigned char) omrshr_UtActive[1716] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1716u << 8) | omrshr_UtActive[1716]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_entry(thr)   /* tracepoint name: omrshr.1716 */
#endif

#if UT_TRACE_OVERHEAD >= 2
#define Trc_SHR_INIT_findAttachedData_exit_localRTF(thr, P1) do { /* tracepoint name: omrshr.1717 */ \
	if ((unsigned char) omrshr_UtActive[1717] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1717u << 8) | omrshr_UtActive[1717]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_exit_localRTF(thr, P1)   /* tracepoint name: omrshr.1717 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findAttachedData_exit_SccN(thr) do { /* tracepoint name: omrshr.1718 */ \
	if ((unsigned char) omrshr_UtActive[1718] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1718u << 8) | omrshr_UtActive[1718]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_exit_SccN(thr)   /* tracepoint name: omrshr.1718 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findAttachedData_exit_FlagErr(thr, P1) do { /* tracepoint name: omrshr.1719 */ \
	if ((unsigned char) omrshr_UtActive[1719] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1719u << 8) | omrshr_UtActive[1719]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_exit_FlagErr(thr, P1)   /* tracepoint name: omrshr.1719 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findAttachedData_exit(thr, P1) do { /* tracepoint name: omrshr.1720 */ \
	if ((unsigned char) omrshr_UtActive[1720] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1720u << 8) | omrshr_UtActive[1720]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_exit(thr, P1)   /* tracepoint name: omrshr.1720 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedData_entry(thr) do { /* tracepoint name: omrshr.1721 */ \
	if ((unsigned char) omrshr_UtActive[1721] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1721u << 8) | omrshr_UtActive[1721]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedData_entry(thr)   /* tracepoint name: omrshr.1721 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedData_exit_localRTF(thr, P1) do { /* tracepoint name: omrshr.1722 */ \
	if ((unsigned char) omrshr_UtActive[1722] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1722u << 8) | omrshr_UtActive[1722]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedData_exit_localRTF(thr, P1)   /* tracepoint name: omrshr.1722 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedData_exit_SccN(thr) do { /* tracepoint name: omrshr.1723 */ \
	if ((unsigned char) omrshr_UtActive[1723] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1723u << 8) | omrshr_UtActive[1723]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedData_exit_SccN(thr)   /* tracepoint name: omrshr.1723 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedData_exit_FlagErr(thr, P1) do { /* tracepoint name: omrshr.1724 */ \
	if ((unsigned char) omrshr_UtActive[1724] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1724u << 8) | omrshr_UtActive[1724]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedData_exit_FlagErr(thr, P1)   /* tracepoint name: omrshr.1724 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedData_exit(thr, P1) do { /* tracepoint name: omrshr.1725 */ \
	if ((unsigned char) omrshr_UtActive[1725] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1725u << 8) | omrshr_UtActive[1725]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedData_exit(thr, P1)   /* tracepoint name: omrshr.1725 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedUDATA_entry(thr) do { /* tracepoint name: omrshr.1726 */ \
	if ((unsigned char) omrshr_UtActive[1726] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1726u << 8) | omrshr_UtActive[1726]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedUDATA_entry(thr)   /* tracepoint name: omrshr.1726 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedUDATA_exit_localRTF(thr, P1) do { /* tracepoint name: omrshr.1727 */ \
	if ((unsigned char) omrshr_UtActive[1727] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1727u << 8) | omrshr_UtActive[1727]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedUDATA_exit_localRTF(thr, P1)   /* tracepoint name: omrshr.1727 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedUDATA_exit_SccN(thr) do { /* tracepoint name: omrshr.1728 */ \
	if ((unsigned char) omrshr_UtActive[1728] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1728u << 8) | omrshr_UtActive[1728]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedUDATA_exit_SccN(thr)   /* tracepoint name: omrshr.1728 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedUDATA_exit_notAligned(thr, P1, P2) do { /* tracepoint name: omrshr.1729 */ \
	if ((unsigned char) omrshr_UtActive[1729] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1729u << 8) | omrshr_UtActive[1729]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedUDATA_exit_notAligned(thr, P1, P2)   /* tracepoint name: omrshr.1729 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_updateAttachedUDATA_exit(thr, P1) do { /* tracepoint name: omrshr.1730 */ \
	if ((unsigned char) omrshr_UtActive[1730] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1730u << 8) | omrshr_UtActive[1730]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_updateAttachedUDATA_exit(thr, P1)   /* tracepoint name: omrshr.1730 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeAttachedData_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1731 */ \
	if ((unsigned char) omrshr_UtActive[1731] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1731u << 8) | omrshr_UtActive[1731]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_storeAttachedData_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1731 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeAttachedData_Exit1(thr) do { /* tracepoint name: omrshr.1732 */ \
	if ((unsigned char) omrshr_UtActive[1732] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1732u << 8) | omrshr_UtActive[1732]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_storeAttachedData_Exit1(thr)   /* tracepoint name: omrshr.1732 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedData_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1734 */ \
	if ((unsigned char) omrshr_UtActive[1734] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1734u << 8) | omrshr_UtActive[1734]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedData_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1734 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedData_Exit1(thr) do { /* tracepoint name: omrshr.1735 */ \
	if ((unsigned char) omrshr_UtActive[1735] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1735u << 8) | omrshr_UtActive[1735]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedData_Exit1(thr)   /* tracepoint name: omrshr.1735 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedData_Exit2(thr, P1) do { /* tracepoint name: omrshr.1736 */ \
	if ((unsigned char) omrshr_UtActive[1736] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1736u << 8) | omrshr_UtActive[1736]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedData_Exit2(thr, P1)   /* tracepoint name: omrshr.1736 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedUDATA_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1737 */ \
	if ((unsigned char) omrshr_UtActive[1737] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1737u << 8) | omrshr_UtActive[1737]), "\6\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedUDATA_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1737 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedUDATA_Exit1(thr) do { /* tracepoint name: omrshr.1738 */ \
	if ((unsigned char) omrshr_UtActive[1738] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1738u << 8) | omrshr_UtActive[1738]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedUDATA_Exit1(thr)   /* tracepoint name: omrshr.1738 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAttachedUDATA_Exit2(thr, P1) do { /* tracepoint name: omrshr.1739 */ \
	if ((unsigned char) omrshr_UtActive[1739] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1739u << 8) | omrshr_UtActive[1739]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAttachedUDATA_Exit2(thr, P1)   /* tracepoint name: omrshr.1739 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedData_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1740 */ \
	if ((unsigned char) omrshr_UtActive[1740] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1740u << 8) | omrshr_UtActive[1740]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedData_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1740 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedData_Exit1(thr) do { /* tracepoint name: omrshr.1741 */ \
	if ((unsigned char) omrshr_UtActive[1741] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1741u << 8) | omrshr_UtActive[1741]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedData_Exit1(thr)   /* tracepoint name: omrshr.1741 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedData_Exit2(thr) do { /* tracepoint name: omrshr.1742 */ \
	if ((unsigned char) omrshr_UtActive[1742] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1742u << 8) | omrshr_UtActive[1742]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedData_Exit2(thr)   /* tracepoint name: omrshr.1742 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedData_Exit3(thr, P1) do { /* tracepoint name: omrshr.1743 */ \
	if ((unsigned char) omrshr_UtActive[1743] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1743u << 8) | omrshr_UtActive[1743]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedData_Exit3(thr, P1)   /* tracepoint name: omrshr.1743 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit1(thr) do { /* tracepoint name: omrshr.1745 */ \
	if ((unsigned char) omrshr_UtActive[1745] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1745u << 8) | omrshr_UtActive[1745]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit1(thr)   /* tracepoint name: omrshr.1745 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit2(thr) do { /* tracepoint name: omrshr.1746 */ \
	if ((unsigned char) omrshr_UtActive[1746] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1746u << 8) | omrshr_UtActive[1746]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit2(thr)   /* tracepoint name: omrshr.1746 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit3(thr) do { /* tracepoint name: omrshr.1747 */ \
	if ((unsigned char) omrshr_UtActive[1747] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1747u << 8) | omrshr_UtActive[1747]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit3(thr)   /* tracepoint name: omrshr.1747 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit4(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1748 */ \
	if ((unsigned char) omrshr_UtActive[1748] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1748u << 8) | omrshr_UtActive[1748]), "\4\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit4(thr, P1, P2, P3)   /* tracepoint name: omrshr.1748 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit5(thr) do { /* tracepoint name: omrshr.1749 */ \
	if ((unsigned char) omrshr_UtActive[1749] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1749u << 8) | omrshr_UtActive[1749]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit5(thr)   /* tracepoint name: omrshr.1749 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Exit6(thr, P1) do { /* tracepoint name: omrshr.1750 */ \
	if ((unsigned char) omrshr_UtActive[1750] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1750u << 8) | omrshr_UtActive[1750]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Exit6(thr, P1)   /* tracepoint name: omrshr.1750 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_processUpdates_Entry(thr, P1) do { /* tracepoint name: omrshr.1751 */ \
	if ((unsigned char) omrshr_UtActive[1751] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1751u << 8) | omrshr_UtActive[1751]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_processUpdates_Entry(thr, P1)   /* tracepoint name: omrshr.1751 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_processUpdates_FoundNewLineNumData(thr, P1, P2) do { /* tracepoint name: omrshr.1752 */ \
	if ((unsigned char) omrshr_UtActive[1752] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1752u << 8) | omrshr_UtActive[1752]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_processUpdates_FoundNewLineNumData(thr, P1, P2)   /* tracepoint name: omrshr.1752 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_processUpdates_FoundNewLocalVarData(thr, P1, P2) do { /* tracepoint name: omrshr.1753 */ \
	if ((unsigned char) omrshr_UtActive[1753] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1753u << 8) | omrshr_UtActive[1753]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_processUpdates_FoundNewLocalVarData(thr, P1, P2)   /* tracepoint name: omrshr.1753 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_processUpdates_Exit(thr, P1, P2) do { /* tracepoint name: omrshr.1754 */ \
	if ((unsigned char) omrshr_UtActive[1754] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1754u << 8) | omrshr_UtActive[1754]), "\6\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_processUpdates_Exit(thr, P1, P2)   /* tracepoint name: omrshr.1754 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_XnolinenumbersMeansNoDebugArea(thr) do { /* tracepoint name: omrshr.1755 */ \
	if ((unsigned char) omrshr_UtActive[1755] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1755u << 8) | omrshr_UtActive[1755]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_Event_XnolinenumbersMeansNoDebugArea(thr)   /* tracepoint name: omrshr.1755 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedDataAPI_Entry(thr, P1, P2) do { /* tracepoint name: omrshr.1756 */ \
	if ((unsigned char) omrshr_UtActive[1756] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1756u << 8) | omrshr_UtActive[1756]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedDataAPI_Entry(thr, P1, P2)   /* tracepoint name: omrshr.1756 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findAttachedDataAPI_Exit(thr, P1) do { /* tracepoint name: omrshr.1757 */ \
	if ((unsigned char) omrshr_UtActive[1757] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1757u << 8) | omrshr_UtActive[1757]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findAttachedDataAPI_Exit(thr, P1)   /* tracepoint name: omrshr.1757 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_storeAttachedData_Exit3(thr, P1) do { /* tracepoint name: omrshr.1758 */ \
	if ((unsigned char) omrshr_UtActive[1758] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1758u << 8) | omrshr_UtActive[1758]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_storeAttachedData_Exit3(thr, P1)   /* tracepoint name: omrshr.1758 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeAttachedData_exit1(thr, P1) do { /* tracepoint name: omrshr.1759 */ \
	if ((unsigned char) omrshr_UtActive[1759] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1759u << 8) | omrshr_UtActive[1759]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeAttachedData_exit1(thr, P1)   /* tracepoint name: omrshr.1759 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_initializeWithCommonInfo_Entry1(P1, P2, P3, P4) do { /* tracepoint name: omrshr.1760 */ \
	if ((unsigned char) omrshr_UtActive[1760] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1760u << 8) | omrshr_UtActive[1760]), "\6\377\377\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_initializeWithCommonInfo_Entry1(P1, P2, P3, P4)   /* tracepoint name: omrshr.1760 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Entry1(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.1761 */ \
	if ((unsigned char) omrshr_UtActive[1761] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1761u << 8) | omrshr_UtActive[1761]), "\6\377\377\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Entry1(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.1761 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_Entry1(P1) do { /* tracepoint name: omrshr.1762 */ \
	if ((unsigned char) omrshr_UtActive[1762] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1762u << 8) | omrshr_UtActive[1762]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_Entry1(P1)   /* tracepoint name: omrshr.1762 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_Try_Attach1(P1) do { /* tracepoint name: omrshr.1763 */ \
	if ((unsigned char) omrshr_UtActive[1763] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1763u << 8) | omrshr_UtActive[1763]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_Try_Attach1(P1)   /* tracepoint name: omrshr.1763 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Vmem_attach_Entry1(P1) do { /* tracepoint name: omrshr.1764 */ \
	if ((unsigned char) omrshr_UtActive[1764] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1764u << 8) | omrshr_UtActive[1764]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Vmem_attach_Entry1(P1)   /* tracepoint name: omrshr.1764 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateROMClassResource_Entry1(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.1765 */ \
	if ((unsigned char) omrshr_UtActive[1765] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1765u << 8) | omrshr_UtActive[1765]), "\6\4\6\6\6\4\6", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_CM_updateROMClassResource_Entry1(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.1765 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_initialize_Entry1(P1) do { /* tracepoint name: omrshr.1766 */ \
	if ((unsigned char) omrshr_UtActive[1766] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1766u << 8) | omrshr_UtActive[1766]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_initialize_Entry1(P1)   /* tracepoint name: omrshr.1766 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getRequiredConstrBytes_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.1767 */ \
	if ((unsigned char) omrshr_UtActive[1767] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1767u << 8) | omrshr_UtActive[1767]), "\4\4\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_getRequiredConstrBytes_Entry(P1, P2, P3)   /* tracepoint name: omrshr.1767 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_getRequiredConstrBytes_Exit() do { /* tracepoint name: omrshr.1768 */ \
	if ((unsigned char) omrshr_UtActive[1768] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1768u << 8) | omrshr_UtActive[1768]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_getRequiredConstrBytes_Exit()   /* tracepoint name: omrshr.1768 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_attach_ExitHeaderIsNotOk(P1) do { /* tracepoint name: omrshr.1769 */ \
	if ((unsigned char) omrshr_UtActive[1769] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1769u << 8) | omrshr_UtActive[1769]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_attach_ExitHeaderIsNotOk(P1)   /* tracepoint name: omrshr.1769 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCorruptCacheWithContext_AlreadyCorrupt() do { /* tracepoint name: omrshr.1770 */ \
	if ((unsigned char) omrshr_UtActive[1770] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1770u << 8) | omrshr_UtActive[1770]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setCorruptCacheWithContext_AlreadyCorrupt()   /* tracepoint name: omrshr.1770 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed4(thr) do { /* tracepoint name: omrshr.1771 */ \
	if ((unsigned char) omrshr_UtActive[1771] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1771u << 8) | omrshr_UtActive[1771]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_runEntryPointChecks_Exit_Failed4(thr)   /* tracepoint name: omrshr.1771 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_refreshHashtables_Corrupt_Exit(thr) do { /* tracepoint name: omrshr.1772 */ \
	if ((unsigned char) omrshr_UtActive[1772] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1772u << 8) | omrshr_UtActive[1772]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_refreshHashtables_Corrupt_Exit(thr)   /* tracepoint name: omrshr.1772 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_ExitWithError() do { /* tracepoint name: omrshr.1773 */ \
	if ((unsigned char) omrshr_UtActive[1773] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1773u << 8) | omrshr_UtActive[1773]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_ExitWithError()   /* tracepoint name: omrshr.1773 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_internalAttachFailed2() do { /* tracepoint name: omrshr.1774 */ \
	if ((unsigned char) omrshr_UtActive[1774] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1774u << 8) | omrshr_UtActive[1774]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_internalAttachFailed2()   /* tracepoint name: omrshr.1774 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_corruptCacheHeader2() do { /* tracepoint name: omrshr.1775 */ \
	if ((unsigned char) omrshr_UtActive[1775] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1775u << 8) | omrshr_UtActive[1775]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_corruptCacheHeader2()   /* tracepoint name: omrshr.1775 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_invalidCacheHeader2() do { /* tracepoint name: omrshr.1776 */ \
	if ((unsigned char) omrshr_UtActive[1776] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1776u << 8) | omrshr_UtActive[1776]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_invalidCacheHeader2()   /* tracepoint name: omrshr.1776 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_badupdatelastattachedtime2() do { /* tracepoint name: omrshr.1777 */ \
	if ((unsigned char) omrshr_UtActive[1777] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1777u << 8) | omrshr_UtActive[1777]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_badupdatelastattachedtime2()   /* tracepoint name: omrshr.1777 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_attach_releaseHeaderLockFailed2() do { /* tracepoint name: omrshr.1778 */ \
	if ((unsigned char) omrshr_UtActive[1778] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1778u << 8) | omrshr_UtActive[1778]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_attach_releaseHeaderLockFailed2()   /* tracepoint name: omrshr.1778 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_Exit_NoCache(P1) do { /* tracepoint name: omrshr.1779 */ \
	if ((unsigned char) omrshr_UtActive[1779] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1779u << 8) | omrshr_UtActive[1779]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_Exit_NoCache(P1)   /* tracepoint name: omrshr.1779 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit_Created(P1) do { /* tracepoint name: omrshr.1780 */ \
	if ((unsigned char) omrshr_UtActive[1780] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1780u << 8) | omrshr_UtActive[1780]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit_Created(P1)   /* tracepoint name: omrshr.1780 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_Exit_CreatedHeaderInitFailed(P1) do { /* tracepoint name: omrshr.1781 */ \
	if ((unsigned char) omrshr_UtActive[1781] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1781u << 8) | omrshr_UtActive[1781]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_Exit_CreatedHeaderInitFailed(P1)   /* tracepoint name: omrshr.1781 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_Bad_CC_Init_Value(thr, P1, P2) do { /* tracepoint name: omrshr.1782 */ \
	if ((unsigned char) omrshr_UtActive[1782] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1782u << 8) | omrshr_UtActive[1782]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_Bad_CC_Init_Value(thr, P1, P2)   /* tracepoint name: omrshr.1782 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_Cache_Initialization_Failure(thr) do { /* tracepoint name: omrshr.1783 */ \
	if ((unsigned char) omrshr_UtActive[1783] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1783u << 8) | omrshr_UtActive[1783]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_Cache_Initialization_Failure(thr)   /* tracepoint name: omrshr.1783 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_No_Cachelets(thr, P1, P2) do { /* tracepoint name: omrshr.1784 */ \
	if ((unsigned char) omrshr_UtActive[1784] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1784u << 8) | omrshr_UtActive[1784]), "\10\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_No_Cachelets(thr, P1, P2)   /* tracepoint name: omrshr.1784 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_OSPAGE_SIZE_MISMATCH(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1785 */ \
	if ((unsigned char) omrshr_UtActive[1785] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1785u << 8) | omrshr_UtActive[1785]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_OSPAGE_SIZE_MISMATCH(thr, P1, P2, P3)   /* tracepoint name: omrshr.1785 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_Exit_CacheCorrupt(thr) do { /* tracepoint name: omrshr.1786 */ \
	if ((unsigned char) omrshr_UtActive[1786] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1786u << 8) | omrshr_UtActive[1786]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_Exit_CacheCorrupt(thr)   /* tracepoint name: omrshr.1786 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_Exit_CacheFull(thr) do { /* tracepoint name: omrshr.1787 */ \
	if ((unsigned char) omrshr_UtActive[1787] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1787u << 8) | omrshr_UtActive[1787]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_Exit_CacheFull(thr)   /* tracepoint name: omrshr.1787 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_openCacheForDestroy(P1) do { /* tracepoint name: omrshr.1788 */ \
	if ((unsigned char) omrshr_UtActive[1788] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1788u << 8) | omrshr_UtActive[1788]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_openCacheForDestroy(P1)   /* tracepoint name: omrshr.1788 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_internalAttach_corruptcachefile() do { /* tracepoint name: omrshr.1789 */ \
	if ((unsigned char) omrshr_UtActive[1789] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((1789u << 8) | omrshr_UtActive[1789]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_internalAttach_corruptcachefile()   /* tracepoint name: omrshr.1789 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitSegMutex_Event(thr) do { /* tracepoint name: omrshr.1790 */ \
	if ((unsigned char) omrshr_UtActive[1790] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1790u << 8) | omrshr_UtActive[1790]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitSegMutex_Event(thr)   /* tracepoint name: omrshr.1790 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitWriteMutex_Event(thr) do { /* tracepoint name: omrshr.1791 */ \
	if ((unsigned char) omrshr_UtActive[1791] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1791u << 8) | omrshr_UtActive[1791]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_stop_ExitWriteMutex_Event(thr)   /* tracepoint name: omrshr.1791 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_SegMutex_Event(thr) do { /* tracepoint name: omrshr.1792 */ \
	if ((unsigned char) omrshr_UtActive[1792] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1792u << 8) | omrshr_UtActive[1792]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_SegMutex_Event(thr)   /* tracepoint name: omrshr.1792 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_stringTransaction_start_WriteLock_Event(thr) do { /* tracepoint name: omrshr.1793 */ \
	if ((unsigned char) omrshr_UtActive[1793] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1793u << 8) | omrshr_UtActive[1793]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_stringTransaction_start_WriteLock_Event(thr)   /* tracepoint name: omrshr.1793 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_readCacheletHints_noManager(thr, P1) do { /* tracepoint name: omrshr.1795 */ \
	if ((unsigned char) omrshr_UtActive[1795] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1795u << 8) | omrshr_UtActive[1795]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_readCacheletHints_noManager(thr, P1)   /* tracepoint name: omrshr.1795 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_realtime_cache_not_compatible(thr) do { /* tracepoint name: omrshr.1796 */ \
	if ((unsigned char) omrshr_UtActive[1796] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1796u << 8) | omrshr_UtActive[1796]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_realtime_cache_not_compatible(thr)   /* tracepoint name: omrshr.1796 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_classStoreTransaction_start_DenyAccess_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.1798 */ \
	if ((unsigned char) omrshr_UtActive[1798] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1798u << 8) | omrshr_UtActive[1798]), "\10\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_classStoreTransaction_start_DenyAccess_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.1798 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_DenyUpdates_Event(thr) do { /* tracepoint name: omrshr.1799 */ \
	if ((unsigned char) omrshr_UtActive[1799] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1799u << 8) | omrshr_UtActive[1799]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_DenyUpdates_Event(thr)   /* tracepoint name: omrshr.1799 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_Cache_BCI_NotEnabled(thr) do { /* tracepoint name: omrshr.1966 */ \
	if ((unsigned char) omrshr_UtActive[1966] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1966u << 8) | omrshr_UtActive[1966]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_Cache_BCI_NotEnabled(thr)   /* tracepoint name: omrshr.1966 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_Cache_CacheRetransformOption_With_BCIEnabledCache(thr) do { /* tracepoint name: omrshr.1967 */ \
	if ((unsigned char) omrshr_UtActive[1967] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((1967u << 8) | omrshr_UtActive[1967]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_Cache_CacheRetransformOption_With_BCIEnabledCache(thr)   /* tracepoint name: omrshr.1967 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_Cache_DisableBCI_NotSupported(thr) do { /* tracepoint name: omrshr.2019 */ \
	if ((unsigned char) omrshr_UtActive[2019] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2019u << 8) | omrshr_UtActive[2019]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_Cache_DisableBCI_NotSupported(thr)   /* tracepoint name: omrshr.2019 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_getNumOfType_Error(P1) do { /* tracepoint name: omrshr.2020 */ \
	if ((unsigned char) omrshr_UtActive[2020] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2020u << 8) | omrshr_UtActive[2020]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ADMI_getNumOfType_Error(P1)   /* tracepoint name: omrshr.2020 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ADMI_getDataBytesForType_Error(P1) do { /* tracepoint name: omrshr.2021 */ \
	if ((unsigned char) omrshr_UtActive[2021] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2021u << 8) | omrshr_UtActive[2021]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_ADMI_getDataBytesForType_Error(P1)   /* tracepoint name: omrshr.2021 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_getNumOfType_Error(P1) do { /* tracepoint name: omrshr.2022 */ \
	if ((unsigned char) omrshr_UtActive[2022] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2022u << 8) | omrshr_UtActive[2022]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_getNumOfType_Error(P1)   /* tracepoint name: omrshr.2022 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_BDMI_getDataBytesForType_Error(P1) do { /* tracepoint name: omrshr.2023 */ \
	if ((unsigned char) omrshr_UtActive[2023] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2023u << 8) | omrshr_UtActive[2023]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_BDMI_getDataBytesForType_Error(P1)   /* tracepoint name: omrshr.2023 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_getJavacoreData_InvalidAttachedDataType(P1) do { /* tracepoint name: omrshr.2024 */ \
	if ((unsigned char) omrshr_UtActive[2024] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2024u << 8) | omrshr_UtActive[2024]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_getJavacoreData_InvalidAttachedDataType(P1)   /* tracepoint name: omrshr.2024 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_attachedTypeString_Error(P1) do { /* tracepoint name: omrshr.2025 */ \
	if ((unsigned char) omrshr_UtActive[2025] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2025u << 8) | omrshr_UtActive[2025]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_attachedTypeString_Error(P1)   /* tracepoint name: omrshr.2025 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_notifyPagesRead_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2026 */ \
	if ((unsigned char) omrshr_UtActive[2026] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2026u << 8) | omrshr_UtActive[2026]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_notifyPagesRead_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2026 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2027 */ \
	if ((unsigned char) omrshr_UtActive[2027] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2027u << 8) | omrshr_UtActive[2027]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2027 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_markStale_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2028 */ \
	if ((unsigned char) omrshr_UtActive[2028] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2028u << 8) | omrshr_UtActive[2028]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_markStale_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2028 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2029 */ \
	if ((unsigned char) omrshr_UtActive[2029] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2029u << 8) | omrshr_UtActive[2029]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2029 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2030 */ \
	if ((unsigned char) omrshr_UtActive[2030] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2030u << 8) | omrshr_UtActive[2030]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2030 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectMetadataArea_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2031 */ \
	if ((unsigned char) omrshr_UtActive[2031] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2031u << 8) | omrshr_UtActive[2031]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectMetadataArea_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2031 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectMetadataArea_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2032 */ \
	if ((unsigned char) omrshr_UtActive[2032] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2032u << 8) | omrshr_UtActive[2032]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectMetadataArea_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2032 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_releaseHeaderWriteLock_Failed(P1) do { /* tracepoint name: omrshr.2033 */ \
	if ((unsigned char) omrshr_UtActive[2033] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2033u << 8) | omrshr_UtActive[2033]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_releaseHeaderWriteLock_Failed(P1)   /* tracepoint name: omrshr.2033 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_cleanup_acquireHeaderWriteLock_Failed(P1) do { /* tracepoint name: omrshr.2034 */ \
	if ((unsigned char) omrshr_UtActive[2034] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2034u << 8) | omrshr_UtActive[2034]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_cleanup_acquireHeaderWriteLock_Failed(P1)   /* tracepoint name: omrshr.2034 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_detach_releaseHeaderWriteLock_Failed(P1) do { /* tracepoint name: omrshr.2035 */ \
	if ((unsigned char) omrshr_UtActive[2035] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2035u << 8) | omrshr_UtActive[2035]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_detach_releaseHeaderWriteLock_Failed(P1)   /* tracepoint name: omrshr.2035 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_detach_acquireHeaderWriteLock_Failed(P1) do { /* tracepoint name: omrshr.2036 */ \
	if ((unsigned char) omrshr_UtActive[2036] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2036u << 8) | omrshr_UtActive[2036]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_detach_acquireHeaderWriteLock_Failed(P1)   /* tracepoint name: omrshr.2036 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_enterMutex_Exit2_V2(P1, P2) do { /* tracepoint name: omrshr.2037 */ \
	if ((unsigned char) omrshr_UtActive[2037] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2037u << 8) | omrshr_UtActive[2037]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_enterMutex_Exit2_V2(P1, P2)   /* tracepoint name: omrshr.2037 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_enterMutex_Exit3(P1) do { /* tracepoint name: omrshr.2038 */ \
	if ((unsigned char) omrshr_UtActive[2038] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2038u << 8) | omrshr_UtActive[2038]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_enterMutex_Exit3(P1)   /* tracepoint name: omrshr.2038 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_exitMutex_Exit2_V2(P1, P2) do { /* tracepoint name: omrshr.2039 */ \
	if ((unsigned char) omrshr_UtActive[2039] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2039u << 8) | omrshr_UtActive[2039]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_exitMutex_Exit2_V2(P1, P2)   /* tracepoint name: omrshr.2039 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_runExitCode_acquireHeaderWriteLock_Failed(P1) do { /* tracepoint name: omrshr.2040 */ \
	if ((unsigned char) omrshr_UtActive[2040] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2040u << 8) | omrshr_UtActive[2040]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_runExitCode_acquireHeaderWriteLock_Failed(P1)   /* tracepoint name: omrshr.2040 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Event_OpenReadOnly_StorageKey() do { /* tracepoint name: omrshr.2041 */ \
	if ((unsigned char) omrshr_UtActive[2041] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2041u << 8) | omrshr_UtActive[2041]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Event_OpenReadOnly_StorageKey()   /* tracepoint name: omrshr.2041 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectLastUnusedPages_Entry() do { /* tracepoint name: omrshr.2042 */ \
	if ((unsigned char) omrshr_UtActive[2042] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2042u << 8) | omrshr_UtActive[2042]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_protectLastUnusedPages_Entry()   /* tracepoint name: omrshr.2042 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectLastUnusedPages_Protect(P1, P2) do { /* tracepoint name: omrshr.2043 */ \
	if ((unsigned char) omrshr_UtActive[2043] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2043u << 8) | omrshr_UtActive[2043]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_protectLastUnusedPages_Protect(P1, P2)   /* tracepoint name: omrshr.2043 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectLastUnusedPages_Exit() do { /* tracepoint name: omrshr.2044 */ \
	if ((unsigned char) omrshr_UtActive[2044] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2044u << 8) | omrshr_UtActive[2044]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_protectLastUnusedPages_Exit()   /* tracepoint name: omrshr.2044 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setRuntimeCacheFullFlags_BlockSpaceFull(thr) do { /* tracepoint name: omrshr.2045 */ \
	if ((unsigned char) omrshr_UtActive[2045] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2045u << 8) | omrshr_UtActive[2045]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setRuntimeCacheFullFlags_BlockSpaceFull(thr)   /* tracepoint name: omrshr.2045 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setRuntimeCacheFullFlags_AOTSpaceFull(thr) do { /* tracepoint name: omrshr.2046 */ \
	if ((unsigned char) omrshr_UtActive[2046] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2046u << 8) | omrshr_UtActive[2046]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setRuntimeCacheFullFlags_AOTSpaceFull(thr)   /* tracepoint name: omrshr.2046 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setRuntimeCacheFullFlags_JITSpaceFull(thr) do { /* tracepoint name: omrshr.2047 */ \
	if ((unsigned char) omrshr_UtActive[2047] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2047u << 8) | omrshr_UtActive[2047]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setRuntimeCacheFullFlags_JITSpaceFull(thr)   /* tracepoint name: omrshr.2047 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Flags_Event(thr) do { /* tracepoint name: omrshr.2049 */ \
	if ((unsigned char) omrshr_UtActive[2049] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2049u << 8) | omrshr_UtActive[2049]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_commitMetaDataROMClassIfRequired_Flags_Event(thr)   /* tracepoint name: omrshr.2049 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocateMetadataEntry_EventNewItem(thr, P1) do { /* tracepoint name: omrshr.2051 */ \
	if ((unsigned char) omrshr_UtActive[2051] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2051u << 8) | omrshr_UtActive[2051]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocateMetadataEntry_EventNewItem(thr, P1)   /* tracepoint name: omrshr.2051 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_fillCacheIfNearlyFull_CacheFullDummyDataAdded(thr, P1, P2, P3) do { /* tracepoint name: omrshr.2053 */ \
	if ((unsigned char) omrshr_UtActive[2053] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2053u << 8) | omrshr_UtActive[2053]), "\6\6\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_fillCacheIfNearlyFull_CacheFullDummyDataAdded(thr, P1, P2, P3)   /* tracepoint name: omrshr.2053 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_fillCacheIfNearlyFull_CacheFullDummyDataNotAdded(thr) do { /* tracepoint name: omrshr.2054 */ \
	if ((unsigned char) omrshr_UtActive[2054] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2054u << 8) | omrshr_UtActive[2054]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_fillCacheIfNearlyFull_CacheFullDummyDataNotAdded(thr)   /* tracepoint name: omrshr.2054 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_fillCacheIfNearlyFull_Exit(thr) do { /* tracepoint name: omrshr.2055 */ \
	if ((unsigned char) omrshr_UtActive[2055] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2055u << 8) | omrshr_UtActive[2055]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_fillCacheIfNearlyFull_Exit(thr)   /* tracepoint name: omrshr.2055 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_findAttachedData_FlagErr(thr, P1) do { /* tracepoint name: omrshr.2056 */ \
	if ((unsigned char) omrshr_UtActive[2056] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2056u << 8) | omrshr_UtActive[2056]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_findAttachedData_FlagErr(thr, P1)   /* tracepoint name: omrshr.2056 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_findROMClassResource_FailedMutex(thr, P1) do { /* tracepoint name: omrshr.2057 */ \
	if ((unsigned char) omrshr_UtActive[2057] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2057u << 8) | omrshr_UtActive[2057]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_findROMClassResource_FailedMutex(thr, P1)   /* tracepoint name: omrshr.2057 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Entry(P1) do { /* tracepoint name: omrshr.2060 */ \
	if ((unsigned char) omrshr_UtActive[2060] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2060u << 8) | omrshr_UtActive[2060]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Entry(P1)   /* tracepoint name: omrshr.2060 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Event(P1, P2) do { /* tracepoint name: omrshr.2061 */ \
	if ((unsigned char) omrshr_UtActive[2061] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2061u << 8) | omrshr_UtActive[2061]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Event(P1, P2)   /* tracepoint name: omrshr.2061 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2062 */ \
	if ((unsigned char) omrshr_UtActive[2062] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2062u << 8) | omrshr_UtActive[2062]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2062 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Exit(P1) do { /* tracepoint name: omrshr.2063 */ \
	if ((unsigned char) omrshr_UtActive[2063] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2063u << 8) | omrshr_UtActive[2063]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedMetadataRegion_Exit(P1)   /* tracepoint name: omrshr.2063 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Entry(P1) do { /* tracepoint name: omrshr.2064 */ \
	if ((unsigned char) omrshr_UtActive[2064] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2064u << 8) | omrshr_UtActive[2064]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Entry(P1)   /* tracepoint name: omrshr.2064 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Event(P1, P2) do { /* tracepoint name: omrshr.2065 */ \
	if ((unsigned char) omrshr_UtActive[2065] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2065u << 8) | omrshr_UtActive[2065]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Event(P1, P2)   /* tracepoint name: omrshr.2065 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2066 */ \
	if ((unsigned char) omrshr_UtActive[2066] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2066u << 8) | omrshr_UtActive[2066]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2066 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Exit(P1) do { /* tracepoint name: omrshr.2067 */ \
	if ((unsigned char) omrshr_UtActive[2067] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2067u << 8) | omrshr_UtActive[2067]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectUnusedSegmentRegion_Exit(P1)   /* tracepoint name: omrshr.2067 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectPageContainingAddress_Entry(P1) do { /* tracepoint name: omrshr.2068 */ \
	if ((unsigned char) omrshr_UtActive[2068] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2068u << 8) | omrshr_UtActive[2068]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectPageContainingAddress_Entry(P1)   /* tracepoint name: omrshr.2068 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectUnusedSegmentRegion_Event(P1, P2) do { /* tracepoint name: omrshr.2069 */ \
	if ((unsigned char) omrshr_UtActive[2069] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2069u << 8) | omrshr_UtActive[2069]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_protectUnusedSegmentRegion_Event(P1, P2)   /* tracepoint name: omrshr.2069 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectPageContainingAddress_setRegionPermissions_Failed(P1) do { /* tracepoint name: omrshr.2070 */ \
	if ((unsigned char) omrshr_UtActive[2070] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2070u << 8) | omrshr_UtActive[2070]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectPageContainingAddress_setRegionPermissions_Failed(P1)   /* tracepoint name: omrshr.2070 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectPageContainingAddress_Exit(P1) do { /* tracepoint name: omrshr.2071 */ \
	if ((unsigned char) omrshr_UtActive[2071] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2071u << 8) | omrshr_UtActive[2071]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_protectPageContainingAddress_Exit(P1)   /* tracepoint name: omrshr.2071 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_openCache_ExitAccessNotAllowed(P1) do { /* tracepoint name: omrshr.2072 */ \
	if ((unsigned char) omrshr_UtActive[2072] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2072u << 8) | omrshr_UtActive[2072]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_openCache_ExitAccessNotAllowed(P1)   /* tracepoint name: omrshr.2072 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_OwnerNotCreator(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2073 */ \
	if ((unsigned char) omrshr_UtActive[2073] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2073u << 8) | omrshr_UtActive[2073]), "\6\4\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_OwnerNotCreator(P1, P2, P3, P4)   /* tracepoint name: omrshr.2073 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GroupIDMatch(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2074 */ \
	if ((unsigned char) omrshr_UtActive[2074] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2074u << 8) | omrshr_UtActive[2074]), "\6\4\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GroupIDMatch(P1, P2, P3, P4)   /* tracepoint name: omrshr.2074 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_SupplementaryGroupMatch(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2075 */ \
	if ((unsigned char) omrshr_UtActive[2075] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2075u << 8) | omrshr_UtActive[2075]), "\4\6\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_SupplementaryGroupMatch(P1, P2, P3, P4)   /* tracepoint name: omrshr.2075 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GetGroupsFailed() do { /* tracepoint name: omrshr.2076 */ \
	if ((unsigned char) omrshr_UtActive[2076] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2076u << 8) | omrshr_UtActive[2076]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GetGroupsFailed()   /* tracepoint name: omrshr.2076 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GroupAccessRequired(P1) do { /* tracepoint name: omrshr.2077 */ \
	if ((unsigned char) omrshr_UtActive[2077] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2077u << 8) | omrshr_UtActive[2077]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_GroupAccessRequired(P1)   /* tracepoint name: omrshr.2077 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_OthersNotAllowed(P1) do { /* tracepoint name: omrshr.2078 */ \
	if ((unsigned char) omrshr_UtActive[2078] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2078u << 8) | omrshr_UtActive[2078]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_OthersNotAllowed(P1)   /* tracepoint name: omrshr.2078 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_ShsemStatFailed(P1) do { /* tracepoint name: omrshr.2079 */ \
	if ((unsigned char) omrshr_UtActive[2079] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2079u << 8) | omrshr_UtActive[2079]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSemaphoreAccess_ShsemStatFailed(P1)   /* tracepoint name: omrshr.2079 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_OwnerNotCreator(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2080 */ \
	if ((unsigned char) omrshr_UtActive[2080] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2080u << 8) | omrshr_UtActive[2080]), "\6\4\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_OwnerNotCreator(P1, P2, P3, P4)   /* tracepoint name: omrshr.2080 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GroupIDMatch(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2081 */ \
	if ((unsigned char) omrshr_UtActive[2081] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2081u << 8) | omrshr_UtActive[2081]), "\6\4\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GroupIDMatch(P1, P2, P3, P4)   /* tracepoint name: omrshr.2081 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_SupplementaryGroupMatch(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2082 */ \
	if ((unsigned char) omrshr_UtActive[2082] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2082u << 8) | omrshr_UtActive[2082]), "\4\6\6\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_SupplementaryGroupMatch(P1, P2, P3, P4)   /* tracepoint name: omrshr.2082 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GetGroupsFailed() do { /* tracepoint name: omrshr.2083 */ \
	if ((unsigned char) omrshr_UtActive[2083] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2083u << 8) | omrshr_UtActive[2083]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GetGroupsFailed()   /* tracepoint name: omrshr.2083 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GroupAccessRequired(P1) do { /* tracepoint name: omrshr.2084 */ \
	if ((unsigned char) omrshr_UtActive[2084] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2084u << 8) | omrshr_UtActive[2084]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_GroupAccessRequired(P1)   /* tracepoint name: omrshr.2084 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_OthersNotAllowed(P1) do { /* tracepoint name: omrshr.2085 */ \
	if ((unsigned char) omrshr_UtActive[2085] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2085u << 8) | omrshr_UtActive[2085]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_OthersNotAllowed(P1)   /* tracepoint name: omrshr.2085 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_ShmemStatFailed(P1) do { /* tracepoint name: omrshr.2086 */ \
	if ((unsigned char) omrshr_UtActive[2086] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2086u << 8) | omrshr_UtActive[2086]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_checkSharedMemoryAccess_ShmemStatFailed(P1)   /* tracepoint name: omrshr.2086 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_fileaccessallowed(P1) do { /* tracepoint name: omrshr.2087 */ \
	if ((unsigned char) omrshr_UtActive[2087] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2087u << 8) | omrshr_UtActive[2087]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_fileaccessallowed(P1)   /* tracepoint name: omrshr.2087 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_Startup_CacheIsLocked(thr, P1) do { /* tracepoint name: omrshr.2094 */ \
	if ((unsigned char) omrshr_UtActive[2094] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2094u << 8) | omrshr_UtActive[2094]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_Startup_CacheIsLocked(thr, P1)   /* tracepoint name: omrshr.2094 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_attemptNonfatalReadOnly() do { /* tracepoint name: omrshr.2095 */ \
	if ((unsigned char) omrshr_UtActive[2095] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2095u << 8) | omrshr_UtActive[2095]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_attemptNonfatalReadOnly()   /* tracepoint name: omrshr.2095 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_cacheCreationNotAllowed_readOnlyMode() do { /* tracepoint name: omrshr.2096 */ \
	if ((unsigned char) omrshr_UtActive[2096] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2096u << 8) | omrshr_UtActive[2096]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_cacheCreationNotAllowed_readOnlyMode()   /* tracepoint name: omrshr.2096 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addClasspathToCache_NotAllowedToStoreClasspaths_Exit_Null(thr) do { /* tracepoint name: omrshr.2097 */ \
	if ((unsigned char) omrshr_UtActive[2097] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2097u << 8) | omrshr_UtActive[2097]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addClasspathToCache_NotAllowedToStoreClasspaths_Exit_Null(thr)   /* tracepoint name: omrshr.2097 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_Entry(P1) do { /* tracepoint name: omrshr.2098 */ \
	if ((unsigned char) omrshr_UtActive[2098] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2098u << 8) | omrshr_UtActive[2098]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_Entry(P1)   /* tracepoint name: omrshr.2098 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_noSnapshots() do { /* tracepoint name: omrshr.2099 */ \
	if ((unsigned char) omrshr_UtActive[2099] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2099u << 8) | omrshr_UtActive[2099]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_noSnapshots()   /* tracepoint name: omrshr.2099 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_getCacheDirFailed() do { /* tracepoint name: omrshr.2100 */ \
	if ((unsigned char) omrshr_UtActive[2100] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2100u << 8) | omrshr_UtActive[2100]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_getCacheDirFailed()   /* tracepoint name: omrshr.2100 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_Exit() do { /* tracepoint name: omrshr.2101 */ \
	if ((unsigned char) omrshr_UtActive[2101] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2101u << 8) | omrshr_UtActive[2101]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_all_snapshot_Exit()   /* tracepoint name: omrshr.2101 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_Entry(P1) do { /* tracepoint name: omrshr.2102 */ \
	if ((unsigned char) omrshr_UtActive[2102] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2102u << 8) | omrshr_UtActive[2102]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_Entry(P1)   /* tracepoint name: omrshr.2102 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_fileOpenFailed(P1) do { /* tracepoint name: omrshr.2103 */ \
	if ((unsigned char) omrshr_UtActive[2103] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2103u << 8) | omrshr_UtActive[2103]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_fileOpenFailed(P1)   /* tracepoint name: omrshr.2103 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_fileGetLengthFailed(P1) do { /* tracepoint name: omrshr.2104 */ \
	if ((unsigned char) omrshr_UtActive[2104] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2104u << 8) | omrshr_UtActive[2104]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_fileGetLengthFailed(P1)   /* tracepoint name: omrshr.2104 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_fileLockFailed(P1) do { /* tracepoint name: omrshr.2105 */ \
	if ((unsigned char) omrshr_UtActive[2105] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2105u << 8) | omrshr_UtActive[2105]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_fileLockFailed(P1)   /* tracepoint name: omrshr.2105 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_fileUnlinkFailed(P1) do { /* tracepoint name: omrshr.2106 */ \
	if ((unsigned char) omrshr_UtActive[2106] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2106u << 8) | omrshr_UtActive[2106]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_fileUnlinkFailed(P1)   /* tracepoint name: omrshr.2106 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_deleteSnapshot_Exit(P1) do { /* tracepoint name: omrshr.2107 */ \
	if ((unsigned char) omrshr_UtActive[2107] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2107u << 8) | omrshr_UtActive[2107]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_deleteSnapshot_Exit(P1)   /* tracepoint name: omrshr.2107 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_snapshot_Entry(P1, P2, P3, P4) do { /* tracepoint name: omrshr.2108 */ \
	if ((unsigned char) omrshr_UtActive[2108] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2108u << 8) | omrshr_UtActive[2108]), "\6\377\6\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_snapshot_Entry(P1, P2, P3, P4)   /* tracepoint name: omrshr.2108 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_snapshot_getCacheDirFailed() do { /* tracepoint name: omrshr.2109 */ \
	if ((unsigned char) omrshr_UtActive[2109] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2109u << 8) | omrshr_UtActive[2109]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_snapshot_getCacheDirFailed()   /* tracepoint name: omrshr.2109 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CLM_j9shr_destroy_snapshot_Exit(P1) do { /* tracepoint name: omrshr.2110 */ \
	if ((unsigned char) omrshr_UtActive[2110] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2110u << 8) | omrshr_UtActive[2110]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CLM_j9shr_destroy_snapshot_Exit(P1)   /* tracepoint name: omrshr.2110 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheStatistics_stattingSnapshot() do { /* tracepoint name: omrshr.2111 */ \
	if ((unsigned char) omrshr_UtActive[2111] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2111u << 8) | omrshr_UtActive[2111]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheStatistics_stattingSnapshot()   /* tracepoint name: omrshr.2111 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_Entry(P1) do { /* tracepoint name: omrshr.2112 */ \
	if ((unsigned char) omrshr_UtActive[2112] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2112u << 8) | omrshr_UtActive[2112]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_Entry(P1)   /* tracepoint name: omrshr.2112 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_getCacheDirFailed() do { /* tracepoint name: omrshr.2113 */ \
	if ((unsigned char) omrshr_UtActive[2113] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2113u << 8) | omrshr_UtActive[2113]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_getCacheDirFailed()   /* tracepoint name: omrshr.2113 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileOpenFailed(P1) do { /* tracepoint name: omrshr.2114 */ \
	if ((unsigned char) omrshr_UtActive[2114] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2114u << 8) | omrshr_UtActive[2114]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileOpenFailed(P1)   /* tracepoint name: omrshr.2114 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileLockFailed(thr, P1) do { /* tracepoint name: omrshr.2115 */ \
	if ((unsigned char) omrshr_UtActive[2115] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2115u << 8) | omrshr_UtActive[2115]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileLockFailed(thr, P1)   /* tracepoint name: omrshr.2115 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_enterMutexFailed(thr) do { /* tracepoint name: omrshr.2116 */ \
	if ((unsigned char) omrshr_UtActive[2116] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2116u << 8) | omrshr_UtActive[2116]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_enterMutexFailed(thr)   /* tracepoint name: omrshr.2116 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileSetLengthFailed(thr, P1) do { /* tracepoint name: omrshr.2117 */ \
	if ((unsigned char) omrshr_UtActive[2117] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2117u << 8) | omrshr_UtActive[2117]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileSetLengthFailed(thr, P1)   /* tracepoint name: omrshr.2117 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileWriteFailed1(thr, P1) do { /* tracepoint name: omrshr.2118 */ \
	if ((unsigned char) omrshr_UtActive[2118] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2118u << 8) | omrshr_UtActive[2118]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileWriteFailed1(thr, P1)   /* tracepoint name: omrshr.2118 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileWriteFailed2(thr, P1, P2, P3) do { /* tracepoint name: omrshr.2119 */ \
	if ((unsigned char) omrshr_UtActive[2119] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2119u << 8) | omrshr_UtActive[2119]), "\377\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileWriteFailed2(thr, P1, P2, P3)   /* tracepoint name: omrshr.2119 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileSeekFailed(thr, P1) do { /* tracepoint name: omrshr.2120 */ \
	if ((unsigned char) omrshr_UtActive[2120] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2120u << 8) | omrshr_UtActive[2120]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileSeekFailed(thr, P1)   /* tracepoint name: omrshr.2120 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_Exit(P1, P2) do { /* tracepoint name: omrshr.2121 */ \
	if ((unsigned char) omrshr_UtActive[2121] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2121u << 8) | omrshr_UtActive[2121]), "\377\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_Exit(P1, P2)   /* tracepoint name: omrshr.2121 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_restoreFromSnapshot_Entry(P1) do { /* tracepoint name: omrshr.2122 */ \
	if ((unsigned char) omrshr_UtActive[2122] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2122u << 8) | omrshr_UtActive[2122]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_restoreFromSnapshot_Entry(P1)   /* tracepoint name: omrshr.2122 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_restoreFromSnapshot_Exit(P1, P2) do { /* tracepoint name: omrshr.2123 */ \
	if ((unsigned char) omrshr_UtActive[2123] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2123u << 8) | omrshr_UtActive[2123]), "\377\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_restoreFromSnapshot_Exit(P1, P2)   /* tracepoint name: omrshr.2123 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_Entry() do { /* tracepoint name: omrshr.2124 */ \
	if ((unsigned char) omrshr_UtActive[2124] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2124u << 8) | omrshr_UtActive[2124]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_Entry()   /* tracepoint name: omrshr.2124 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_getCacheDirFailed() do { /* tracepoint name: omrshr.2125 */ \
	if ((unsigned char) omrshr_UtActive[2125] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2125u << 8) | omrshr_UtActive[2125]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_getCacheDirFailed()   /* tracepoint name: omrshr.2125 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileNotFound(P1) do { /* tracepoint name: omrshr.2126 */ \
	if ((unsigned char) omrshr_UtActive[2126] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2126u << 8) | omrshr_UtActive[2126]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileNotFound(P1)   /* tracepoint name: omrshr.2126 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileOpenFailed(P1) do { /* tracepoint name: omrshr.2127 */ \
	if ((unsigned char) omrshr_UtActive[2127] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2127u << 8) | omrshr_UtActive[2127]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileOpenFailed(P1)   /* tracepoint name: omrshr.2127 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileAccessNotAllowed(P1) do { /* tracepoint name: omrshr.2128 */ \
	if ((unsigned char) omrshr_UtActive[2128] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2128u << 8) | omrshr_UtActive[2128]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileAccessNotAllowed(P1)   /* tracepoint name: omrshr.2128 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileSizeInvalid(P1, P2) do { /* tracepoint name: omrshr.2129 */ \
	if ((unsigned char) omrshr_UtActive[2129] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2129u << 8) | omrshr_UtActive[2129]), "\377\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileSizeInvalid(P1, P2)   /* tracepoint name: omrshr.2129 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileLockFailed(P1) do { /* tracepoint name: omrshr.2130 */ \
	if ((unsigned char) omrshr_UtActive[2130] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2130u << 8) | omrshr_UtActive[2130]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileLockFailed(P1)   /* tracepoint name: omrshr.2130 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheExist1(thr) do { /* tracepoint name: omrshr.2131 */ \
	if ((unsigned char) omrshr_UtActive[2131] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2131u << 8) | omrshr_UtActive[2131]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheExist1(thr)   /* tracepoint name: omrshr.2131 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheStartupFailed1(thr) do { /* tracepoint name: omrshr.2132 */ \
	if ((unsigned char) omrshr_UtActive[2132] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2132u << 8) | omrshr_UtActive[2132]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheStartupFailed1(thr)   /* tracepoint name: omrshr.2132 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheExist2(thr) do { /* tracepoint name: omrshr.2133 */ \
	if ((unsigned char) omrshr_UtActive[2133] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2133u << 8) | omrshr_UtActive[2133]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheExist2(thr)   /* tracepoint name: omrshr.2133 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheAttachFailed(thr) do { /* tracepoint name: omrshr.2134 */ \
	if ((unsigned char) omrshr_UtActive[2134] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2134u << 8) | omrshr_UtActive[2134]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheAttachFailed(thr)   /* tracepoint name: omrshr.2134 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileReadFailed1(thr, P1) do { /* tracepoint name: omrshr.2135 */ \
	if ((unsigned char) omrshr_UtActive[2135] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2135u << 8) | omrshr_UtActive[2135]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileReadFailed1(thr, P1)   /* tracepoint name: omrshr.2135 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileReadFailed2(thr, P1, P2, P3) do { /* tracepoint name: omrshr.2136 */ \
	if ((unsigned char) omrshr_UtActive[2136] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2136u << 8) | omrshr_UtActive[2136]), "\377\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_fileReadFailed2(thr, P1, P2, P3)   /* tracepoint name: omrshr.2136 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_headerMutexReleaseFailed(thr) do { /* tracepoint name: omrshr.2137 */ \
	if ((unsigned char) omrshr_UtActive[2137] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2137u << 8) | omrshr_UtActive[2137]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_headerMutexReleaseFailed(thr)   /* tracepoint name: omrshr.2137 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheStartupFailed2(thr) do { /* tracepoint name: omrshr.2138 */ \
	if ((unsigned char) omrshr_UtActive[2138] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2138u << 8) | omrshr_UtActive[2138]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_cacheStartupFailed2(thr)   /* tracepoint name: omrshr.2138 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_Exit(P1) do { /* tracepoint name: omrshr.2139 */ \
	if ((unsigned char) omrshr_UtActive[2139] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2139u << 8) | omrshr_UtActive[2139]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_restoreFromSnapshot_Exit(P1)   /* tracepoint name: omrshr.2139 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findfirst_Entry(P1) do { /* tracepoint name: omrshr.2140 */ \
	if ((unsigned char) omrshr_UtActive[2140] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2140u << 8) | omrshr_UtActive[2140]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findfirst_Entry(P1)   /* tracepoint name: omrshr.2140 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findfirst_NoFileFound(P1) do { /* tracepoint name: omrshr.2141 */ \
	if ((unsigned char) omrshr_UtActive[2141] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2141u << 8) | omrshr_UtActive[2141]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findfirst_NoFileFound(P1)   /* tracepoint name: omrshr.2141 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findfirst_NoSharedCacheFileFound(P1) do { /* tracepoint name: omrshr.2142 */ \
	if ((unsigned char) omrshr_UtActive[2142] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2142u << 8) | omrshr_UtActive[2142]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findfirst_NoSharedCacheFileFound(P1)   /* tracepoint name: omrshr.2142 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findfirst_Exit(P1) do { /* tracepoint name: omrshr.2143 */ \
	if ((unsigned char) omrshr_UtActive[2143] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2143u << 8) | omrshr_UtActive[2143]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findfirst_Exit(P1)   /* tracepoint name: omrshr.2143 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findnext_Entry() do { /* tracepoint name: omrshr.2144 */ \
	if ((unsigned char) omrshr_UtActive[2144] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2144u << 8) | omrshr_UtActive[2144]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findnext_Entry()   /* tracepoint name: omrshr.2144 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findnext_Exit() do { /* tracepoint name: omrshr.2145 */ \
	if ((unsigned char) omrshr_UtActive[2145] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2145u << 8) | omrshr_UtActive[2145]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findnext_Exit()   /* tracepoint name: omrshr.2145 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findclose_Entry() do { /* tracepoint name: omrshr.2146 */ \
	if ((unsigned char) omrshr_UtActive[2146] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2146u << 8) | omrshr_UtActive[2146]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findclose_Entry()   /* tracepoint name: omrshr.2146 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_findclose_Exit() do { /* tracepoint name: omrshr.2147 */ \
	if ((unsigned char) omrshr_UtActive[2147] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2147u << 8) | omrshr_UtActive[2147]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_findclose_Exit()   /* tracepoint name: omrshr.2147 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_GroupIDMatch(P1, P2) do { /* tracepoint name: omrshr.2148 */ \
	if ((unsigned char) omrshr_UtActive[2148] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2148u << 8) | omrshr_UtActive[2148]), "\6\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_GroupIDMatch(P1, P2)   /* tracepoint name: omrshr.2148 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_SupplementaryGroupMatch(P1, P2) do { /* tracepoint name: omrshr.2149 */ \
	if ((unsigned char) omrshr_UtActive[2149] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2149u << 8) | omrshr_UtActive[2149]), "\4\6", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_SupplementaryGroupMatch(P1, P2)   /* tracepoint name: omrshr.2149 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_GetGroupsFailed() do { /* tracepoint name: omrshr.2150 */ \
	if ((unsigned char) omrshr_UtActive[2150] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2150u << 8) | omrshr_UtActive[2150]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_GetGroupsFailed()   /* tracepoint name: omrshr.2150 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_GroupAccessRequired() do { /* tracepoint name: omrshr.2151 */ \
	if ((unsigned char) omrshr_UtActive[2151] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2151u << 8) | omrshr_UtActive[2151]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_GroupAccessRequired()   /* tracepoint name: omrshr.2151 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_OthersNotAllowed() do { /* tracepoint name: omrshr.2152 */ \
	if ((unsigned char) omrshr_UtActive[2152] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2152u << 8) | omrshr_UtActive[2152]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_OthersNotAllowed()   /* tracepoint name: omrshr.2152 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_File_checkCacheFileAccess_FileStatFailed() do { /* tracepoint name: omrshr.2153 */ \
	if ((unsigned char) omrshr_UtActive[2153] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2153u << 8) | omrshr_UtActive[2153]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_File_checkCacheFileAccess_FileStatFailed()   /* tracepoint name: omrshr.2153 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_shmSizeZeroDiffAddrMode() do { /* tracepoint name: omrshr.2154 */ \
	if ((unsigned char) omrshr_UtActive[2154] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2154u << 8) | omrshr_UtActive[2154]), NULL);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_getCacheStatsHelper_shmSizeZeroDiffAddrMode()   /* tracepoint name: omrshr.2154 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_AcquireMutexFailed(thr) do { /* tracepoint name: omrshr.2155 */ \
	if ((unsigned char) omrshr_UtActive[2155] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2155u << 8) | omrshr_UtActive[2155]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_unprotectHeaderReadWriteArea_AcquireMutexFailed(thr)   /* tracepoint name: omrshr.2155 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_protectHeaderReadWriteArea_ReleaseMutexFailed(thr) do { /* tracepoint name: omrshr.2156 */ \
	if ((unsigned char) omrshr_UtActive[2156] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2156u << 8) | omrshr_UtActive[2156]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_protectHeaderReadWriteArea_ReleaseMutexFailed(thr)   /* tracepoint name: omrshr.2156 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_runExitCode_ReleaseMutexFailed(thr) do { /* tracepoint name: omrshr.2157 */ \
	if ((unsigned char) omrshr_UtActive[2157] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2157u << 8) | omrshr_UtActive[2157]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_runExitCode_ReleaseMutexFailed(thr)   /* tracepoint name: omrshr.2157 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_aotMethodOperation_Entry(thr, P1) do { /* tracepoint name: omrshr.2158 */ \
	if ((unsigned char) omrshr_UtActive[2158] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2158u << 8) | omrshr_UtActive[2158]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_aotMethodOperation_Entry(thr, P1)   /* tracepoint name: omrshr.2158 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_aotMethodOperation_Exit(thr, P1) do { /* tracepoint name: omrshr.2159 */ \
	if ((unsigned char) omrshr_UtActive[2159] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2159u << 8) | omrshr_UtActive[2159]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_aotMethodOperation_Exit(thr, P1)   /* tracepoint name: omrshr.2159 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperation_Entry(thr) do { /* tracepoint name: omrshr.2160 */ \
	if ((unsigned char) omrshr_UtActive[2160] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2160u << 8) | omrshr_UtActive[2160]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperation_Entry(thr)   /* tracepoint name: omrshr.2160 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperation_numSpecsNegative(thr, P1) do { /* tracepoint name: omrshr.2161 */ \
	if ((unsigned char) omrshr_UtActive[2161] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2161u << 8) | omrshr_UtActive[2161]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperation_numSpecsNegative(thr, P1)   /* tracepoint name: omrshr.2161 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperation_numSpecsTooMany(thr, P1) do { /* tracepoint name: omrshr.2162 */ \
	if ((unsigned char) omrshr_UtActive[2162] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2162u << 8) | omrshr_UtActive[2162]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperation_numSpecsTooMany(thr, P1)   /* tracepoint name: omrshr.2162 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperation_methodSpecsFormatWrong(thr) do { /* tracepoint name: omrshr.2163 */ \
	if ((unsigned char) omrshr_UtActive[2163] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2163u << 8) | omrshr_UtActive[2163]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperation_methodSpecsFormatWrong(thr)   /* tracepoint name: omrshr.2163 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperation_Exit(thr, P1) do { /* tracepoint name: omrshr.2164 */ \
	if ((unsigned char) omrshr_UtActive[2164] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2164u << 8) | omrshr_UtActive[2164]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperation_Exit(thr, P1)   /* tracepoint name: omrshr.2164 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperationHelper_Entry(thr) do { /* tracepoint name: omrshr.2165 */ \
	if ((unsigned char) omrshr_UtActive[2165] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2165u << 8) | omrshr_UtActive[2165]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperationHelper_Entry(thr)   /* tracepoint name: omrshr.2165 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_aotMethodOperationHelper_Exit(thr, P1) do { /* tracepoint name: omrshr.2166 */ \
	if ((unsigned char) omrshr_UtActive[2166] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2166u << 8) | omrshr_UtActive[2166]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_aotMethodOperationHelper_Exit(thr, P1)   /* tracepoint name: omrshr.2166 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_fillMethodSpecTable_Entry() do { /* tracepoint name: omrshr.2167 */ \
	if ((unsigned char) omrshr_UtActive[2167] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2167u << 8) | omrshr_UtActive[2167]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_fillMethodSpecTable_Entry()   /* tracepoint name: omrshr.2167 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_fillMethodSpecTable_Exit(P1) do { /* tracepoint name: omrshr.2168 */ \
	if ((unsigned char) omrshr_UtActive[2168] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2168u << 8) | omrshr_UtActive[2168]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_fillMethodSpecTable_Exit(P1)   /* tracepoint name: omrshr.2168 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit10(thr) do { /* tracepoint name: omrshr.2169 */ \
	if ((unsigned char) omrshr_UtActive[2169] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2169u << 8) | omrshr_UtActive[2169]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit10(thr)   /* tracepoint name: omrshr.2169 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_startup_Exit11(thr) do { /* tracepoint name: omrshr.2170 */ \
	if ((unsigned char) omrshr_UtActive[2170] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2170u << 8) | omrshr_UtActive[2170]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_startup_Exit11(thr)   /* tracepoint name: omrshr.2170 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_setGroupAccessFailed(P1) do { /* tracepoint name: omrshr.2171 */ \
	if ((unsigned char) omrshr_UtActive[2171] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2171u << 8) | omrshr_UtActive[2171]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_setGroupAccessFailed(P1)   /* tracepoint name: omrshr.2171 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_badFileStat(P1) do { /* tracepoint name: omrshr.2172 */ \
	if ((unsigned char) omrshr_UtActive[2172] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2172u << 8) | omrshr_UtActive[2172]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_badFileStat(P1)   /* tracepoint name: omrshr.2172 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_setSemaphoreGroupAccessFailed(P1) do { /* tracepoint name: omrshr.2173 */ \
	if ((unsigned char) omrshr_UtActive[2173] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2173u << 8) | omrshr_UtActive[2173]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_setSemaphoreGroupAccessFailed(P1)   /* tracepoint name: omrshr.2173 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_badSemaphoreStat(P1) do { /* tracepoint name: omrshr.2174 */ \
	if ((unsigned char) omrshr_UtActive[2174] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2174u << 8) | omrshr_UtActive[2174]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_badSemaphoreStat(P1)   /* tracepoint name: omrshr.2174 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_setSharedMemoryGroupAccessFailed(P1) do { /* tracepoint name: omrshr.2175 */ \
	if ((unsigned char) omrshr_UtActive[2175] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2175u << 8) | omrshr_UtActive[2175]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_setSharedMemoryGroupAccessFailed(P1)   /* tracepoint name: omrshr.2175 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_startup_badSharedMemoryStat(P1) do { /* tracepoint name: omrshr.2176 */ \
	if ((unsigned char) omrshr_UtActive[2176] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2176u << 8) | omrshr_UtActive[2176]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_startup_badSharedMemoryStat(P1)   /* tracepoint name: omrshr.2176 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_setGroupAccessFailed(P1) do { /* tracepoint name: omrshr.2177 */ \
	if ((unsigned char) omrshr_UtActive[2177] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2177u << 8) | omrshr_UtActive[2177]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_setGroupAccessFailed(P1)   /* tracepoint name: omrshr.2177 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_startup_badFileStat(P1) do { /* tracepoint name: omrshr.2178 */ \
	if ((unsigned char) omrshr_UtActive[2178] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2178u << 8) | omrshr_UtActive[2178]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_startup_badFileStat(P1)   /* tracepoint name: omrshr.2178 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_setGroupAccessFailed(thr, P1) do { /* tracepoint name: omrshr.2179 */ \
	if ((unsigned char) omrshr_UtActive[2179] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2179u << 8) | omrshr_UtActive[2179]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_setGroupAccessFailed(thr, P1)   /* tracepoint name: omrshr.2179 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileStatFailed(thr, P1) do { /* tracepoint name: omrshr.2180 */ \
	if ((unsigned char) omrshr_UtActive[2180] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2180u << 8) | omrshr_UtActive[2180]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_createCacheSnapshot_fileStatFailed(thr, P1)   /* tracepoint name: omrshr.2180 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_SHR_CM_findROMClass_metadataAccess  (omrshr_UtActive[2181] != 0)
#define Trc_SHR_CM_findROMClass_metadataAccess(thr, P1, P2) do { /* tracepoint name: omrshr.2181 */ \
	if ((unsigned char) omrshr_UtActive[2181] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2181u << 8) | omrshr_UtActive[2181]), "\377\6", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_SHR_CM_findROMClass_metadataAccess  (0)
#define Trc_SHR_CM_findROMClass_metadataAccess(thr, P1, P2)   /* tracepoint name: omrshr.2181 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_SHR_CM_findCompiledMethod_metadataAccess  (omrshr_UtActive[2182] != 0)
#define Trc_SHR_CM_findCompiledMethod_metadataAccess(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.2182 */ \
	if ((unsigned char) omrshr_UtActive[2182] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2182u << 8) | omrshr_UtActive[2182]), "\12\377\12\377\12\377\6", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define TrcEnabled_Trc_SHR_CM_findCompiledMethod_metadataAccess  (0)
#define Trc_SHR_CM_findCompiledMethod_metadataAccess(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.2182 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAccessedShrCacheMetadataMinimum(thr, P1) do { /* tracepoint name: omrshr.2183 */ \
	if ((unsigned char) omrshr_UtActive[2183] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2183u << 8) | omrshr_UtActive[2183]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAccessedShrCacheMetadataMinimum(thr, P1)   /* tracepoint name: omrshr.2183 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_updateAccessedShrCacheMetadataMaximum(thr, P1) do { /* tracepoint name: omrshr.2184 */ \
	if ((unsigned char) omrshr_UtActive[2184] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2184u << 8) | omrshr_UtActive[2184]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CM_updateAccessedShrCacheMetadataMaximum(thr, P1)   /* tracepoint name: omrshr.2184 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_j9shr_dontNeedMetadata(thr) do { /* tracepoint name: omrshr.2185 */ \
	if ((unsigned char) omrshr_UtActive[2185] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2185u << 8) | omrshr_UtActive[2185]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_j9shr_dontNeedMetadata(thr)   /* tracepoint name: omrshr.2185 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_protectPartiallyFilledPages_Entry(thr) do { /* tracepoint name: omrshr.2186 */ \
	if ((unsigned char) omrshr_UtActive[2186] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2186u << 8) | omrshr_UtActive[2186]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_protectPartiallyFilledPages_Entry(thr)   /* tracepoint name: omrshr.2186 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_protectPartiallyFilledPages_FailedToAcquireWriteMutex(thr) do { /* tracepoint name: omrshr.2187 */ \
	if ((unsigned char) omrshr_UtActive[2187] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2187u << 8) | omrshr_UtActive[2187]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_protectPartiallyFilledPages_FailedToAcquireWriteMutex(thr)   /* tracepoint name: omrshr.2187 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_protectPartiallyFilledPages_mprotectPartialPagesNotSet(thr) do { /* tracepoint name: omrshr.2188 */ \
	if ((unsigned char) omrshr_UtActive[2188] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2188u << 8) | omrshr_UtActive[2188]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_protectPartiallyFilledPages_mprotectPartialPagesNotSet(thr)   /* tracepoint name: omrshr.2188 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_protectPartiallyFilledPages_Exit(thr) do { /* tracepoint name: omrshr.2189 */ \
	if ((unsigned char) omrshr_UtActive[2189] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2189u << 8) | omrshr_UtActive[2189]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_protectPartiallyFilledPages_Exit(thr)   /* tracepoint name: omrshr.2189 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_Entry(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2190 */ \
	if ((unsigned char) omrshr_UtActive[2190] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2190u << 8) | omrshr_UtActive[2190]), "\6\4\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_Entry(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2190 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_StartupNotComplete(thr) do { /* tracepoint name: omrshr.2191 */ \
	if ((unsigned char) omrshr_UtActive[2191] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2191u << 8) | omrshr_UtActive[2191]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_StartupNotComplete(thr)   /* tracepoint name: omrshr.2191 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_AddrPageAligned(thr) do { /* tracepoint name: omrshr.2192 */ \
	if ((unsigned char) omrshr_UtActive[2192] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2192u << 8) | omrshr_UtActive[2192]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_AddrPageAligned(thr)   /* tracepoint name: omrshr.2192 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_Event(thr, P1, P2, P3) do { /* tracepoint name: omrshr.2193 */ \
	if ((unsigned char) omrshr_UtActive[2193] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2193u << 8) | omrshr_UtActive[2193]), "\6\6\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_Event(thr, P1, P2, P3)   /* tracepoint name: omrshr.2193 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_setRegionPermissions_Failed(thr, P1) do { /* tracepoint name: omrshr.2194 */ \
	if ((unsigned char) omrshr_UtActive[2194] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2194u << 8) | omrshr_UtActive[2194]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_setRegionPermissions_Failed(thr, P1)   /* tracepoint name: omrshr.2194 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_NotDone(thr) do { /* tracepoint name: omrshr.2195 */ \
	if ((unsigned char) omrshr_UtActive[2195] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2195u << 8) | omrshr_UtActive[2195]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_NotDone(thr)   /* tracepoint name: omrshr.2195 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_changePartialPageProtection_Exit(thr) do { /* tracepoint name: omrshr.2196 */ \
	if ((unsigned char) omrshr_UtActive[2196] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2196u << 8) | omrshr_UtActive[2196]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_changePartialPageProtection_Exit(thr)   /* tracepoint name: omrshr.2196 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setCacheAreaBoundaries_infeasibleSoftMaxBytes(thr, P1, P2) do { /* tracepoint name: omrshr.2197 */ \
	if ((unsigned char) omrshr_UtActive[2197] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2197u << 8) | omrshr_UtActive[2197]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_setCacheAreaBoundaries_infeasibleSoftMaxBytes(thr, P1, P2)   /* tracepoint name: omrshr.2197 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocate_softMaxBytesReached(thr, P1) do { /* tracepoint name: omrshr.2198 */ \
	if ((unsigned char) omrshr_UtActive[2198] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2198u << 8) | omrshr_UtActive[2198]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocate_softMaxBytesReached(thr, P1)   /* tracepoint name: omrshr.2198 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_allocateClassDebugData_EventSoftMaxBytesReached(thr, P1) do { /* tracepoint name: omrshr.2199 */ \
	if ((unsigned char) omrshr_UtActive[2199] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2199u << 8) | omrshr_UtActive[2199]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_allocateClassDebugData_EventSoftMaxBytesReached(thr, P1)   /* tracepoint name: omrshr.2199 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_fillCacheIfNearlyFull_Entry1(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2200 */ \
	if ((unsigned char) omrshr_UtActive[2200] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2200u << 8) | omrshr_UtActive[2200]), "\4\4\4\4", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_CC_fillCacheIfNearlyFull_Entry1(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2200 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setRuntimeCacheFullFlags_availableSpaceFull(thr) do { /* tracepoint name: omrshr.2201 */ \
	if ((unsigned char) omrshr_UtActive[2201] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2201u << 8) | omrshr_UtActive[2201]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_setRuntimeCacheFullFlags_availableSpaceFull(thr)   /* tracepoint name: omrshr.2201 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_setSoftMaxBytes(thr, P1) do { /* tracepoint name: omrshr.2202 */ \
	if ((unsigned char) omrshr_UtActive[2202] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2202u << 8) | omrshr_UtActive[2202]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_setSoftMaxBytes(thr, P1)   /* tracepoint name: omrshr.2202 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_Entry(thr) do { /* tracepoint name: omrshr.2203 */ \
	if ((unsigned char) omrshr_UtActive[2203] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2203u << 8) | omrshr_UtActive[2203]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_Entry(thr)   /* tracepoint name: omrshr.2203 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_cacheOpenReadOnly(thr) do { /* tracepoint name: omrshr.2204 */ \
	if ((unsigned char) omrshr_UtActive[2204] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2204u << 8) | omrshr_UtActive[2204]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_cacheOpenReadOnly(thr)   /* tracepoint name: omrshr.2204 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_enterWriteMutexFailed(thr) do { /* tracepoint name: omrshr.2205 */ \
	if ((unsigned char) omrshr_UtActive[2205] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2205u << 8) | omrshr_UtActive[2205]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_enterWriteMutexFailed(thr)   /* tracepoint name: omrshr.2205 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softMaxSizeTooBig(thr, P1, P2) do { /* tracepoint name: omrshr.2206 */ \
	if ((unsigned char) omrshr_UtActive[2206] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2206u << 8) | omrshr_UtActive[2206]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softMaxSizeTooBig(thr, P1, P2)   /* tracepoint name: omrshr.2206 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softMaxSizeTooSmall(thr, P1, P2) do { /* tracepoint name: omrshr.2207 */ \
	if ((unsigned char) omrshr_UtActive[2207] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2207u << 8) | omrshr_UtActive[2207]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softMaxSizeTooSmall(thr, P1, P2)   /* tracepoint name: omrshr.2207 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTGreaterThanMaxAOT(thr, P1, P2) do { /* tracepoint name: omrshr.2208 */ \
	if ((unsigned char) omrshr_UtActive[2208] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2208u << 8) | omrshr_UtActive[2208]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTGreaterThanMaxAOT(thr, P1, P2)   /* tracepoint name: omrshr.2208 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTSmallerThanUsedAOT(thr, P1, P2) do { /* tracepoint name: omrshr.2209 */ \
	if ((unsigned char) omrshr_UtActive[2209] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2209u << 8) | omrshr_UtActive[2209]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTSmallerThanUsedAOT(thr, P1, P2)   /* tracepoint name: omrshr.2209 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minJITGreaterThanMaxJIT(thr, P1, P2) do { /* tracepoint name: omrshr.2210 */ \
	if ((unsigned char) omrshr_UtActive[2210] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2210u << 8) | omrshr_UtActive[2210]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minJITGreaterThanMaxJIT(thr, P1, P2)   /* tracepoint name: omrshr.2210 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITSmallerThanUsedJIT(thr, P1, P2) do { /* tracepoint name: omrshr.2211 */ \
	if ((unsigned char) omrshr_UtActive[2211] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2211u << 8) | omrshr_UtActive[2211]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITSmallerThanUsedJIT(thr, P1, P2)   /* tracepoint name: omrshr.2211 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_totalUsedBytesGreaterThanMaxLimit(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.2212 */ \
	if ((unsigned char) omrshr_UtActive[2212] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2212u << 8) | omrshr_UtActive[2212]), "\4\4\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_totalUsedBytesGreaterThanMaxLimit(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.2212 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTGreaterThanMaxLimit(thr, P1, P2) do { /* tracepoint name: omrshr.2213 */ \
	if ((unsigned char) omrshr_UtActive[2213] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2213u << 8) | omrshr_UtActive[2213]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTGreaterThanMaxLimit(thr, P1, P2)   /* tracepoint name: omrshr.2213 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITGreaterThanMaxLimit(thr, P1, P2) do { /* tracepoint name: omrshr.2214 */ \
	if ((unsigned char) omrshr_UtActive[2214] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2214u << 8) | omrshr_UtActive[2214]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITGreaterThanMaxLimit(thr, P1, P2)   /* tracepoint name: omrshr.2214 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTIncreased(thr) do { /* tracepoint name: omrshr.2215 */ \
	if ((unsigned char) omrshr_UtActive[2215] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2215u << 8) | omrshr_UtActive[2215]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTIncreased(thr)   /* tracepoint name: omrshr.2215 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITIncreased(thr) do { /* tracepoint name: omrshr.2216 */ \
	if ((unsigned char) omrshr_UtActive[2216] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2216u << 8) | omrshr_UtActive[2216]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITIncreased(thr)   /* tracepoint name: omrshr.2216 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softmxIncreased(thr) do { /* tracepoint name: omrshr.2217 */ \
	if ((unsigned char) omrshr_UtActive[2217] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2217u << 8) | omrshr_UtActive[2217]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_softmxIncreased(thr)   /* tracepoint name: omrshr.2217 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTminJITDecreased(thr) do { /* tracepoint name: omrshr.2218 */ \
	if ((unsigned char) omrshr_UtActive[2218] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2218u << 8) | omrshr_UtActive[2218]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTminJITDecreased(thr)   /* tracepoint name: omrshr.2218 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTminJITIncreased(thr) do { /* tracepoint name: omrshr.2219 */ \
	if ((unsigned char) omrshr_UtActive[2219] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2219u << 8) | omrshr_UtActive[2219]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTminJITIncreased(thr)   /* tracepoint name: omrshr.2219 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTValueSet(thr, P1) do { /* tracepoint name: omrshr.2220 */ \
	if ((unsigned char) omrshr_UtActive[2220] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2220u << 8) | omrshr_UtActive[2220]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minAOTValueSet(thr, P1)   /* tracepoint name: omrshr.2220 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTValueSet(thr, P1) do { /* tracepoint name: omrshr.2221 */ \
	if ((unsigned char) omrshr_UtActive[2221] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2221u << 8) | omrshr_UtActive[2221]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxAOTValueSet(thr, P1)   /* tracepoint name: omrshr.2221 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minJITValueSet(thr, P1) do { /* tracepoint name: omrshr.2222 */ \
	if ((unsigned char) omrshr_UtActive[2222] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2222u << 8) | omrshr_UtActive[2222]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_minJITValueSet(thr, P1)   /* tracepoint name: omrshr.2222 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITValueSet(thr, P1) do { /* tracepoint name: omrshr.2223 */ \
	if ((unsigned char) omrshr_UtActive[2223] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2223u << 8) | omrshr_UtActive[2223]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_maxJITValueSet(thr, P1)   /* tracepoint name: omrshr.2223 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_Exit(thr) do { /* tracepoint name: omrshr.2224 */ \
	if ((unsigned char) omrshr_UtActive[2224] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2224u << 8) | omrshr_UtActive[2224]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_Exit(thr)   /* tracepoint name: omrshr.2224 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_Entry(thr) do { /* tracepoint name: omrshr.2225 */ \
	if ((unsigned char) omrshr_UtActive[2225] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2225u << 8) | omrshr_UtActive[2225]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_Entry(thr)   /* tracepoint name: omrshr.2225 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_flagUnset(thr, P1) do { /* tracepoint name: omrshr.2226 */ \
	if ((unsigned char) omrshr_UtActive[2226] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2226u << 8) | omrshr_UtActive[2226]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_flagUnset(thr, P1)   /* tracepoint name: omrshr.2226 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_flagSet(thr, P1) do { /* tracepoint name: omrshr.2227 */ \
	if ((unsigned char) omrshr_UtActive[2227] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2227u << 8) | omrshr_UtActive[2227]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_flagSet(thr, P1)   /* tracepoint name: omrshr.2227 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_Exit(thr) do { /* tracepoint name: omrshr.2228 */ \
	if ((unsigned char) omrshr_UtActive[2228] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2228u << 8) | omrshr_UtActive[2228]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_Exit(thr)   /* tracepoint name: omrshr.2228 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unsetCacheHeaderFullFlags_Entry(thr, P1) do { /* tracepoint name: omrshr.2229 */ \
	if ((unsigned char) omrshr_UtActive[2229] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2229u << 8) | omrshr_UtActive[2229]), "\6", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_unsetCacheHeaderFullFlags_Entry(thr, P1)   /* tracepoint name: omrshr.2229 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_unsetCacheHeaderFullFlags_Exit(thr) do { /* tracepoint name: omrshr.2230 */ \
	if ((unsigned char) omrshr_UtActive[2230] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2230u << 8) | omrshr_UtActive[2230]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_unsetCacheHeaderFullFlags_Exit(thr)   /* tracepoint name: omrshr.2230 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initializeDataHeader_callinginit3(P1, P2, P3, P4, P5, P6, P7, P8) do { /* tracepoint name: omrshr.2231 */ \
	if ((unsigned char) omrshr_UtActive[2231] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2231u << 8) | omrshr_UtActive[2231]), "\6\6\6\6\6\6\6\6", P1, P2, P3, P4, P5, P6, P7, P8);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initializeDataHeader_callinginit3(P1, P2, P3, P4, P5, P6, P7, P8)   /* tracepoint name: omrshr.2231 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Mmap_initializeDataHeader_softMaxBytesTooBig(P1) do { /* tracepoint name: omrshr.2232 */ \
	if ((unsigned char) omrshr_UtActive[2232] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2232u << 8) | omrshr_UtActive[2232]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Mmap_initializeDataHeader_softMaxBytesTooBig(P1)   /* tracepoint name: omrshr.2232 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_Sysv_initializeHeader_softMaxBytesTooBig(P1) do { /* tracepoint name: omrshr.2233 */ \
	if ((unsigned char) omrshr_UtActive[2233] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2233u << 8) | omrshr_UtActive[2233]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_Sysv_initializeHeader_softMaxBytesTooBig(P1)   /* tracepoint name: omrshr.2233 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_softFull_Event(thr) do { /* tracepoint name: omrshr.2234 */ \
	if ((unsigned char) omrshr_UtActive[2234] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2234u << 8) | omrshr_UtActive[2234]), NULL);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_softFull_Event(thr)   /* tracepoint name: omrshr.2234 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_Enter(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.2235 */ \
	if ((unsigned char) omrshr_UtActive[2235] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2235u << 8) | omrshr_UtActive[2235]), "\6\6\6\6\6\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_Enter(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.2235 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_MprotectDisabled_Event(thr) do { /* tracepoint name: omrshr.2236 */ \
	if ((unsigned char) omrshr_UtActive[2236] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2236u << 8) | omrshr_UtActive[2236]), NULL);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_MprotectDisabled_Event(thr)   /* tracepoint name: omrshr.2236 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetAllDebugData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2237 */ \
	if ((unsigned char) omrshr_UtActive[2237] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2237u << 8) | omrshr_UtActive[2237]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetAllDebugData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2237 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_SetAllDebugData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2238 */ \
	if ((unsigned char) omrshr_UtActive[2238] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2238u << 8) | omrshr_UtActive[2238]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_SetAllDebugData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2238 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetLineNumberTableData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2239 */ \
	if ((unsigned char) omrshr_UtActive[2239] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2239u << 8) | omrshr_UtActive[2239]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetLineNumberTableData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2239 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_SetLineNumberTableData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2240 */ \
	if ((unsigned char) omrshr_UtActive[2240] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2240u << 8) | omrshr_UtActive[2240]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_SetLineNumberTableData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2240 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetLocalVariableTableData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2241 */ \
	if ((unsigned char) omrshr_UtActive[2241] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2241u << 8) | omrshr_UtActive[2241]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_CouldNotSetLocalVariableTableData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2241 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_SetLocalVariableTableData_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2242 */ \
	if ((unsigned char) omrshr_UtActive[2242] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2242u << 8) | omrshr_UtActive[2242]), "\6\6\4\6", P1, P2, P3, P4);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_SetLocalVariableTableData_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2242 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_ClassDebugData_setPermission_Exit(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.2243 */ \
	if ((unsigned char) omrshr_UtActive[2243] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2243u << 8) | omrshr_UtActive[2243]), "\6\6\6\6\6\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_ClassDebugData_setPermission_Exit(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.2243 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_tryAdjustMinMaxSizes_cacheFull(thr) do { /* tracepoint name: omrshr.2244 */ \
	if ((unsigned char) omrshr_UtActive[2244] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2244u << 8) | omrshr_UtActive[2244]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_tryAdjustMinMaxSizes_cacheFull(thr)   /* tracepoint name: omrshr.2244 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_maxAOTIncreased(thr, P1) do { /* tracepoint name: omrshr.2245 */ \
	if ((unsigned char) omrshr_UtActive[2245] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2245u << 8) | omrshr_UtActive[2245]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_maxAOTIncreased(thr, P1)   /* tracepoint name: omrshr.2245 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_updateRuntimeFullFlags_maxJITIncreased(thr, P1) do { /* tracepoint name: omrshr.2246 */ \
	if ((unsigned char) omrshr_UtActive[2246] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2246u << 8) | omrshr_UtActive[2246]), "\4", P1);} \
	} while(0)
#else
#define Trc_SHR_CC_updateRuntimeFullFlags_maxJITIncreased(thr, P1)   /* tracepoint name: omrshr.2246 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_increaseUnstoredBytes_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.2247 */ \
	if ((unsigned char) omrshr_UtActive[2247] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2247u << 8) | omrshr_UtActive[2247]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CC_increaseUnstoredBytes_Entry(P1, P2, P3)   /* tracepoint name: omrshr.2247 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_increaseUnstoredBytes_softmxUnstoredBytesIncreased(P1, P2) do { /* tracepoint name: omrshr.2248 */ \
	if ((unsigned char) omrshr_UtActive[2248] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2248u << 8) | omrshr_UtActive[2248]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_increaseUnstoredBytes_softmxUnstoredBytesIncreased(P1, P2)   /* tracepoint name: omrshr.2248 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_increaseUnstoredBytes_maxAOTUnstoredBytesIncreased(P1, P2) do { /* tracepoint name: omrshr.2249 */ \
	if ((unsigned char) omrshr_UtActive[2249] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2249u << 8) | omrshr_UtActive[2249]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_increaseUnstoredBytes_maxAOTUnstoredBytesIncreased(P1, P2)   /* tracepoint name: omrshr.2249 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_increaseUnstoredBytes_maxJITUnstoredBytesIncreased(P1, P2) do { /* tracepoint name: omrshr.2250 */ \
	if ((unsigned char) omrshr_UtActive[2250] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2250u << 8) | omrshr_UtActive[2250]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CC_increaseUnstoredBytes_maxJITUnstoredBytesIncreased(P1, P2)   /* tracepoint name: omrshr.2250 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CC_increaseUnstoredBytes_Exit() do { /* tracepoint name: omrshr.2251 */ \
	if ((unsigned char) omrshr_UtActive[2251] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2251u << 8) | omrshr_UtActive[2251]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CC_increaseUnstoredBytes_Exit()   /* tracepoint name: omrshr.2251 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_increaseTransactionUnstoredBytes_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.2252 */ \
	if ((unsigned char) omrshr_UtActive[2252] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2252u << 8) | omrshr_UtActive[2252]), "\4\12\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_increaseTransactionUnstoredBytes_Entry(P1, P2, P3)   /* tracepoint name: omrshr.2252 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_increaseTransactionUnstoredBytes_Exit(P1, P2) do { /* tracepoint name: omrshr.2253 */ \
	if ((unsigned char) omrshr_UtActive[2253] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2253u << 8) | omrshr_UtActive[2253]), "\4\4", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_CM_increaseTransactionUnstoredBytes_Exit(P1, P2)   /* tracepoint name: omrshr.2253 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_increaseUnstoredBytes_Entry(P1, P2, P3) do { /* tracepoint name: omrshr.2254 */ \
	if ((unsigned char) omrshr_UtActive[2254] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2254u << 8) | omrshr_UtActive[2254]), "\4\4\4", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_CM_increaseUnstoredBytes_Entry(P1, P2, P3)   /* tracepoint name: omrshr.2254 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_increaseUnstoredBytes_Exit() do { /* tracepoint name: omrshr.2255 */ \
	if ((unsigned char) omrshr_UtActive[2255] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2255u << 8) | omrshr_UtActive[2255]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_increaseUnstoredBytes_Exit()   /* tracepoint name: omrshr.2255 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_addByteDataToCache_Exit1(thr) do { /* tracepoint name: omrshr.2256 */ \
	if ((unsigned char) omrshr_UtActive[2256] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2256u << 8) | omrshr_UtActive[2256]), NULL);} \
	} while(0)
#else
#define Trc_SHR_CM_addByteDataToCache_Exit1(thr)   /* tracepoint name: omrshr.2256 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_storeSharedData_exit1(thr) do { /* tracepoint name: omrshr.2257 */ \
	if ((unsigned char) omrshr_UtActive[2257] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2257u << 8) | omrshr_UtActive[2257]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_storeSharedData_exit1(thr)   /* tracepoint name: omrshr.2257 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClass_Entry3(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.2258 */ \
	if ((unsigned char) omrshr_UtActive[2258] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2258u << 8) | omrshr_UtActive[2258]), "\12\377\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClass_Entry3(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.2258 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_API_j9shr_createSharedClass_Entry3(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: omrshr.2259 */ \
	if ((unsigned char) omrshr_UtActive[2259] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2259u << 8) | omrshr_UtActive[2259]), "\12\377\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define Trc_SHR_API_j9shr_createSharedClass_Entry3(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: omrshr.2259 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_CM_allocateROMClass_Exit3(thr, P1, P2, P3, P4, P5, P6, P7) do { /* tracepoint name: omrshr.2260 */ \
	if ((unsigned char) omrshr_UtActive[2260] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2260u << 8) | omrshr_UtActive[2260]), "\4\12\377\6\6\6\4", P1, P2, P3, P4, P5, P6, P7);} \
	} while(0)
#else
#define Trc_SHR_CM_allocateROMClass_Exit3(thr, P1, P2, P3, P4, P5, P6, P7)   /* tracepoint name: omrshr.2260 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_SHR_INIT_isClassFromPatchedModule_ClassFromPatchedModule_Event  (omrshr_UtActive[2261] != 0)
#define Trc_SHR_INIT_isClassFromPatchedModule_ClassFromPatchedModule_Event(thr, P1, P2, P3, P4) do { /* tracepoint name: omrshr.2261 */ \
	if ((unsigned char) omrshr_UtActive[2261] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2261u << 8) | omrshr_UtActive[2261]), "\12\377\12\377", P1, P2, P3, P4);} \
	} while(0)
#else
#define TrcEnabled_Trc_SHR_INIT_isClassFromPatchedModule_ClassFromPatchedModule_Event  (0)
#define Trc_SHR_INIT_isClassFromPatchedModule_ClassFromPatchedModule_Event(thr, P1, P2, P3, P4)   /* tracepoint name: omrshr.2261 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_hookFindSharedClass_classFromUnresolvedModule(thr, P1, P2) do { /* tracepoint name: omrshr.2262 */ \
	if ((unsigned char) omrshr_UtActive[2262] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2262u << 8) | omrshr_UtActive[2262]), "\12\377", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_INIT_hookFindSharedClass_classFromUnresolvedModule(thr, P1, P2)   /* tracepoint name: omrshr.2262 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_checkOSCacheHeader_wrongBuildID_3(P1, P2) do { /* tracepoint name: omrshr.2263 */ \
	if ((unsigned char) omrshr_UtActive[2263] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2263u << 8) | omrshr_UtActive[2263]), "\10\10", P1, P2);} \
	} while(0)
#else
#define Trc_SHR_OSC_checkOSCacheHeader_wrongBuildID_3(P1, P2)   /* tracepoint name: omrshr.2263 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_OSC_getCacheDir_j9shmem_getDir_failed1(P1) do { /* tracepoint name: omrshr.2264 */ \
	if ((unsigned char) omrshr_UtActive[2264] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2264u << 8) | omrshr_UtActive[2264]), "\377", P1);} \
	} while(0)
#else
#define Trc_SHR_OSC_getCacheDir_j9shmem_getDir_failed1(P1)   /* tracepoint name: omrshr.2264 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_isFreeDiskSpaceLow_getDirFailed() do { /* tracepoint name: omrshr.2265 */ \
	if ((unsigned char) omrshr_UtActive[2265] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2265u << 8) | omrshr_UtActive[2265]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_isFreeDiskSpaceLow_getDirFailed()   /* tracepoint name: omrshr.2265 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_isFreeDiskSpaceLow_DiskSpaceLow(P1) do { /* tracepoint name: omrshr.2266 */ \
	if ((unsigned char) omrshr_UtActive[2266] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2266u << 8) | omrshr_UtActive[2266]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_isFreeDiskSpaceLow_DiskSpaceLow(P1)   /* tracepoint name: omrshr.2266 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_isFreeDiskSpaceLow_StatFileSystemFailed(P1, P2, P3) do { /* tracepoint name: omrshr.2267 */ \
	if ((unsigned char) omrshr_UtActive[2267] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2267u << 8) | omrshr_UtActive[2267]), "\377\4\377", P1, P2, P3);} \
	} while(0)
#else
#define Trc_SHR_INIT_isFreeDiskSpaceLow_StatFileSystemFailed(P1, P2, P3)   /* tracepoint name: omrshr.2267 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_isFreeDiskSpaceLow_SetMaxSize(P1) do { /* tracepoint name: omrshr.2268 */ \
	if ((unsigned char) omrshr_UtActive[2268] != 0){ \
		omrshr_UtModuleInfo.intf->Trace((void *)NULL, &omrshr_UtModuleInfo, ((2268u << 8) | omrshr_UtActive[2268]), "\10", P1);} \
	} while(0)
#else
#define Trc_SHR_INIT_isFreeDiskSpaceLow_SetMaxSize(P1)   /* tracepoint name: omrshr.2268 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_init_Entry(thr) do { /* tracepoint name: omrshr.2269 */ \
	if ((unsigned char) omrshr_UtActive[2269] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2269u << 8) | omrshr_UtActive[2269]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_init_Entry(thr)   /* tracepoint name: omrshr.2269 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_init_BootClassSharingEnabledByDefault(thr) do { /* tracepoint name: omrshr.2270 */ \
	if ((unsigned char) omrshr_UtActive[2270] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2270u << 8) | omrshr_UtActive[2270]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_init_BootClassSharingEnabledByDefault(thr)   /* tracepoint name: omrshr.2270 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_SHR_INIT_j9shr_init_ExitOnNonFatal(thr) do { /* tracepoint name: omrshr.2271 */ \
	if ((unsigned char) omrshr_UtActive[2271] != 0){ \
		omrshr_UtModuleInfo.intf->Trace(UT_THREAD(thr), &omrshr_UtModuleInfo, ((2271u << 8) | omrshr_UtActive[2271]), NULL);} \
	} while(0)
#else
#define Trc_SHR_INIT_j9shr_init_ExitOnNonFatal(thr)   /* tracepoint name: omrshr.2271 */
#endif

extern UtModuleInfo omrshr_UtModuleInfo;
extern unsigned char omrshr_UtActive[];

#ifndef UT_MODULE_INFO
#define UT_MODULE_INFO omrshr_UtModuleInfo
#endif /* UT_MODULE_INFO */

#ifndef UT_ACTIVE
#define UT_ACTIVE omrshr_UtActive
#endif /* UT_ACTIVE */

#ifdef __cplusplus
} /* extern "C" */
#endif
#endif /* UTE_OMRSHR_MODULE_HEADER */
/*
 * End of file
 */
